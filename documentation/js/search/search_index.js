var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.23,1,2.985]],["body/controllers/AppController.html",[0,1.979,1,4.802,2,1.57,3,0.134,4,0.118,5,0.118,6,4.571,7,0.688,8,1.798,9,6.62,10,1.382,11,0.012,12,0.822,13,5.23,14,1.427,15,1.351,16,0.37,17,5.23,18,0.851,19,4.603,20,4.571,21,0.134,22,0.211,23,2.3,24,2.599,25,1.427,26,5.23,27,0.009,28,0.009]],["title/modules/AppModule.html",[29,1.191,30,2.985]],["body/modules/AppModule.html",[1,3.674,2,1.244,3,0.069,4,0.061,5,0.061,11,0.012,16,0.444,18,0.439,19,4.107,20,2.359,21,0.069,22,0.109,27,0.006,28,0.006,29,1.205,30,6.028,31,1.101,32,1.689,33,2.359,34,2.359,35,2.359,36,4.107,37,4.373,38,4.373,39,4.373,40,4.373,41,4.373,42,4.373,43,4.373,44,4.373,45,4.373,46,4.373,47,4.373,48,1.822,49,1.187,50,1.187,51,2.699,52,1.895,53,3.276,54,2.699,55,2.699,56,2.359,57,1.626,58,1.469,59,2.699,60,2.699,61,1.543,62,1.967,63,2.699,64,2.699,65,2.699,66,2.699,67,1.543,68,1.833,69,2.699,70,2.699,71,1.786,72,2.487,73,1.833,74,2.699,75,2.368,76,1.833,77,2.699,78,2.152,79,1.833,80,2.699,81,2.699,82,2.699,83,2.699,84,2.699,85,2.699,86,2.699,87,2.699,88,2.699,89,2.699,90,2.699,91,2.699,92,1.469,93,2.699]],["title/injectables/AppService.html",[19,2.613,94,0.867]],["body/injectables/AppService.html",[3,0.143,4,0.125,5,0.125,7,0.73,8,1.866,9,6.762,11,0.012,12,0.873,14,1.515,15,1.402,16,0.312,18,0.904,19,4.363,21,0.143,22,0.224,25,1.515,27,0.01,28,0.01,94,1.448,95,2.107,96,4.852,97,5.553,98,3.771]],["title/modules/AuthModule.html",[29,1.191,36,2.613]],["body/modules/AuthModule.html",[3,0.106,4,0.093,5,0.093,11,0.012,16,0.429,18,0.669,21,0.106,22,0.165,27,0.008,28,0.008,29,1.636,31,1.676,32,2.294,36,5.214,48,2.473,49,1.807,50,1.807,52,2.573,53,3.25,61,4.559,62,2.995,99,3.592,100,3.592,101,3.592,102,4.905,103,4.905,104,4.128,105,4.111,106,3.592,107,2.477,108,1.74,109,5.625,110,2.622,111,4.111,112,4.111,113,4.111,114,2.995,115,2.995,116,2.477,117,2.477,118,4.111,119,4.111]],["title/injectables/AuthService.html",[61,2.342,94,0.867]],["body/injectables/AuthService.html",[3,0.084,4,0.074,5,0.074,7,0.43,8,1.306,11,0.012,12,1.088,14,1.888,15,1.597,16,0.318,18,0.533,21,0.084,22,0.132,25,1.888,27,0.007,28,0.007,61,2.736,94,1.013,95,1.242,120,2.588,121,3.441,122,4.786,123,4.786,124,4.786,125,4.786,126,4.183,127,4.786,128,3.272,129,4.786,130,3.272,131,2.012,132,1.287,133,1.006,134,1.949,135,3.41,136,3.043,137,4.786,138,3.272,139,3.41,140,3.272,141,3.272,142,3.272,143,3.272,144,3.272,145,3.272,146,2.087,147,3.272,148,3.272,149,2.087,150,2.86,151,1.972,152,2.588,153,1.385,154,2.222,155,2.588,156,3.272,157,2.913,158,3.272,159,3.272,160,3.272,161,3.272,162,3.272,163,3.272,164,3.272,165,3.272,166,3.272,167,2.86]],["title/entities/Combination.html",[168,2.229,169,2.985]],["body/entities/Combination.html",[3,0.121,4,0.106,5,0.106,7,0.619,10,1.924,11,0.012,12,1.145,15,1.407,16,0.264,21,0.121,22,0.189,27,0.009,28,0.009,92,2.56,132,1.145,133,1.106,169,4.487,170,4.112,171,2.337,172,1.527,173,3.06,174,4.487,175,1.666,176,3.35,177,4.705,178,3.923,179,3.923,180,4.705,181,4.705,182,4.705,183,3.721,184,2.338,185,4.705,186,1.558,187,2.835,188,2.56,189,4.136,190,2.152,191,2.444,192,3.428]],["title/controllers/CombinationsController.html",[0,1.23,193,2.985]],["body/controllers/CombinationsController.html",[0,0.645,2,0.645,3,0.055,4,0.048,5,0.048,7,0.283,8,0.945,10,1.445,11,0.012,12,0.86,14,1.492,15,1.353,16,0.345,18,0.35,21,0.055,22,0.087,23,0.945,24,1.068,25,1.849,27,0.005,28,0.005,108,0.91,121,3.116,131,1.59,132,1.017,133,0.831,134,1.54,136,2.404,153,3.116,157,2.404,172,1.638,193,2.524,194,1.878,195,1.068,196,2.149,197,0.859,198,1.186,199,1.227,200,1.227,201,1.227,202,1.46,203,4.971,204,3.921,205,1.46,206,2.149,207,1.46,208,1.371,209,2.149,210,1.46,211,1.46,212,2.149,213,1.46,214,1.46,215,2.149,216,1.46,217,4.342,218,1.566,219,2.149,220,1.721,221,1.65,222,1.116,223,1.116,224,1.878,225,2.774,226,1.878,227,0.761,228,2.739,229,0.761,230,1.371,231,2.62,232,1.17,233,1.371,234,1.371,235,2.149,236,1.295,237,3.488,238,1.46,239,1.7,240,3.488,241,3.488,242,3.295,243,3.488,244,3.295,245,3.488,246,3.488,247,4.779,248,3.295,249,2.149,250,4.779,251,3.488,252,3.488,253,1.46,254,2.149,255,1.116,256,1.46,257,3.439,258,2.149,259,1.116,260,1.46,261,2.149,262,1.116,263,1.46,264,2.149]],["title/modules/CombinationsModule.html",[29,1.191,37,2.782]],["body/modules/CombinationsModule.html",[2,1.783,3,0.114,4,0.1,5,0.1,11,0.012,16,0.417,18,0.725,21,0.114,22,0.179,27,0.009,28,0.009,29,1.727,31,1.816,32,2.422,37,5.185,48,2.611,49,1.959,50,1.959,52,2.716,57,2.684,58,2.424,107,2.684,108,1.885,114,3.246,115,3.246,116,3.578,117,2.684,193,4.868,225,4.87,226,3.893,265,3.893,266,3.893,267,4.455,268,4.455,269,3.893,270,3.893,271,4.455,272,3.246,273,4.455,274,4.455,275,4.455]],["title/injectables/CombinationsService.html",[94,0.867,225,2.613]],["body/injectables/CombinationsService.html",[3,0.085,4,0.075,5,0.075,7,0.436,8,1.319,11,0.012,12,1.048,14,1.818,16,0.321,18,0.54,21,0.085,22,0.134,25,1.818,27,0.007,28,0.007,94,1.024,95,1.259,121,3.389,131,1.823,132,1.166,133,0.952,134,1.765,136,2.93,153,1.405,157,2.93,169,2.418,172,1.415,175,2.657,197,1.2,198,2.146,199,1.713,200,1.713,201,1.713,204,4.25,217,4.997,225,3.084,227,1.175,228,3.824,229,1.175,269,2.9,270,2.9,276,2.9,277,4.836,278,3.319,279,3.319,280,2.047,281,3.319,282,2.047,283,3.319,284,2.047,285,3.319,286,3.319,287,1.518,288,3.319,289,3.319,290,3.319,291,3.319,292,3.319,293,3.319,294,3.319,295,3.319,296,3.319,297,3.319,298,3.319]],["title/classes/CreateCombinationDto.html",[22,0.165,204,2.613]],["body/classes/CreateCombinationDto.html",[3,0.127,4,0.111,5,0.111,7,0.647,10,1.854,11,0.012,12,1.103,15,1.438,16,0.277,21,0.127,22,0.255,27,0.009,28,0.009,132,1.179,133,1.065,171,2.406,173,3.151,174,4.62,190,2.251,191,2.557,192,3.587,204,4.045,299,1.386,300,6.474,301,3.893,302,4.62,303,4.923,304,4.923,305,2.966,306,4.923,307,3.893,308,2.446,309,3.643,310,2.814,311,4.045]],["title/classes/CreateLevel1Dto.html",[22,0.165,312,2.613]],["body/classes/CreateLevel1Dto.html",[3,0.143,4,0.125,5,0.125,7,0.73,10,1.467,11,0.012,12,0.873,15,1.138,16,0.312,21,0.143,22,0.275,27,0.01,28,0.01,132,1.272,133,0.843,171,2.596,190,2.539,299,1.564,305,3.346,308,2.759,309,3.553,310,3.91,312,4.363,313,5.978,314,4.391,315,5.553]],["title/classes/CreateLevel2Dto.html",[22,0.165,316,2.613]],["body/classes/CreateLevel2Dto.html",[3,0.134,4,0.117,5,0.117,7,0.685,10,1.737,11,0.012,12,1.033,15,1.347,16,0.293,21,0.134,22,0.265,27,0.009,28,0.009,132,1.222,133,0.998,171,2.494,173,3.266,190,2.381,191,2.705,299,1.466,305,3.137,308,2.588,309,3.74,310,2.976,311,3.321,316,4.192,317,6.293,318,4.117,319,5.207,320,5.207,321,5.207]],["title/classes/CreateSubjectDto.html",[22,0.165,322,2.613]],["body/classes/CreateSubjectDto.html",[3,0.127,4,0.111,5,0.111,7,0.647,10,1.854,11,0.012,12,1.103,15,1.438,16,0.277,21,0.127,22,0.255,27,0.009,28,0.009,132,1.179,133,1.065,171,2.406,173,3.151,174,4.62,190,2.251,191,2.557,192,3.587,299,1.386,302,4.62,305,2.966,307,3.893,308,2.446,309,3.643,310,2.814,311,4.045,322,4.045,323,6.474,324,3.343,325,4.923,326,4.923,327,4.923]],["title/classes/CreateTeacherSubjectDto.html",[22,0.165,328,2.613]],["body/classes/CreateTeacherSubjectDto.html",[3,0.159,4,0.139,5,0.139,11,0.011,21,0.159,22,0.248,27,0.01,28,0.01,67,3.525,299,1.737,324,4.188,328,4.649,329,3.715,330,5.389]],["title/classes/CreateTermDto.html",[22,0.165,331,2.613]],["body/classes/CreateTermDto.html",[3,0.134,4,0.117,5,0.117,7,0.685,10,1.737,11,0.012,12,1.033,15,1.347,16,0.293,21,0.134,22,0.265,27,0.009,28,0.009,132,1.222,133,0.998,171,2.494,173,3.266,190,2.381,191,2.705,299,1.466,305,3.137,307,4.117,308,2.588,309,3.74,310,2.976,311,3.321,331,4.192,332,6.293,333,4.117,334,5.207,335,5.207]],["title/classes/CreateWorkspaceDto.html",[22,0.165,336,2.613]],["body/classes/CreateWorkspaceDto.html",[3,0.16,4,0.14,5,0.14,11,0.011,21,0.16,22,0.251,27,0.011,28,0.011,299,1.755,336,4.678,337,5.446,338,4.928]],["title/classes/CreateWorkspaceQuizQuestionDto.html",[22,0.165,339,2.613]],["body/classes/CreateWorkspaceQuizQuestionDto.html",[3,0.157,4,0.138,5,0.138,11,0.011,21,0.157,22,0.246,27,0.01,28,0.01,71,2.161,72,3.184,299,1.718,339,4.62,340,2.237,341,5.332,342,4.825]],["title/classes/CreateWorkspaceQuizQuestionOptionDto.html",[22,0.165,343,2.613]],["body/classes/CreateWorkspaceQuizQuestionOptionDto.html",[3,0.155,4,0.136,5,0.136,11,0.011,21,0.155,22,0.243,27,0.01,28,0.01,71,2.139,72,3.165,75,4.114,299,1.701,340,2.213,343,4.591,344,5.277,345,4.776]],["title/classes/CreateWorkspaceStudentResultDto.html",[22,0.165,346,2.613]],["body/classes/CreateWorkspaceStudentResultDto.html",[3,0.157,4,0.138,5,0.138,11,0.011,21,0.157,22,0.246,27,0.01,28,0.01,71,2.161,78,3.762,299,1.718,340,2.237,346,4.62,347,5.332,348,4.825]],["title/injectables/JwtAuthGuard.html",[94,0.867,232,2.229]],["body/injectables/JwtAuthGuard.html",[3,0.15,4,0.131,5,0.131,11,0.012,16,0.396,18,0.949,21,0.15,22,0.235,27,0.01,28,0.01,94,1.492,95,2.212,110,3.718,186,1.93,232,3.834,349,5.094,350,4.609,351,5.094,352,5.829]],["title/injectables/JwtStrategy.html",[94,0.867,102,2.782]],["body/injectables/JwtStrategy.html",[3,0.119,4,0.105,5,0.105,7,0.611,8,1.667,11,0.012,12,0.961,14,1.268,16,0.383,18,0.757,21,0.119,22,0.187,25,1.268,27,0.009,28,0.009,94,1.293,95,1.764,102,4.149,110,2.965,121,2.888,131,1.352,132,0.865,133,0.706,134,1.309,136,2.044,146,2.965,186,1.54,353,4.063,354,5.339,355,4.972,356,4.649,357,6.11,358,4.649,359,4.649,360,4.649,361,4.063,362,3.676,363,3.676,364,4.063,365,4.063,366,4.063,367,4.649,368,4.649,369,4.649,370,4.649,371,4.649,372,4.649,373,4.649,374,4.649]],["title/entities/Level1.html",[168,2.229,375,2.229]],["body/entities/Level1.html",[3,0.135,4,0.118,5,0.118,7,0.691,10,1.747,11,0.012,12,1.039,15,1.077,16,0.295,21,0.135,22,0.212,27,0.01,28,0.01,92,2.859,132,1.229,133,1.004,171,2.508,172,1.64,175,1.861,176,3.596,178,3.003,179,3.003,184,2.611,186,1.74,187,3.165,188,2.859,189,3.165,190,2.403,375,3.596,376,4.591,377,5.254,378,5.254,379,5.254,380,5.254]],["title/controllers/Level1Controller.html",[0,1.23,381,2.985]],["body/controllers/Level1Controller.html",[0,0.644,2,0.644,3,0.055,4,0.048,5,0.048,7,0.282,8,0.943,10,1.444,11,0.012,12,0.859,14,1.49,15,1.352,16,0.345,18,0.349,21,0.055,22,0.086,23,0.943,24,1.066,25,1.8,27,0.005,28,0.005,108,0.908,121,3.115,131,1.589,132,1.016,133,0.83,134,1.539,136,2.402,153,2.986,157,2.191,172,1.637,195,1.066,197,0.858,198,1.184,199,1.225,200,1.225,201,1.225,202,1.457,203,5.067,205,1.457,207,1.457,208,1.369,210,1.457,211,1.457,213,1.457,214,1.457,216,1.457,220,1.718,221,2.069,222,1.114,223,1.114,227,0.76,229,0.76,230,1.369,231,2.617,232,1.167,233,1.369,234,1.369,236,1.293,237,3.178,238,1.457,240,3.178,241,3.178,242,3.002,243,3.178,244,3.002,245,3.178,246,3.178,248,3.002,251,3.178,252,3.178,253,1.457,255,1.114,256,1.457,259,1.796,260,1.457,262,1.114,263,1.457,312,3.918,375,1.167,381,2.52,382,1.875,383,2.146,384,2.146,385,2.146,386,2.146,387,4.34,388,2.146,389,1.293,390,1.697,391,1.563,392,2.771,393,1.875,394,2.734,395,2.146,396,3.63,397,2.146,398,2.848,399,2.146,400,3.796,401,2.146,402,2.146,403,2.146]],["title/modules/Level1Module.html",[29,1.191,38,2.782]],["body/modules/Level1Module.html",[2,1.825,3,0.119,4,0.104,5,0.104,11,0.012,16,0.442,18,0.751,21,0.119,22,0.186,27,0.009,28,0.009,29,1.767,31,1.881,32,2.478,38,5.236,48,2.672,49,2.028,50,2.028,52,2.78,57,2.779,58,2.51,107,2.779,108,1.952,114,3.361,115,3.361,116,2.779,117,2.779,375,2.51,381,4.953,392,4.918,393,4.031,404,4.031,405,4.031,406,4.613,407,4.613,408,4.031,409,3.361,410,4.613,411,4.613]],["title/injectables/Level1Service.html",[94,0.867,392,2.613]],["body/injectables/Level1Service.html",[3,0.086,4,0.075,5,0.075,7,0.44,8,1.327,11,0.012,12,1.051,14,1.824,16,0.354,18,0.545,21,0.086,22,0.135,25,1.824,27,0.007,28,0.007,94,1.03,95,1.27,121,3.394,131,1.83,132,1.171,133,0.956,134,1.772,136,2.94,153,1.417,157,2.94,172,1.422,175,2.663,197,1.207,198,2.155,199,1.723,200,1.723,201,1.723,227,1.185,229,1.185,280,2.059,282,2.059,284,2.059,287,1.531,312,4.265,375,2.648,387,5.009,392,3.104,394,3.848,408,2.925,412,2.925,413,4.866,414,3.347,415,3.347,416,3.347,417,3.347,418,3.347,419,3.347,420,3.347,421,3.347,422,3.347,423,3.347,424,3.347,425,3.347,426,3.347]],["title/entities/Level2.html",[168,2.229,427,2.468]],["body/entities/Level2.html",[3,0.114,4,0.1,5,0.1,7,0.586,10,1.766,11,0.012,12,1.051,15,1.218,16,0.334,21,0.153,22,0.239,27,0.009,28,0.009,92,2.424,132,1.105,133,1.015,171,2.254,172,1.473,173,2.951,175,1.578,176,3.635,178,3.395,179,3.395,183,3.522,184,2.214,186,1.967,187,3.578,188,3.232,189,4.294,190,2.716,191,3.085,375,2.424,427,3.578,428,3.893,429,4.455,430,4.455,431,4.455,432,4.455,433,3.522,434,3.893,435,3.025]],["title/controllers/Level2Controller.html",[0,1.23,436,2.985]],["body/controllers/Level2Controller.html",[0,0.666,2,0.666,3,0.057,4,0.05,5,0.05,7,0.292,8,0.969,10,1.468,11,0.012,12,0.874,14,1.516,15,1.368,16,0.35,18,0.361,21,0.057,22,0.089,23,0.976,24,1.103,25,1.82,27,0.005,28,0.005,108,0.939,121,3.013,131,1.477,132,0.945,133,0.771,134,1.43,136,2.233,153,3.013,157,2.233,172,1.655,195,1.103,197,0.881,198,1.739,199,1.258,200,1.258,201,1.258,202,1.507,203,4.826,205,1.507,208,1.415,210,1.507,211,1.507,213,1.507,214,1.507,216,1.507,218,1.617,220,1.765,221,1.692,222,1.152,223,1.152,227,0.786,229,0.786,230,1.415,231,2.677,232,1.207,233,1.415,234,1.415,236,1.337,237,3.544,238,1.507,239,1.754,240,3.24,241,3.24,242,3.06,243,3.24,244,3.06,245,3.24,246,3.24,248,3.06,251,3.24,252,3.24,255,1.152,256,1.507,257,3.513,259,1.152,260,1.507,262,1.152,263,1.507,316,3.971,391,1.617,396,3.701,398,2.903,427,1.337,436,2.589,437,1.939,438,2.219,439,2.219,440,2.219,441,2.219,442,4.393,443,2.219,444,2.219,445,2.834,446,1.939,447,2.809,448,2.219,449,2.219,450,2.219,451,2.219,452,2.219,453,2.219,454,2.219]],["title/modules/Level2Module.html",[29,1.191,39,2.782]],["body/modules/Level2Module.html",[2,1.859,3,0.122,4,0.107,5,0.107,11,0.012,16,0.437,18,0.772,21,0.122,22,0.191,27,0.009,28,0.009,29,1.8,31,1.934,32,2.524,39,5.277,48,2.722,49,2.086,50,2.086,52,2.831,57,2.858,58,2.581,107,2.858,108,2.007,116,2.858,117,2.858,272,3.456,427,2.858,436,5.021,445,4.956,446,4.145,455,4.145,456,4.145,457,4.743,458,4.743,459,4.145,460,4.743]],["title/injectables/Level2Service.html",[94,0.867,445,2.613]],["body/injectables/Level2Service.html",[3,0.086,4,0.075,5,0.075,7,0.44,8,1.327,11,0.012,12,1.051,14,1.824,16,0.354,18,0.545,21,0.086,22,0.135,25,1.824,27,0.007,28,0.007,94,1.03,95,1.27,121,3.394,131,1.83,132,1.171,133,0.956,134,1.772,136,2.94,153,1.417,157,2.94,172,1.422,175,2.663,197,1.207,198,2.155,199,1.723,200,1.723,201,1.723,227,1.185,229,1.185,280,2.059,282,2.059,284,2.059,316,4.265,427,2.932,442,4.889,445,3.104,447,3.848,459,2.925,461,2.925,462,4.866,463,3.347,464,3.347,465,3.347,466,3.347,467,3.347,468,3.347,469,3.347,470,3.347,471,3.347,472,3.347,473,3.347,474,3.347,475,3.347,476,3.347,477,3.347]],["title/injectables/LocalAuthGuard.html",[94,0.867,478,3.239]],["body/injectables/LocalAuthGuard.html",[3,0.15,4,0.131,5,0.131,11,0.012,16,0.396,18,0.949,21,0.15,22,0.235,27,0.01,28,0.01,94,1.492,95,2.212,110,3.718,186,1.93,350,4.609,351,5.094,478,5.572,479,5.094,480,5.829]],["title/injectables/LocalStrategy.html",[94,0.867,103,2.782]],["body/injectables/LocalStrategy.html",[3,0.107,4,0.094,5,0.094,7,0.548,8,1.549,11,0.012,12,0.893,14,1.137,15,1.488,16,0.408,18,0.678,21,0.107,22,0.168,23,1.833,25,1.137,27,0.008,28,0.008,61,2.383,62,3.038,94,1.202,95,1.582,98,4.387,103,3.857,104,3.965,110,2.659,121,2.734,131,1.651,132,1.056,133,0.863,134,1.599,135,3.422,139,3.422,153,1.764,157,1.833,186,1.381,287,1.907,354,5.645,355,3.038,361,3.643,362,3.297,364,3.643,365,3.643,366,3.643,481,3.643,482,4.169,483,4.169,484,4.169,485,4.169,486,3.643,487,5.68,488,3.297,489,4.169,490,4.169,491,4.169,492,4.169]],["title/guards/RolesGuard.html",[409,2.985,493,3.239]],["body/guards/RolesGuard.html",[3,0.109,4,0.096,5,0.096,7,0.558,8,1.568,11,0.012,12,0.904,14,1.158,16,0.393,18,0.691,21,0.109,22,0.171,23,1.866,25,1.568,27,0.008,28,0.008,94,1.217,98,2.883,131,1.672,132,1.069,133,0.873,134,1.619,153,2.433,355,3.093,409,4.19,494,4.245,495,3.709,496,6.988,497,4.245,498,7.529,499,4.245,500,5.75,501,6.988,502,4.245,503,4.245,504,5.75,505,3.709,506,3.357,507,4.245,508,2.557,509,4.245,510,4.245,511,5.75,512,4.245,513,4.245,514,4.245,515,3.709,516,4.245,517,4.245,518,4.245]],["title/entities/Subject.html",[168,2.229,519,2.613]],["body/entities/Subject.html",[3,0.121,4,0.106,5,0.106,7,0.621,10,1.927,11,0.012,12,1.147,15,1.41,16,0.265,21,0.121,22,0.19,27,0.009,28,0.009,92,2.57,132,1.148,133,1.108,171,2.343,172,1.531,173,3.068,174,4.499,175,1.673,176,3.359,178,3.931,179,3.931,183,3.736,184,2.348,186,1.564,187,2.846,188,2.57,189,4.144,190,2.16,191,2.454,192,3.442,519,3.938,520,4.128,521,4.724,522,4.724,523,4.724,524,4.724,525,4.724]],["title/controllers/SubjectsController.html",[0,1.23,526,2.985]],["body/controllers/SubjectsController.html",[0,0.675,2,0.675,3,0.058,4,0.051,5,0.051,7,0.296,8,0.979,10,1.478,11,0.012,12,0.88,14,1.526,15,1.374,16,0.352,18,0.366,21,0.058,22,0.091,23,0.989,24,1.117,25,1.828,27,0.005,28,0.005,108,0.952,121,3.148,131,1.626,132,1.04,133,0.85,134,1.575,136,2.46,153,3.024,157,2.25,172,1.663,195,1.117,197,0.891,198,1.229,199,1.272,200,1.272,201,1.272,202,1.527,203,5.008,205,1.527,207,1.527,208,1.434,210,1.527,211,1.527,213,1.527,214,1.527,216,1.527,218,1.638,220,1.784,221,1.71,222,1.168,223,1.168,224,1.965,227,0.796,229,0.796,230,1.434,231,2.701,232,1.223,233,1.434,234,1.434,236,1.355,237,3.568,238,1.527,239,1.778,240,3.265,241,3.265,242,3.084,243,3.265,244,3.084,245,3.265,246,3.265,247,4.472,248,3.084,250,4.472,251,3.265,252,3.265,253,1.527,255,1.168,256,1.527,257,3.544,259,1.168,260,1.527,262,1.168,263,1.527,322,3.992,526,2.616,527,1.965,528,2.249,529,2.249,530,2.249,531,2.249,532,2.249,533,4.415,534,2.249,535,2.859,536,1.965,537,2.29,538,2.249,539,2.249,540,2.249,541,2.249,542,2.249,543,2.249]],["title/modules/SubjectsModule.html",[29,1.191,40,2.782]],["body/modules/SubjectsModule.html",[2,1.864,3,0.122,4,0.107,5,0.107,11,0.012,16,0.426,18,0.775,21,0.122,22,0.192,27,0.009,28,0.009,29,1.805,31,1.942,32,2.531,40,5.283,48,2.729,49,2.094,50,2.094,52,2.838,57,2.869,58,2.591,107,2.869,108,2.016,116,2.869,117,2.869,272,3.47,526,5.031,535,4.962,536,4.162,544,4.162,545,4.162,546,4.763,547,4.763,548,4.162,549,4.162,550,4.763]],["title/injectables/SubjectsService.html",[94,0.867,535,2.613]],["body/injectables/SubjectsService.html",[3,0.086,4,0.075,5,0.075,7,0.438,8,1.322,11,0.012,12,1.049,14,1.82,16,0.321,18,0.542,21,0.086,22,0.134,25,1.82,27,0.007,28,0.007,94,1.026,95,1.263,121,3.391,131,1.825,132,1.167,133,0.953,134,1.768,136,2.933,153,1.409,157,2.933,172,1.417,175,2.659,197,1.202,198,2.149,199,1.716,200,1.716,201,1.716,227,1.179,229,1.179,280,2.051,282,2.051,284,2.051,287,1.522,322,4.255,519,2.123,533,5.001,535,3.091,537,3.091,548,2.908,549,2.908,551,2.908,552,4.846,553,3.328,554,3.328,555,3.328,556,3.328,557,3.328,558,3.328,559,3.328,560,3.328,561,3.328,562,3.328,563,3.328,564,3.328,565,3.328,566,3.328,567,3.328,568,3.328,569,3.328]],["title/entities/TeacherSubject.html",[168,2.229,570,2.985]],["body/entities/TeacherSubject.html",[3,0.098,4,0.086,5,0.086,7,0.503,10,1.86,11,0.012,12,1.107,16,0.376,21,0.098,22,0.154,27,0.008,28,0.008,92,2.083,133,1.069,171,2.032,172,1.328,173,2.661,175,2.493,176,2.914,178,3.823,179,3.823,184,1.903,186,1.268,187,2.307,188,2.083,189,4.03,329,4.395,375,3.361,427,3.721,433,3.027,519,3.94,570,3.902,571,6.374,572,3.346,573,5.355,574,5.355,575,5.355,576,3.829,577,3.829,578,3.829,579,3.829,580,3.829,581,3.346,582,3.829,583,3.829,584,3.829,585,3.829,586,6.176,587,3.829,588,3.829,589,3.829,590,3.829,591,3.829,592,3.829]],["title/controllers/TeacherSubjectController.html",[0,1.23,593,2.985]],["body/controllers/TeacherSubjectController.html",[0,0.953,2,0.953,3,0.082,4,0.072,5,0.072,7,0.417,8,1.277,10,1.729,11,0.012,12,1.029,14,1.785,15,1.521,16,0.345,18,0.517,21,0.082,22,0.128,23,1.396,24,1.578,25,1.785,27,0.007,28,0.007,67,3.508,68,4.65,131,1.784,132,1.141,133,0.932,134,1.728,172,1.698,195,1.578,197,1.161,198,2.101,199,1.658,200,1.658,201,1.658,220,2.763,221,2.23,222,1.649,223,1.649,227,1.124,229,1.124,255,2.431,259,2.431,262,2.431,280,1.344,282,1.344,284,1.344,328,4.367,329,4.125,389,1.913,519,2.986,537,2.986,593,3.411,594,2.774,595,2.774,596,3.175,597,3.175,598,3.175,599,3.175,600,4.935,601,3.175,602,3.547,603,2.774,604,3.175,605,2.025,606,3.175,607,3.175,608,2.156,609,3.175,610,2.156,611,3.175,612,2.156,613,3.175]],["title/modules/TeacherSubjectModule.html",[29,1.191,41,2.782]],["body/modules/TeacherSubjectModule.html",[2,1.935,3,0.13,4,0.114,5,0.114,11,0.012,16,0.399,18,0.822,21,0.13,22,0.203,27,0.009,28,0.009,29,1.874,31,2.059,32,2.628,41,5.366,48,2.834,49,2.22,50,2.22,52,2.948,67,3.684,68,3.429,329,3.043,593,5.173,602,5.04,603,4.413,614,4.413,615,4.413,616,5.05,617,5.05]],["title/injectables/TeacherSubjectService.html",[94,0.867,602,2.613]],["body/injectables/TeacherSubjectService.html",[3,0.088,4,0.077,5,0.077,7,0.448,8,1.344,11,0.012,12,1.059,14,1.974,15,1.38,16,0.325,18,0.554,21,0.088,22,0.137,25,1.836,27,0.007,28,0.007,67,2.816,68,4.766,94,1.043,95,1.292,131,1.845,132,1.18,133,0.964,134,1.787,172,1.741,175,2.675,197,1.222,198,2.172,199,1.745,200,1.745,201,1.745,227,1.206,229,1.206,280,2.085,282,2.085,284,2.085,287,1.557,328,4.294,329,4.228,537,3.143,570,4.906,595,4.306,600,4.915,602,3.143,618,2.976,619,3.406,620,3.406,621,3.406,622,3.406,623,3.406,624,4.572,625,2.313,626,2.313,627,2.313]],["title/entities/Term.html",[168,2.229,435,2.782]],["body/entities/Term.html",[3,0.126,4,0.11,5,0.11,7,0.645,10,1.85,11,0.012,12,1.101,15,1.296,16,0.355,21,0.126,22,0.197,27,0.009,28,0.009,92,2.667,132,1.176,133,1.063,171,2.4,172,1.569,173,3.143,175,1.736,176,3.441,178,3.615,179,3.615,184,2.436,186,1.623,187,2.953,188,2.667,189,3.81,190,2.242,191,2.546,375,2.667,433,3.876,434,4.284,435,4.295,581,4.284,628,4.284,629,4.902,630,4.902,631,4.902]],["title/controllers/TermsController.html",[0,1.23,632,2.985]],["body/controllers/TermsController.html",[0,0.643,2,0.643,3,0.055,4,0.048,5,0.048,7,0.282,8,0.942,10,1.442,11,0.012,12,0.858,14,1.489,15,1.352,16,0.345,18,0.348,21,0.055,22,0.086,23,0.942,24,1.064,25,1.798,27,0.005,28,0.005,108,0.906,121,3.114,131,1.587,132,1.015,133,0.829,134,1.537,136,2.4,153,2.984,157,2.188,172,1.635,195,1.064,197,0.857,198,1.182,199,1.223,200,1.223,201,1.223,202,1.454,203,5.066,205,1.454,207,1.454,208,1.366,210,1.454,211,1.454,213,1.454,214,1.454,216,1.454,218,1.561,220,1.716,221,2.067,222,1.112,223,1.112,227,0.758,229,0.758,230,1.366,231,2.614,232,1.165,233,1.366,234,1.366,236,1.29,237,3.482,238,1.454,240,3.174,241,3.174,242,2.999,243,3.174,244,2.999,245,3.174,246,3.174,248,2.999,251,3.174,252,3.174,253,1.454,255,1.112,256,1.454,259,1.112,260,1.454,262,1.112,263,1.454,331,3.915,389,1.29,390,1.693,391,1.561,396,3.626,398,2.845,400,3.791,632,2.516,633,1.871,634,2.142,635,2.142,636,2.142,637,2.142,638,2.142,639,4.337,640,2.142,641,2.767,642,1.871,643,2.73,644,2.142,645,2.142,646,2.142,647,2.142,648,2.142,649,2.142]],["title/modules/TermsModule.html",[29,1.191,42,2.782]],["body/modules/TermsModule.html",[2,1.859,3,0.122,4,0.107,5,0.107,11,0.012,16,0.426,18,0.772,21,0.122,22,0.191,27,0.009,28,0.009,29,1.8,31,1.934,32,2.524,42,5.277,48,2.722,49,2.086,50,2.086,52,2.831,57,2.858,58,2.581,107,2.858,108,2.007,116,2.858,117,2.858,272,3.456,632,5.021,641,4.956,642,4.145,650,4.145,651,4.145,652,4.743,653,4.743,654,4.743,655,4.743,656,4.743]],["title/injectables/TermsService.html",[94,0.867,641,2.613]],["body/injectables/TermsService.html",[3,0.085,4,0.075,5,0.075,7,0.436,8,1.319,11,0.012,12,1.048,14,1.818,16,0.352,18,0.54,21,0.085,22,0.134,25,1.818,27,0.007,28,0.007,94,1.024,95,1.259,121,3.389,131,1.823,132,1.166,133,0.952,134,1.765,136,2.93,153,1.405,157,2.93,172,1.415,175,2.657,197,1.2,198,2.146,199,1.713,200,1.713,201,1.713,227,1.175,229,1.175,280,2.047,282,2.047,284,2.047,287,1.518,331,4.25,435,3.284,639,4.997,641,3.084,643,3.824,657,2.9,658,4.836,659,3.319,660,3.319,661,3.319,662,3.319,663,3.319,664,3.319,665,3.319,666,3.319,667,3.319,668,3.319,669,3.319,670,3.319,671,3.319,672,3.319,673,3.319,674,3.319]],["title/classes/UpdateCombinationDto.html",[22,0.165,217,2.782]],["body/classes/UpdateCombinationDto.html",[3,0.149,4,0.131,5,0.131,11,0.012,16,0.395,21,0.149,22,0.233,27,0.01,28,0.01,186,1.921,197,1.439,204,3.7,217,4.771,228,4.586,299,1.633,301,4.586,675,5.068,676,3.013,677,2.882,678,2.882,679,5.8]],["title/classes/UpdateLevel1Dto.html",[22,0.165,387,2.782]],["body/classes/UpdateLevel1Dto.html",[3,0.149,4,0.131,5,0.131,11,0.012,16,0.395,21,0.149,22,0.233,27,0.01,28,0.01,186,1.921,197,1.439,299,1.633,312,3.7,314,4.586,387,4.771,394,4.586,676,3.013,677,2.882,678,2.882,680,5.068,681,5.8]],["title/classes/UpdateLevel2Dto.html",[22,0.165,442,2.782]],["body/classes/UpdateLevel2Dto.html",[3,0.127,4,0.111,5,0.111,7,0.647,10,1.676,11,0.012,12,0.997,15,1.3,16,0.394,21,0.127,22,0.255,27,0.009,28,0.009,132,1.179,133,0.963,171,2.406,173,3.151,186,1.63,190,2.251,191,2.557,197,1.221,299,1.386,302,3.587,305,2.966,308,2.446,309,3.294,310,2.814,311,3.14,316,3.14,318,3.893,442,4.306,447,3.893,676,2.557,677,2.446,678,2.446,682,6.13,683,4.923,684,4.923,685,4.302,686,4.923]],["title/classes/UpdateSubjectDto.html",[22,0.165,533,2.782]],["body/classes/UpdateSubjectDto.html",[3,0.149,4,0.131,5,0.131,11,0.012,16,0.395,21,0.149,22,0.233,27,0.01,28,0.01,186,1.921,197,1.439,299,1.633,322,3.7,324,3.939,533,4.771,537,3.7,676,3.013,677,2.882,678,2.882,687,5.068,688,5.8]],["title/classes/UpdateTeacherSubjectDto.html",[22,0.165,600,2.782]],["body/classes/UpdateTeacherSubjectDto.html",[3,0.147,4,0.129,5,0.129,11,0.012,16,0.391,21,0.147,22,0.23,27,0.01,28,0.01,67,3.98,186,1.893,197,1.418,299,1.609,324,3.881,328,3.645,329,3.443,537,3.645,600,4.729,676,2.968,677,2.84,678,2.84,689,4.994,690,5.715]],["title/classes/UpdateTermDto.html",[22,0.165,639,2.782]],["body/classes/UpdateTermDto.html",[3,0.124,4,0.109,5,0.109,7,0.634,10,1.653,11,0.012,12,0.984,15,1.283,16,0.39,21,0.124,22,0.252,27,0.009,28,0.009,132,1.164,133,0.95,171,2.374,173,3.109,186,1.597,190,2.205,191,2.504,197,1.196,299,1.358,302,3.513,305,2.905,308,2.396,309,3.25,310,3.576,311,3.075,331,3.075,333,3.812,639,4.249,643,3.812,676,2.504,677,2.396,678,2.396,685,4.213,691,6.069,692,4.821,693,4.821,694,4.821,695,4.821,696,4.821]],["title/classes/UpdateWorkspaceDto.html",[22,0.165,697,2.782]],["body/classes/UpdateWorkspaceDto.html",[3,0.149,4,0.131,5,0.131,11,0.012,16,0.395,21,0.149,22,0.233,27,0.01,28,0.01,186,1.921,197,1.439,299,1.633,336,3.7,338,4.586,676,3.013,677,2.882,678,2.882,697,4.771,698,5.068,699,4.586,700,5.8]],["title/classes/UpdateWorkspaceQuizQuestionDto.html",[22,0.165,701,2.782]],["body/classes/UpdateWorkspaceQuizQuestionDto.html",[3,0.145,4,0.127,5,0.127,11,0.012,16,0.388,21,0.145,22,0.227,27,0.01,28,0.01,71,2.444,72,3.281,186,1.865,197,1.397,299,1.586,339,3.593,340,2.064,342,4.454,676,2.926,677,2.799,678,2.799,701,4.687,702,4.922,703,4.454,704,5.633]],["title/classes/UpdateWorkspaceQuizQuestionOptionDto.html",[22,0.165,705,2.782]],["body/classes/UpdateWorkspaceQuizQuestionOptionDto.html",[3,0.143,4,0.125,5,0.125,11,0.012,16,0.384,21,0.143,22,0.224,27,0.01,28,0.01,71,2.423,72,3.26,75,4.238,186,1.839,197,1.377,299,1.564,340,2.035,343,3.542,345,4.391,676,2.884,677,2.759,678,2.759,705,4.646,706,4.852,707,4.391,708,5.553]],["title/classes/UpdateWorkspaceStudentResultDto.html",[22,0.165,709,2.782]],["body/classes/UpdateWorkspaceStudentResultDto.html",[3,0.145,4,0.127,5,0.127,11,0.012,16,0.388,21,0.145,22,0.227,27,0.01,28,0.01,71,2.444,78,3.876,186,1.865,197,1.397,299,1.586,340,2.064,346,3.593,348,4.454,676,2.926,677,2.799,678,2.799,709,4.687,710,4.922,711,4.454,712,5.633]],["title/controllers/UserController.html",[0,1.23,713,2.985]],["body/controllers/UserController.html",[0,1.005,2,1.005,3,0.086,4,0.075,5,0.075,7,0.44,8,1.327,10,1.515,11,0.012,12,0.901,14,1.564,16,0.392,18,0.545,21,0.086,22,0.135,23,1.472,25,1.717,27,0.007,28,0.007,98,2.273,104,3.277,108,1.417,121,2.426,131,1.667,132,1.066,133,0.871,134,1.614,136,1.472,151,4.203,152,2.647,153,2.426,157,1.472,195,1.663,197,1.207,198,1.666,203,4.45,207,2.273,208,2.135,220,1.663,221,1.594,231,3.454,232,1.821,233,2.135,234,2.135,236,2.017,237,2.135,240,2.135,241,2.135,242,2.017,243,2.135,244,2.017,245,2.135,246,2.135,248,2.017,251,2.135,252,2.135,253,2.273,390,2.647,391,2.439,396,2.439,398,1.913,488,2.647,605,2.135,713,3.546,714,2.925,715,4.252,716,3.347,717,4.737,718,4.866,719,3.347,720,3.347,721,3.347,722,3.347,723,3.347,724,3.347,725,2.925,726,3.347,727,3.347,728,3.347,729,3.347,730,3.347,731,3.347,732,3.347]],["title/modules/UserModule.html",[29,1.191,43,2.782]],["body/modules/UserModule.html",[2,1.731,3,0.11,4,0.096,5,0.096,11,0.012,16,0.433,18,0.693,21,0.11,22,0.172,27,0.008,28,0.008,29,1.676,31,1.737,32,2.35,36,4.808,43,5.395,48,2.534,49,1.873,50,1.873,52,2.636,53,3.369,57,2.567,58,2.318,104,4.632,106,3.723,107,2.567,108,1.803,114,3.104,115,3.104,116,2.567,117,2.567,149,2.717,488,3.369,713,4.76,733,3.723,734,4.26,735,4.26,736,3.723,737,4.26,738,4.26,739,4.26,740,4.26,741,4.26,742,4.26]],["title/injectables/UserService.html",[94,0.867,104,2.342]],["body/injectables/UserService.html",[3,0.064,4,0.056,5,0.056,7,0.328,8,1.064,11,0.012,12,0.853,14,1.31,16,0.398,18,0.406,21,0.064,22,0.101,25,1.778,27,0.006,28,0.006,58,1.359,61,3.566,62,1.82,94,0.826,95,0.948,98,1.696,104,2.23,108,1.057,121,2.933,126,3.409,131,1.396,132,0.893,133,0.729,134,1.352,136,2.111,139,2.893,146,1.593,149,2.489,150,2.183,151,3.547,152,1.975,153,2.933,154,1.696,155,1.975,157,2.743,167,2.183,172,0.968,184,1.241,221,1.19,231,3.927,236,2.351,242,2.351,287,1.142,355,2.843,363,4.291,398,3.566,508,2.351,715,2.183,717,3.998,725,2.183,743,1.975,744,4.801,745,5.426,746,3.902,747,2.498,748,2.498,749,3.902,750,2.498,751,2.498,752,3.902,753,2.498,754,2.498,755,2.498,756,2.183,757,2.498,758,2.183,759,2.498,760,2.498,761,2.498,762,2.183,763,1.82,764,2.498,765,3.902,766,2.498,767,2.498,768,3.902,769,2.498,770,2.498,771,3.902,772,2.498,773,2.183,774,2.498,775,2.498,776,3.902,777,2.498,778,2.498,779,2.498,780,2.498,781,2.498,782,3.902,783,2.498,784,2.498,785,2.498,786,3.902,787,2.498,788,2.498,789,3.902,790,2.498,791,2.498,792,2.498,793,2.498,794,2.498,795,3.902,796,3.902]],["title/classes/Workspace.html",[22,0.165,71,1.451]],["body/classes/Workspace.html",[3,0.137,4,0.12,5,0.12,7,0.7,10,1.762,11,0.012,12,1.048,15,1.092,16,0.299,21,0.137,22,0.214,27,0.01,28,0.01,71,2.361,132,1.24,133,1.012,171,2.53,172,1.654,175,1.886,176,3.627,178,3.044,179,3.044,184,2.646,188,2.898,189,3.209,190,2.435,299,1.5,797,4.654,798,5.326,799,5.326,800,5.326]],["title/classes/WorkspaceQuizQuestion.html",[22,0.165,801,2.985]],["body/classes/WorkspaceQuizQuestion.html",[3,0.158,4,0.138,5,0.138,11,0.011,21,0.158,22,0.247,27,0.01,28,0.01,72,3.194,299,1.727,340,2.248,801,5.294,802,5.36,803,5.36]],["title/classes/WorkspaceQuizQuestionOption.html",[22,0.165,804,2.985]],["body/classes/WorkspaceQuizQuestionOption.html",[3,0.156,4,0.137,5,0.137,11,0.011,21,0.156,22,0.244,27,0.01,28,0.01,72,3.175,75,4.127,299,1.71,340,2.225,804,5.261,805,5.305,806,5.305]],["title/controllers/WorkspaceQuizQuestionOptionsController.html",[0,1.23,807,2.985]],["body/controllers/WorkspaceQuizQuestionOptionsController.html",[0,0.873,2,0.873,3,0.075,4,0.066,5,0.066,7,0.382,8,1.196,10,1.666,11,0.012,12,0.991,14,1.72,15,1.485,16,0.33,18,0.473,21,0.075,22,0.117,23,1.278,24,1.445,25,1.72,27,0.006,28,0.006,71,2.081,72,3.492,75,4.54,76,4.501,131,1.708,132,1.093,133,0.892,134,1.655,172,1.644,195,1.445,197,1.087,198,2.012,199,1.552,200,1.552,201,1.552,220,2.622,221,2.088,222,1.51,223,1.51,227,1.03,229,1.03,255,2.277,259,2.277,262,2.277,280,1.23,282,1.23,284,1.23,340,2.429,343,4.227,389,1.751,605,1.854,608,1.974,610,1.974,612,1.974,705,4.808,707,3.466,756,3.83,807,3.194,808,2.54,809,2.54,810,2.907,811,2.907,812,2.907,813,2.907,814,2.907,815,3.366,816,2.54,817,2.299,818,2.907,819,2.907,820,2.907,821,2.907,822,2.907]],["title/modules/WorkspaceQuizQuestionOptionsModule.html",[29,1.191,44,2.782]],["body/modules/WorkspaceQuizQuestionOptionsModule.html",[2,1.894,3,0.125,4,0.11,5,0.11,11,0.012,16,0.393,18,0.794,21,0.125,22,0.197,27,0.009,28,0.009,29,1.834,31,1.991,32,2.572,44,5.318,48,2.773,49,2.146,50,2.146,52,2.884,71,2.234,72,3.247,75,4.221,76,3.315,340,1.789,807,5.091,815,4.995,816,4.266,823,4.266,824,4.266,825,4.882,826,4.882]],["title/injectables/WorkspaceQuizQuestionOptionsService.html",[94,0.867,815,2.613]],["body/injectables/WorkspaceQuizQuestionOptionsService.html",[3,0.081,4,0.071,5,0.071,7,0.414,8,1.269,11,0.012,12,1.026,14,1.927,15,1.337,16,0.311,18,0.512,21,0.081,22,0.127,25,1.779,27,0.007,28,0.007,71,1.648,72,3.464,75,4.503,76,4.636,94,0.985,95,1.195,131,1.777,132,1.137,133,0.928,134,1.721,172,1.694,175,2.622,197,1.154,198,2.093,199,1.648,200,1.648,201,1.648,227,1.115,229,1.115,280,1.969,282,1.969,284,1.969,287,1.44,340,2.502,343,4.16,624,4.429,625,2.139,626,2.139,627,2.139,705,4.796,707,3.68,804,4.454,809,4.066,815,2.968,827,2.752,828,3.149,829,3.149,830,3.149,831,3.149,832,3.149,833,3.149]],["title/controllers/WorkspaceQuizQuestionsController.html",[0,1.23,834,2.985]],["body/controllers/WorkspaceQuizQuestionsController.html",[0,0.911,2,0.911,3,0.078,4,0.068,5,0.068,7,0.399,8,1.235,10,1.697,11,0.012,12,1.01,14,1.752,15,1.503,16,0.337,18,0.494,21,0.078,22,0.122,23,1.334,24,1.508,25,1.752,27,0.007,28,0.007,71,2.126,72,3.516,73,4.574,131,1.745,132,1.117,133,0.912,134,1.691,172,1.671,195,1.508,197,1.123,198,2.056,199,1.603,200,1.603,201,1.603,220,2.691,221,2.157,222,1.576,223,1.576,227,1.075,229,1.075,255,2.352,259,2.352,262,2.352,280,1.284,282,1.284,284,1.284,339,4.296,340,2.469,389,1.829,605,1.936,608,2.061,610,2.061,612,2.061,701,4.871,703,3.58,817,2.4,834,3.299,835,2.652,836,4.527,837,2.652,838,3.035,839,3.035,840,3.035,841,3.035,842,3.035,843,3.454,844,2.652,845,3.035,846,3.035,847,3.035,848,3.035,849,3.035]],["title/modules/WorkspaceQuizQuestionsModule.html",[29,1.191,45,2.782]],["body/modules/WorkspaceQuizQuestionsModule.html",[2,1.914,3,0.128,4,0.112,5,0.112,11,0.012,16,0.396,18,0.808,21,0.128,22,0.2,27,0.009,28,0.009,29,1.854,31,2.024,32,2.6,45,5.342,48,2.803,49,2.183,50,2.183,52,2.916,71,2.258,72,3.268,73,3.371,340,1.819,834,5.132,843,5.017,844,4.338,850,4.338,851,4.338,852,4.964,853,4.964]],["title/injectables/WorkspaceQuizQuestionsService.html",[94,0.867,843,2.613]],["body/injectables/WorkspaceQuizQuestionsService.html",[3,0.084,4,0.074,5,0.074,7,0.43,8,1.306,11,0.012,12,1.042,14,1.95,15,1.358,16,0.318,18,0.533,21,0.084,22,0.132,25,1.807,27,0.007,28,0.007,71,1.695,72,3.487,73,4.7,94,1.013,95,1.242,131,1.81,132,1.158,133,0.946,134,1.753,172,1.717,175,2.648,197,1.187,198,2.132,199,1.695,200,1.695,201,1.695,227,1.159,229,1.159,280,2.026,282,2.026,284,2.026,287,1.497,339,4.226,340,2.537,624,4.499,625,2.222,626,2.222,627,2.222,701,4.855,703,3.785,801,4.537,837,4.183,843,3.053,854,2.86,855,3.272,856,3.272,857,3.272,858,3.272,859,3.272,860,3.272]],["title/classes/WorkspaceStudentResult.html",[22,0.165,861,2.985]],["body/classes/WorkspaceStudentResult.html",[3,0.158,4,0.138,5,0.138,11,0.011,21,0.158,22,0.247,27,0.01,28,0.01,78,3.774,299,1.727,340,2.248,861,5.294,862,5.36,863,5.36]],["title/controllers/WorkspaceStudentResultsController.html",[0,1.23,864,2.985]],["body/controllers/WorkspaceStudentResultsController.html",[0,0.911,2,0.911,3,0.078,4,0.068,5,0.068,7,0.399,8,1.235,10,1.697,11,0.012,12,1.01,14,1.752,15,1.503,16,0.337,18,0.494,21,0.078,22,0.122,23,1.334,24,1.508,25,1.752,27,0.009,28,0.007,71,2.126,78,4.154,79,4.574,131,1.745,132,1.117,133,0.912,134,1.691,172,1.671,195,1.508,197,1.123,198,2.056,199,1.603,200,1.603,201,1.603,220,2.691,221,2.157,222,1.576,223,1.576,227,1.075,229,1.075,255,2.352,259,2.352,262,2.352,280,1.284,282,1.284,284,1.284,340,2.469,346,4.296,389,1.829,605,1.936,608,2.061,610,2.061,612,2.061,709,4.871,711,3.58,817,2.4,864,3.299,865,2.652,866,2.652,867,3.035,868,3.035,869,3.035,870,3.035,871,3.035,872,3.454,873,2.652,874,3.035,875,3.035,876,3.035,877,3.035,878,3.035]],["title/modules/WorkspaceStudentResultsModule.html",[29,1.191,46,2.782]],["body/modules/WorkspaceStudentResultsModule.html",[2,1.914,3,0.128,4,0.112,5,0.112,11,0.012,16,0.396,18,0.808,21,0.128,22,0.2,27,0.009,28,0.009,29,1.854,31,2.024,32,2.6,46,5.342,48,2.803,49,2.183,50,2.183,52,2.916,71,2.258,78,3.86,79,3.371,340,1.819,864,5.132,872,5.017,873,4.338,879,4.338,880,4.338,881,4.964,882,4.964]],["title/injectables/WorkspaceStudentResultsService.html",[94,0.867,872,2.613]],["body/injectables/WorkspaceStudentResultsService.html",[3,0.084,4,0.074,5,0.074,7,0.43,8,1.306,11,0.012,12,1.042,14,1.95,15,1.358,16,0.318,18,0.533,21,0.084,22,0.132,25,1.807,27,0.007,28,0.007,71,1.695,78,4.12,79,4.7,94,1.013,95,1.242,131,1.81,132,1.158,133,0.946,134,1.753,172,1.717,175,2.648,197,1.187,198,2.132,199,1.695,200,1.695,201,1.695,227,1.159,229,1.159,280,2.026,282,2.026,284,2.026,287,1.497,340,2.537,346,4.226,624,4.499,625,2.222,626,2.222,627,2.222,709,4.855,711,3.785,861,4.537,866,4.183,872,3.053,883,2.86,884,3.272,885,3.272,886,3.272,887,3.272,888,3.272,889,3.272]],["title/controllers/WorkspacesController.html",[0,1.23,890,2.985]],["body/controllers/WorkspacesController.html",[0,0.999,2,0.999,3,0.086,4,0.075,5,0.075,7,0.438,8,1.322,10,1.763,11,0.012,12,1.049,14,1.82,15,1.539,16,0.353,18,0.542,21,0.086,22,0.134,23,1.463,24,1.654,25,1.82,27,0.007,28,0.007,131,1.825,132,1.167,133,0.953,134,1.768,172,1.727,195,1.654,197,1.202,198,2.149,199,1.716,200,1.716,201,1.716,220,2.84,221,2.308,222,1.729,223,1.729,227,1.179,229,1.179,255,2.517,259,2.517,262,2.517,280,1.409,282,1.409,284,1.409,336,4.441,389,2.005,605,2.123,608,2.26,610,2.26,612,2.26,697,5.001,699,3.832,890,3.531,891,2.908,892,2.908,893,2.908,894,3.328,895,3.328,896,3.328,897,3.328,898,3.328,899,3.645,900,2.908,901,3.328,902,3.328,903,3.328,904,3.328,905,3.328,906,3.328]],["title/modules/WorkspacesModule.html",[29,1.191,47,2.782]],["body/modules/WorkspacesModule.html",[2,1.957,3,0.132,4,0.116,5,0.116,11,0.012,16,0.402,18,0.836,21,0.132,22,0.207,27,0.009,28,0.009,29,1.895,31,2.095,32,2.658,47,5.39,48,2.866,49,2.259,50,2.259,52,2.981,890,5.215,899,5.063,900,4.49,907,4.49,908,4.49,909,5.139,910,5.139]],["title/injectables/WorkspacesService.html",[94,0.867,899,2.613]],["body/injectables/WorkspacesService.html",[3,0.091,4,0.08,5,0.08,7,0.467,8,1.385,11,0.012,12,1.076,14,1.999,15,1.403,16,0.333,18,0.578,21,0.091,22,0.143,25,1.866,27,0.007,28,0.007,71,2.29,94,1.075,95,1.347,131,1.88,132,1.203,133,0.982,134,1.821,172,1.766,175,2.702,197,1.259,198,2.214,199,1.798,200,1.798,201,1.798,227,1.257,229,1.257,280,2.149,282,2.149,284,2.149,287,1.624,336,4.364,624,4.647,625,2.411,626,2.411,627,2.411,697,4.976,699,4.014,892,3.102,893,4.436,899,3.238,911,3.102,912,3.55,913,3.55,914,3.55,915,3.55,916,3.55]],["title/coverage.html",[917,4.438]],["body/coverage.html",[0,1.932,1,1.157,5,0.036,6,1.387,11,0.012,19,1.012,22,0.305,27,0.004,28,0.004,61,0.907,67,1.54,68,1.83,71,1.902,72,3.183,73,1.83,75,3.484,76,1.83,78,3.166,79,1.83,94,1.483,96,1.387,102,1.078,103,1.078,104,0.907,120,2.131,133,0.241,149,1.012,151,0.956,154,1.83,168,2.922,169,1.157,170,1.387,193,1.157,194,1.387,204,1.012,217,1.078,225,1.012,232,0.864,276,1.387,287,0.726,300,1.387,301,2.131,312,1.012,313,1.387,314,2.131,316,1.012,317,1.387,318,2.131,322,1.012,323,1.387,324,2.81,328,1.012,329,2.792,330,1.387,331,1.012,332,1.387,333,2.131,336,1.012,337,1.387,338,2.131,339,1.012,340,2.497,341,1.387,342,2.131,343,1.012,344,1.387,345,2.131,346,1.012,347,1.387,348,2.131,349,1.387,350,2.131,353,1.387,375,0.864,376,1.387,381,1.157,382,1.387,387,1.078,392,1.012,398,0.907,409,1.157,412,1.387,427,0.956,428,1.387,435,1.078,436,1.157,437,1.387,442,1.078,445,1.012,461,1.387,478,1.255,479,1.387,481,1.387,493,1.255,495,1.387,506,1.255,519,1.012,520,1.387,526,1.157,527,1.387,533,1.078,535,1.012,551,1.387,570,1.157,571,1.387,572,1.387,593,1.157,594,1.387,600,1.078,602,1.012,618,1.387,628,1.387,632,1.157,633,1.387,639,1.078,641,1.012,657,1.387,675,1.387,680,1.387,682,1.387,687,1.387,689,1.387,691,1.387,697,1.078,698,1.387,701,1.078,702,1.387,705,1.078,706,1.387,709,1.078,710,1.387,713,1.157,714,1.387,717,1.078,743,2.131,763,1.157,797,1.387,801,1.157,802,1.387,803,1.387,804,1.157,805,1.387,806,1.387,807,1.157,808,1.387,815,1.012,827,1.387,834,1.157,835,1.387,843,1.012,854,1.387,861,1.157,862,1.387,863,1.387,864,1.157,865,1.387,872,1.012,883,1.387,890,1.157,891,1.387,899,1.012,911,1.387,917,1.255,918,1.587,919,1.587,920,1.587,921,8.392,922,3.511,923,2.355,924,6.096,925,1.387,926,7.896,927,5.89,928,7.238,929,3.511,930,1.387,931,1.587,932,1.387,933,3.511,934,1.587,935,1.387,936,1.387,937,1.387,938,1.387,939,1.157,940,4.401,941,1.387,942,1.387,943,1.387,944,1.387,945,1.387,946,1.587,947,1.587]],["title/classes/createUserDto.html",[22,0.165,717,2.782]],["body/classes/createUserDto.html",[3,0.106,4,0.093,5,0.093,7,0.541,10,1.971,11,0.012,12,1.173,15,1.48,16,0.36,21,0.106,22,0.226,27,0.008,28,0.008,133,1.133,135,3.389,139,3.389,146,3.588,151,4.351,171,2.135,172,1.395,175,1.456,176,3.489,184,2.043,186,1.863,188,2.237,299,1.158,308,2.043,309,3.582,310,4.128,508,3.389,717,3.82,935,3.592,948,4.448,949,4.448,950,5.625,951,4.111,952,4.111,953,4.111,954,4.111,955,4.111,956,4.111,957,3.592,958,4.111,959,4.111,960,4.111,961,3.592,962,3.592,963,4.111]],["title/dependencies.html",[32,2.011,964,3.411]],["body/dependencies.html",[11,0.012,18,0.703,22,0.234,27,0.008,28,0.008,32,1.763,56,3.778,58,2.352,108,1.83,110,2.757,154,2.936,184,2.148,230,4.198,308,2.148,362,5.204,363,3.418,486,3.778,505,3.778,677,2.148,678,2.148,762,3.778,965,4.323,966,4.323,967,6.581,968,4.323,969,4.323,970,4.323,971,4.323,972,4.323,973,4.323,974,4.323,975,4.323,976,4.323,977,4.323,978,4.323,979,4.323,980,4.323,981,4.323,982,4.323,983,4.323,984,5.821,985,4.323,986,4.323,987,4.323,988,4.323,989,4.323,990,4.323,991,4.323,992,4.323,993,4.323,994,4.323,995,4.323,996,4.323,997,4.323,998,4.323,999,4.323,1000,4.323,1001,4.323,1002,4.323,1003,4.323,1004,4.323]],["title/miscellaneous/enumerations.html",[1005,2.176,1006,4.311]],["body/miscellaneous/enumerations.html",[7,0.786,11,0.012,27,0.01,28,0.01,67,4.089,78,3.716,248,4.31,508,4.31,1005,3.813,1006,5.224,1007,5.978,1008,5.978,1009,6.691]],["title/miscellaneous/functions.html",[1005,2.176,1010,4.311]],["body/miscellaneous/functions.html",[7,0.833,11,0.011,27,0.011,28,0.011,930,5.534,932,6.855,1005,4.04,1010,5.534,1011,6.333]],["title/index.html",[7,0.448,1012,3.411,1013,3.411]],["body/index.html",[4,0.098,11,0.012,27,0.008,28,0.008,758,3.806,917,3.444,1014,4.355,1015,4.355,1016,5.85,1017,4.355,1018,4.355,1019,4.355,1020,4.355,1021,4.355,1022,4.355,1023,4.355,1024,6.606,1025,4.355,1026,4.355,1027,4.355,1028,7.75,1029,4.355,1030,4.355,1031,4.355,1032,7.586,1033,4.355,1034,4.355,1035,5.85,1036,4.355,1037,4.355,1038,4.355,1039,4.355,1040,5.85,1041,5.85,1042,4.355,1043,4.355,1044,4.355,1045,5.85,1046,5.85,1047,4.355,1048,4.355,1049,4.355,1050,4.355,1051,4.355,1052,3.806,1053,4.355,1054,4.355,1055,4.355,1056,4.355,1057,4.355,1058,4.355,1059,4.355,1060,4.355,1061,4.355,1062,4.355,1063,4.355,1064,4.355,1065,4.355,1066,4.355,1067,4.355,1068,4.355,1069,4.355,1070,4.355]],["title/classes/loginUserDto.html",[22,0.165,151,2.468]],["body/classes/loginUserDto.html",[3,0.138,4,0.121,5,0.121,7,0.703,10,1.767,11,0.012,12,1.051,15,1.37,16,0.301,21,0.138,22,0.269,27,0.01,28,0.01,133,1.015,135,4.028,139,4.028,151,4.028,171,2.537,299,1.507,308,2.658,309,3.472,936,4.675,949,5.286,957,4.675,961,4.675,962,4.675,1071,5.35,1072,5.35]],["title/modules.html",[31,2.288]],["body/modules.html",[11,0.009,27,0.009,28,0.009,30,3.513,31,1.966,36,3.075,37,3.274,38,3.274,39,3.274,40,3.274,41,3.274,42,3.274,43,3.274,44,3.274,45,3.274,46,3.274,47,3.274,1052,7.307,1073,8.362,1074,8.362,1075,8.362]],["title/overview.html",[1076,4.904]],["body/overview.html",[2,0.858,11,0.012,19,3.331,27,0.006,28,0.006,30,6.034,31,1.165,32,1.764,33,2.497,34,2.497,35,2.497,36,4.886,37,4.25,38,4.25,39,4.25,40,4.25,41,4.25,42,4.25,43,4.783,44,4.25,45,4.25,46,4.25,47,4.25,48,1.902,49,1.256,50,1.256,61,3.909,92,1.555,95,1.084,99,2.497,100,2.497,101,2.497,102,3.546,103,3.546,104,4.026,225,3.331,244,2.607,265,2.497,266,2.497,299,0.805,392,3.331,404,2.497,405,2.497,445,3.331,455,2.497,456,2.497,493,2.259,535,3.331,544,2.497,545,2.497,602,3.331,614,2.497,615,2.497,641,3.331,650,2.497,651,2.497,733,2.497,736,2.497,773,2.497,815,3.331,823,2.497,824,2.497,843,3.331,850,2.497,851,2.497,872,3.331,879,2.497,880,2.497,899,3.331,907,2.497,908,2.497,939,2.082,1076,2.497,1077,2.857,1078,2.857,1079,2.857,1080,2.857]],["title/entities/userEntity.html",[149,2.613,168,2.229]],["body/entities/userEntity.html",[3,0.084,4,0.074,5,0.074,7,0.43,10,1.829,11,0.012,12,1.088,15,1.558,16,0.318,21,0.084,22,0.193,27,0.007,28,0.007,78,2.486,92,1.781,132,0.89,133,1.051,135,3.992,139,3.992,146,4.226,149,3.053,168,1.781,171,1.816,172,1.404,175,1.695,176,3.079,178,1.87,179,3.559,184,1.626,186,1.084,187,2.884,308,1.626,309,3.441,398,3.559,508,3.752,515,4.183,937,2.86,948,4.475,949,3.785,1081,6.227,1082,3.272,1083,6.048,1084,3.272,1085,3.272,1086,4.786,1087,3.272,1088,3.272,1089,3.272,1090,3.272,1091,3.272,1092,3.272,1093,6.921,1094,4.786,1095,3.272,1096,3.272,1097,3.272,1098,6.227,1099,6.227,1100,3.272,1101,3.272,1102,3.272,1103,3.272,1104,3.272,1105,3.272]],["title/interfaces/userInterface.html",[763,2.985,939,2.985]],["body/interfaces/userInterface.html",[3,0.121,4,0.106,5,0.106,7,0.619,11,0.012,15,1.676,21,0.121,27,0.009,28,0.009,133,1.177,134,2.303,135,4.136,139,4.136,146,4.378,171,2.337,172,1.703,175,2.181,188,2.56,508,4.136,763,4.487,938,4.112,939,3.428,948,5.428,1106,4.705,1107,4.705,1108,4.705,1109,4.705,1110,4.705,1111,4.705]],["title/miscellaneous/variables.html",[1005,2.176,1112,4.311]],["body/miscellaneous/variables.html",[7,0.539,11,0.012,15,0.84,27,0.008,28,0.008,120,3.239,133,1.046,135,2.468,154,4.676,155,4.438,287,1.873,398,3.208,506,4.438,508,2.468,743,3.239,923,3.58,925,6.303,940,3.58,941,5.594,942,5.594,943,4.904,944,4.904,945,5.594,1005,2.613,1009,6.966,1083,6.966,1112,3.58,1113,4.096,1114,4.096,1115,7.449,1116,5.612,1117,6.401,1118,4.096,1119,4.096,1120,4.096,1121,4.096,1122,4.096,1123,4.096,1124,4.096,1125,4.096,1126,4.096,1127,4.096,1128,4.096]]],"invertedIndex":[["",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"entities/Combination.html":{},"controllers/CombinationsController.html":{},"modules/CombinationsModule.html":{},"injectables/CombinationsService.html":{},"classes/CreateCombinationDto.html":{},"classes/CreateLevel1Dto.html":{},"classes/CreateLevel2Dto.html":{},"classes/CreateSubjectDto.html":{},"classes/CreateTeacherSubjectDto.html":{},"classes/CreateTermDto.html":{},"classes/CreateWorkspaceDto.html":{},"classes/CreateWorkspaceQuizQuestionDto.html":{},"classes/CreateWorkspaceQuizQuestionOptionDto.html":{},"classes/CreateWorkspaceStudentResultDto.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"entities/Level1.html":{},"controllers/Level1Controller.html":{},"modules/Level1Module.html":{},"injectables/Level1Service.html":{},"entities/Level2.html":{},"controllers/Level2Controller.html":{},"modules/Level2Module.html":{},"injectables/Level2Service.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"guards/RolesGuard.html":{},"entities/Subject.html":{},"controllers/SubjectsController.html":{},"modules/SubjectsModule.html":{},"injectables/SubjectsService.html":{},"entities/TeacherSubject.html":{},"controllers/TeacherSubjectController.html":{},"modules/TeacherSubjectModule.html":{},"injectables/TeacherSubjectService.html":{},"entities/Term.html":{},"controllers/TermsController.html":{},"modules/TermsModule.html":{},"injectables/TermsService.html":{},"classes/UpdateCombinationDto.html":{},"classes/UpdateLevel1Dto.html":{},"classes/UpdateLevel2Dto.html":{},"classes/UpdateSubjectDto.html":{},"classes/UpdateTeacherSubjectDto.html":{},"classes/UpdateTermDto.html":{},"classes/UpdateWorkspaceDto.html":{},"classes/UpdateWorkspaceQuizQuestionDto.html":{},"classes/UpdateWorkspaceQuizQuestionOptionDto.html":{},"classes/UpdateWorkspaceStudentResultDto.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"classes/Workspace.html":{},"classes/WorkspaceQuizQuestion.html":{},"classes/WorkspaceQuizQuestionOption.html":{},"controllers/WorkspaceQuizQuestionOptionsController.html":{},"modules/WorkspaceQuizQuestionOptionsModule.html":{},"injectables/WorkspaceQuizQuestionOptionsService.html":{},"controllers/WorkspaceQuizQuestionsController.html":{},"modules/WorkspaceQuizQuestionsModule.html":{},"injectables/WorkspaceQuizQuestionsService.html":{},"classes/WorkspaceStudentResult.html":{},"controllers/WorkspaceStudentResultsController.html":{},"modules/WorkspaceStudentResultsModule.html":{},"injectables/WorkspaceStudentResultsService.html":{},"controllers/WorkspacesController.html":{},"modules/WorkspacesModule.html":{},"injectables/WorkspacesService.html":{},"coverage.html":{},"classes/createUserDto.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"classes/loginUserDto.html":{},"modules.html":{},"overview.html":{},"entities/userEntity.html":{},"interfaces/userInterface.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":921,"title":{},"body":{"coverage.html":{}}}],["0.1.13",{"_index":995,"title":{},"body":{"dependencies.html":{}}}],["0.13.2",{"_index":978,"title":{},"body":{"dependencies.html":{}}}],["0.2.41",{"_index":1004,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":977,"title":{},"body":{"dependencies.html":{}}}],["0.5.2",{"_index":988,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":926,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":922,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":927,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":929,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":934,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":928,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":933,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":244,"title":{},"body":{"controllers/CombinationsController.html":{},"controllers/Level1Controller.html":{},"controllers/Level2Controller.html":{},"controllers/SubjectsController.html":{},"controllers/TermsController.html":{},"controllers/UserController.html":{},"overview.html":{}}}],["1.0.0",{"_index":990,"title":{},"body":{"dependencies.html":{}}}],["1.1.6",{"_index":968,"title":{},"body":{"dependencies.html":{}}}],["1.4.6",{"_index":981,"title":{},"body":{"dependencies.html":{}}}],["10.2.1",{"_index":1001,"title":{},"body":{"dependencies.html":{}}}],["12",{"_index":773,"title":{},"body":{"injectables/UserService.html":{},"overview.html":{}}}],["13",{"_index":1077,"title":{},"body":{"overview.html":{}}}],["16",{"_index":1102,"title":{},"body":{"entities/userEntity.html":{}}}],["16)@column({default",{"_index":1089,"title":{},"body":{"entities/userEntity.html":{}}}],["17",{"_index":1079,"title":{},"body":{"overview.html":{}}}],["2.29.1",{"_index":987,"title":{},"body":{"dependencies.html":{}}}],["26",{"_index":1080,"title":{},"body":{"overview.html":{}}}],["3.0.2",{"_index":997,"title":{},"body":{"dependencies.html":{}}}],["4.0.0",{"_index":989,"title":{},"body":{"dependencies.html":{}}}],["4.13.1",{"_index":985,"title":{},"body":{"dependencies.html":{}}}],["4.17.2",{"_index":982,"title":{},"body":{"dependencies.html":{}}}],["4.3.0",{"_index":1003,"title":{},"body":{"dependencies.html":{}}}],["5.0.1",{"_index":975,"title":{},"body":{"dependencies.html":{}}}],["5.2.0",{"_index":973,"title":{},"body":{"dependencies.html":{}}}],["5.4.3",{"_index":966,"title":{},"body":{"dependencies.html":{}}}],["60s",{"_index":275,"title":{},"body":{"modules/CombinationsModule.html":{}}}],["7",{"_index":1078,"title":{},"body":{"overview.html":{}}}],["7.2.0",{"_index":998,"title":{},"body":{"dependencies.html":{}}}],["8.0.0",{"_index":967,"title":{},"body":{"dependencies.html":{}}}],["8.0.2",{"_index":974,"title":{},"body":{"dependencies.html":{}}}],["8.1.0",{"_index":970,"title":{},"body":{"dependencies.html":{}}}],["8.2.6",{"_index":969,"title":{},"body":{"dependencies.html":{}}}],["8.7.1",{"_index":992,"title":{},"body":{"dependencies.html":{}}}],["access",{"_index":252,"title":{},"body":{"controllers/CombinationsController.html":{},"controllers/Level1Controller.html":{},"controllers/Level2Controller.html":{},"controllers/SubjectsController.html":{},"controllers/TermsController.html":{},"controllers/UserController.html":{}}}],["action",{"_index":624,"title":{},"body":{"injectables/TeacherSubjectService.html":{},"injectables/WorkspaceQuizQuestionOptionsService.html":{},"injectables/WorkspaceQuizQuestionsService.html":{},"injectables/WorkspaceStudentResultsService.html":{},"injectables/WorkspacesService.html":{}}}],["adds",{"_index":625,"title":{},"body":{"injectables/TeacherSubjectService.html":{},"injectables/WorkspaceQuizQuestionOptionsService.html":{},"injectables/WorkspaceQuizQuestionsService.html":{},"injectables/WorkspaceStudentResultsService.html":{},"injectables/WorkspacesService.html":{}}}],["admin",{"_index":248,"title":{},"body":{"controllers/CombinationsController.html":{},"controllers/Level1Controller.html":{},"controllers/Level2Controller.html":{},"controllers/SubjectsController.html":{},"controllers/TermsController.html":{},"controllers/UserController.html":{},"miscellaneous/enumerations.html":{}}}],["allowed",{"_index":251,"title":{},"body":{"controllers/CombinationsController.html":{},"controllers/Level1Controller.html":{},"controllers/Level2Controller.html":{},"controllers/SubjectsController.html":{},"controllers/TermsController.html":{},"controllers/UserController.html":{}}}],["already",{"_index":768,"title":{},"body":{"injectables/UserService.html":{}}}],["amazing",{"_index":1053,"title":{},"body":{"index.html":{}}}],["app",{"_index":1030,"title":{},"body":{"index.html":{}}}],["app.controller",{"_index":54,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["applications",{"_index":1022,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":30,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":19,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["async",{"_index":121,"title":{},"body":{"injectables/AuthService.html":{},"controllers/CombinationsController.html":{},"injectables/CombinationsService.html":{},"injectables/JwtStrategy.html":{},"controllers/Level1Controller.html":{},"injectables/Level1Service.html":{},"controllers/Level2Controller.html":{},"injectables/Level2Service.html":{},"injectables/LocalStrategy.html":{},"controllers/SubjectsController.html":{},"injectables/SubjectsService.html":{},"controllers/TermsController.html":{},"injectables/TermsService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["auth.guard",{"_index":234,"title":{},"body":{"controllers/CombinationsController.html":{},"controllers/Level1Controller.html":{},"controllers/Level2Controller.html":{},"controllers/SubjectsController.html":{},"controllers/TermsController.html":{},"controllers/UserController.html":{}}}],["auth.guard.ts",{"_index":350,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/LocalAuthGuard.html":{},"coverage.html":{}}}],["auth/auth.module",{"_index":60,"title":{},"body":{"modules/AppModule.html":{}}}],["auth/guards/jwt",{"_index":233,"title":{},"body":{"controllers/CombinationsController.html":{},"controllers/Level1Controller.html":{},"controllers/Level2Controller.html":{},"controllers/SubjectsController.html":{},"controllers/TermsController.html":{},"controllers/UserController.html":{}}}],["auth/moddles/role.enum",{"_index":1095,"title":{},"body":{"entities/userEntity.html":{}}}],["authguard",{"_index":351,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/LocalAuthGuard.html":{}}}],["authguard('jwt",{"_index":352,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["authguard('local",{"_index":480,"title":{},"body":{"injectables/LocalAuthGuard.html":{}}}],["authmodule",{"_index":36,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":1063,"title":{},"body":{"index.html":{}}}],["authservice",{"_index":61,"title":{"injectables/AuthService.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["authservice,localstrategy,userservice,jwtstrategy",{"_index":118,"title":{},"body":{"modules/AuthModule.html":{}}}],["autoloadentities:true",{"_index":90,"title":{},"body":{"modules/AppModule.html":{}}}],["await",{"_index":157,"title":{},"body":{"injectables/AuthService.html":{},"controllers/CombinationsController.html":{},"injectables/CombinationsService.html":{},"controllers/Level1Controller.html":{},"injectables/Level1Service.html":{},"controllers/Level2Controller.html":{},"injectables/Level2Service.html":{},"injectables/LocalStrategy.html":{},"controllers/SubjectsController.html":{},"injectables/SubjectsService.html":{},"controllers/TermsController.html":{},"injectables/TermsService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["backers",{"_index":1054,"title":{},"body":{"index.html":{}}}],["baseentity",{"_index":187,"title":{},"body":{"entities/Combination.html":{},"entities/Level1.html":{},"entities/Level2.html":{},"entities/Subject.html":{},"entities/TeacherSubject.html":{},"entities/Term.html":{},"entities/userEntity.html":{}}}],["bcrypt",{"_index":154,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["bcrypt.compare(password,strorepasswordhash",{"_index":160,"title":{},"body":{"injectables/AuthService.html":{}}}],["bcrypt.hash(createuserdto.password",{"_index":772,"title":{},"body":{"injectables/UserService.html":{}}}],["bcrypt.hash(password,12",{"_index":158,"title":{},"body":{"injectables/AuthService.html":{}}}],["bearer",{"_index":240,"title":{},"body":{"controllers/CombinationsController.html":{},"controllers/Level1Controller.html":{},"controllers/Level2Controller.html":{},"controllers/SubjectsController.html":{},"controllers/TermsController.html":{},"controllers/UserController.html":{}}}],["bearer.split",{"_index":243,"title":{},"body":{"controllers/CombinationsController.html":{},"controllers/Level1Controller.html":{},"controllers/Level2Controller.html":{},"controllers/SubjectsController.html":{},"controllers/TermsController.html":{},"controllers/UserController.html":{}}}],["beforeinsert",{"_index":1094,"title":{},"body":{"entities/userEntity.html":{}}}],["body",{"_index":221,"title":{},"body":{"controllers/CombinationsController.html":{},"controllers/Level1Controller.html":{},"controllers/Level2Controller.html":{},"controllers/SubjectsController.html":{},"controllers/TeacherSubjectController.html":{},"controllers/TermsController.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"controllers/WorkspaceQuizQuestionOptionsController.html":{},"controllers/WorkspaceQuizQuestionsController.html":{},"controllers/WorkspaceStudentResultsController.html":{},"controllers/WorkspacesController.html":{}}}],["boolean",{"_index":504,"title":{},"body":{"guards/RolesGuard.html":{}}}],["bootstrap",{"_index":932,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["browse",{"_index":1075,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1073,"title":{},"body":{"modules.html":{}}}],["building",{"_index":1017,"title":{},"body":{"index.html":{}}}],["canactivate",{"_index":496,"title":{},"body":{"guards/RolesGuard.html":{}}}],["canactivate(context",{"_index":500,"title":{},"body":{"guards/RolesGuard.html":{}}}],["case",{"_index":1120,"title":{},"body":{"miscellaneous/variables.html":{}}}],["case,number",{"_index":1122,"title":{},"body":{"miscellaneous/variables.html":{}}}],["casl/ability",{"_index":965,"title":{},"body":{"dependencies.html":{}}}],["class",{"_index":22,"title":{"classes/CreateCombinationDto.html":{},"classes/CreateLevel1Dto.html":{},"classes/CreateLevel2Dto.html":{},"classes/CreateSubjectDto.html":{},"classes/CreateTeacherSubjectDto.html":{},"classes/CreateTermDto.html":{},"classes/CreateWorkspaceDto.html":{},"classes/CreateWorkspaceQuizQuestionDto.html":{},"classes/CreateWorkspaceQuizQuestionOptionDto.html":{},"classes/CreateWorkspaceStudentResultDto.html":{},"classes/UpdateCombinationDto.html":{},"classes/UpdateLevel1Dto.html":{},"classes/UpdateLevel2Dto.html":{},"classes/UpdateSubjectDto.html":{},"classes/UpdateTeacherSubjectDto.html":{},"classes/UpdateTermDto.html":{},"classes/UpdateWorkspaceDto.html":{},"classes/UpdateWorkspaceQuizQuestionDto.html":{},"classes/UpdateWorkspaceQuizQuestionOptionDto.html":{},"classes/UpdateWorkspaceStudentResultDto.html":{},"classes/Workspace.html":{},"classes/WorkspaceQuizQuestion.html":{},"classes/WorkspaceQuizQuestionOption.html":{},"classes/WorkspaceStudentResult.html":{},"classes/createUserDto.html":{},"classes/loginUserDto.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"entities/Combination.html":{},"controllers/CombinationsController.html":{},"modules/CombinationsModule.html":{},"injectables/CombinationsService.html":{},"classes/CreateCombinationDto.html":{},"classes/CreateLevel1Dto.html":{},"classes/CreateLevel2Dto.html":{},"classes/CreateSubjectDto.html":{},"classes/CreateTeacherSubjectDto.html":{},"classes/CreateTermDto.html":{},"classes/CreateWorkspaceDto.html":{},"classes/CreateWorkspaceQuizQuestionDto.html":{},"classes/CreateWorkspaceQuizQuestionOptionDto.html":{},"classes/CreateWorkspaceStudentResultDto.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"entities/Level1.html":{},"controllers/Level1Controller.html":{},"modules/Level1Module.html":{},"injectables/Level1Service.html":{},"entities/Level2.html":{},"controllers/Level2Controller.html":{},"modules/Level2Module.html":{},"injectables/Level2Service.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"guards/RolesGuard.html":{},"entities/Subject.html":{},"controllers/SubjectsController.html":{},"modules/SubjectsModule.html":{},"injectables/SubjectsService.html":{},"entities/TeacherSubject.html":{},"controllers/TeacherSubjectController.html":{},"modules/TeacherSubjectModule.html":{},"injectables/TeacherSubjectService.html":{},"entities/Term.html":{},"controllers/TermsController.html":{},"modules/TermsModule.html":{},"injectables/TermsService.html":{},"classes/UpdateCombinationDto.html":{},"classes/UpdateLevel1Dto.html":{},"classes/UpdateLevel2Dto.html":{},"classes/UpdateSubjectDto.html":{},"classes/UpdateTeacherSubjectDto.html":{},"classes/UpdateTermDto.html":{},"classes/UpdateWorkspaceDto.html":{},"classes/UpdateWorkspaceQuizQuestionDto.html":{},"classes/UpdateWorkspaceQuizQuestionOptionDto.html":{},"classes/UpdateWorkspaceStudentResultDto.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"classes/Workspace.html":{},"classes/WorkspaceQuizQuestion.html":{},"classes/WorkspaceQuizQuestionOption.html":{},"controllers/WorkspaceQuizQuestionOptionsController.html":{},"modules/WorkspaceQuizQuestionOptionsModule.html":{},"injectables/WorkspaceQuizQuestionOptionsService.html":{},"controllers/WorkspaceQuizQuestionsController.html":{},"modules/WorkspaceQuizQuestionsModule.html":{},"injectables/WorkspaceQuizQuestionsService.html":{},"classes/WorkspaceStudentResult.html":{},"controllers/WorkspaceStudentResultsController.html":{},"modules/WorkspaceStudentResultsModule.html":{},"injectables/WorkspaceStudentResultsService.html":{},"controllers/WorkspacesController.html":{},"modules/WorkspacesModule.html":{},"injectables/WorkspacesService.html":{},"coverage.html":{},"classes/createUserDto.html":{},"dependencies.html":{},"classes/loginUserDto.html":{},"entities/userEntity.html":{}}}],["classes",{"_index":299,"title":{},"body":{"classes/CreateCombinationDto.html":{},"classes/CreateLevel1Dto.html":{},"classes/CreateLevel2Dto.html":{},"classes/CreateSubjectDto.html":{},"classes/CreateTeacherSubjectDto.html":{},"classes/CreateTermDto.html":{},"classes/CreateWorkspaceDto.html":{},"classes/CreateWorkspaceQuizQuestionDto.html":{},"classes/CreateWorkspaceQuizQuestionOptionDto.html":{},"classes/CreateWorkspaceStudentResultDto.html":{},"classes/UpdateCombinationDto.html":{},"classes/UpdateLevel1Dto.html":{},"classes/UpdateLevel2Dto.html":{},"classes/UpdateSubjectDto.html":{},"classes/UpdateTeacherSubjectDto.html":{},"classes/UpdateTermDto.html":{},"classes/UpdateWorkspaceDto.html":{},"classes/UpdateWorkspaceQuizQuestionDto.html":{},"classes/UpdateWorkspaceQuizQuestionOptionDto.html":{},"classes/UpdateWorkspaceStudentResultDto.html":{},"classes/Workspace.html":{},"classes/WorkspaceQuizQuestion.html":{},"classes/WorkspaceQuizQuestionOption.html":{},"classes/WorkspaceStudentResult.html":{},"classes/createUserDto.html":{},"classes/loginUserDto.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":33,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":34,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":35,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":99,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_exports",{"_index":100,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_providers",{"_index":101,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_combinationsmodule",{"_index":265,"title":{},"body":{"modules/CombinationsModule.html":{},"overview.html":{}}}],["cluster_combinationsmodule_providers",{"_index":266,"title":{},"body":{"modules/CombinationsModule.html":{},"overview.html":{}}}],["cluster_level1module",{"_index":404,"title":{},"body":{"modules/Level1Module.html":{},"overview.html":{}}}],["cluster_level1module_providers",{"_index":405,"title":{},"body":{"modules/Level1Module.html":{},"overview.html":{}}}],["cluster_level2module",{"_index":455,"title":{},"body":{"modules/Level2Module.html":{},"overview.html":{}}}],["cluster_level2module_providers",{"_index":456,"title":{},"body":{"modules/Level2Module.html":{},"overview.html":{}}}],["cluster_subjectsmodule",{"_index":544,"title":{},"body":{"modules/SubjectsModule.html":{},"overview.html":{}}}],["cluster_subjectsmodule_providers",{"_index":545,"title":{},"body":{"modules/SubjectsModule.html":{},"overview.html":{}}}],["cluster_teachersubjectmodule",{"_index":614,"title":{},"body":{"modules/TeacherSubjectModule.html":{},"overview.html":{}}}],["cluster_teachersubjectmodule_providers",{"_index":615,"title":{},"body":{"modules/TeacherSubjectModule.html":{},"overview.html":{}}}],["cluster_termsmodule",{"_index":650,"title":{},"body":{"modules/TermsModule.html":{},"overview.html":{}}}],["cluster_termsmodule_providers",{"_index":651,"title":{},"body":{"modules/TermsModule.html":{},"overview.html":{}}}],["cluster_usermodule",{"_index":733,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_exports",{"_index":736,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_imports",{"_index":735,"title":{},"body":{"modules/UserModule.html":{}}}],["cluster_usermodule_providers",{"_index":734,"title":{},"body":{"modules/UserModule.html":{}}}],["cluster_workspacequizquestionoptionsmodule",{"_index":823,"title":{},"body":{"modules/WorkspaceQuizQuestionOptionsModule.html":{},"overview.html":{}}}],["cluster_workspacequizquestionoptionsmodule_providers",{"_index":824,"title":{},"body":{"modules/WorkspaceQuizQuestionOptionsModule.html":{},"overview.html":{}}}],["cluster_workspacequizquestionsmodule",{"_index":850,"title":{},"body":{"modules/WorkspaceQuizQuestionsModule.html":{},"overview.html":{}}}],["cluster_workspacequizquestionsmodule_providers",{"_index":851,"title":{},"body":{"modules/WorkspaceQuizQuestionsModule.html":{},"overview.html":{}}}],["cluster_workspacesmodule",{"_index":907,"title":{},"body":{"modules/WorkspacesModule.html":{},"overview.html":{}}}],["cluster_workspacesmodule_providers",{"_index":908,"title":{},"body":{"modules/WorkspacesModule.html":{},"overview.html":{}}}],["cluster_workspacestudentresultsmodule",{"_index":879,"title":{},"body":{"modules/WorkspaceStudentResultsModule.html":{},"overview.html":{}}}],["cluster_workspacestudentresultsmodule_providers",{"_index":880,"title":{},"body":{"modules/WorkspaceStudentResultsModule.html":{},"overview.html":{}}}],["column",{"_index":1093,"title":{},"body":{"entities/userEntity.html":{}}}],["column({default",{"_index":178,"title":{},"body":{"entities/Combination.html":{},"entities/Level1.html":{},"entities/Level2.html":{},"entities/Subject.html":{},"entities/TeacherSubject.html":{},"entities/Term.html":{},"classes/Workspace.html":{},"entities/userEntity.html":{}}}],["column({default:null",{"_index":189,"title":{},"body":{"entities/Combination.html":{},"entities/Level1.html":{},"entities/Level2.html":{},"entities/Subject.html":{},"entities/TeacherSubject.html":{},"entities/Term.html":{},"classes/Workspace.html":{}}}],["combination",{"_index":169,"title":{"entities/Combination.html":{}},"body":{"entities/Combination.html":{},"injectables/CombinationsService.html":{},"coverage.html":{}}}],["combination.delete(id",{"_index":298,"title":{},"body":{"injectables/CombinationsService.html":{}}}],["combination.dto",{"_index":228,"title":{},"body":{"controllers/CombinationsController.html":{},"injectables/CombinationsService.html":{},"classes/UpdateCombinationDto.html":{}}}],["combination.dto.ts",{"_index":301,"title":{},"body":{"classes/CreateCombinationDto.html":{},"classes/UpdateCombinationDto.html":{},"coverage.html":{}}}],["combination.dto.ts:11",{"_index":303,"title":{},"body":{"classes/CreateCombinationDto.html":{}}}],["combination.dto.ts:15",{"_index":304,"title":{},"body":{"classes/CreateCombinationDto.html":{}}}],["combination.dto.ts:6",{"_index":306,"title":{},"body":{"classes/CreateCombinationDto.html":{}}}],["combination.find",{"_index":295,"title":{},"body":{"injectables/CombinationsService.html":{}}}],["combination.findone(id",{"_index":296,"title":{},"body":{"injectables/CombinationsService.html":{}}}],["combination.update(id",{"_index":297,"title":{},"body":{"injectables/CombinationsService.html":{}}}],["combinations",{"_index":196,"title":{},"body":{"controllers/CombinationsController.html":{}}}],["combinations.controller",{"_index":268,"title":{},"body":{"modules/CombinationsModule.html":{}}}],["combinations.service",{"_index":226,"title":{},"body":{"controllers/CombinationsController.html":{},"modules/CombinationsModule.html":{}}}],["combinations/combinations.module",{"_index":65,"title":{},"body":{"modules/AppModule.html":{}}}],["combinationscontroller",{"_index":193,"title":{"controllers/CombinationsController.html":{}},"body":{"controllers/CombinationsController.html":{},"modules/CombinationsModule.html":{},"coverage.html":{}}}],["combinationsmodule",{"_index":37,"title":{"modules/CombinationsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CombinationsModule.html":{},"modules.html":{},"overview.html":{}}}],["combinationsservice",{"_index":225,"title":{"injectables/CombinationsService.html":{}},"body":{"controllers/CombinationsController.html":{},"modules/CombinationsModule.html":{},"injectables/CombinationsService.html":{},"coverage.html":{},"overview.html":{}}}],["comparepassword",{"_index":122,"title":{},"body":{"injectables/AuthService.html":{}}}],["comparepassword(password",{"_index":128,"title":{},"body":{"injectables/AuthService.html":{}}}],["comparepassword(password:string,strorepasswordhash:string",{"_index":159,"title":{},"body":{"injectables/AuthService.html":{}}}],["configmodule",{"_index":55,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.forroot({isglobal:true",{"_index":82,"title":{},"body":{"modules/AppModule.html":{}}}],["const",{"_index":153,"title":{},"body":{"injectables/AuthService.html":{},"controllers/CombinationsController.html":{},"injectables/CombinationsService.html":{},"controllers/Level1Controller.html":{},"injectables/Level1Service.html":{},"controllers/Level2Controller.html":{},"injectables/Level2Service.html":{},"injectables/LocalStrategy.html":{},"guards/RolesGuard.html":{},"controllers/SubjectsController.html":{},"injectables/SubjectsService.html":{},"controllers/TermsController.html":{},"injectables/TermsService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["constructor",{"_index":355,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"guards/RolesGuard.html":{},"injectables/UserService.html":{}}}],["constructor(authservice",{"_index":747,"title":{},"body":{"injectables/UserService.html":{}}}],["constructor(private",{"_index":23,"title":{},"body":{"controllers/AppController.html":{},"controllers/CombinationsController.html":{},"controllers/Level1Controller.html":{},"controllers/Level2Controller.html":{},"injectables/LocalStrategy.html":{},"guards/RolesGuard.html":{},"controllers/SubjectsController.html":{},"controllers/TeacherSubjectController.html":{},"controllers/TermsController.html":{},"controllers/UserController.html":{},"controllers/WorkspaceQuizQuestionOptionsController.html":{},"controllers/WorkspaceQuizQuestionsController.html":{},"controllers/WorkspaceStudentResultsController.html":{},"controllers/WorkspacesController.html":{}}}],["constructor(reflector",{"_index":497,"title":{},"body":{"guards/RolesGuard.html":{}}}],["constructor(userservice",{"_index":482,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["contain",{"_index":1118,"title":{},"body":{"miscellaneous/variables.html":{}}}],["context",{"_index":503,"title":{},"body":{"guards/RolesGuard.html":{}}}],["context.getclass",{"_index":514,"title":{},"body":{"guards/RolesGuard.html":{}}}],["context.gethandler",{"_index":513,"title":{},"body":{"guards/RolesGuard.html":{}}}],["context.switchtohttp().getrequest",{"_index":516,"title":{},"body":{"guards/RolesGuard.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/CombinationsController.html":{},"controllers/Level1Controller.html":{},"controllers/Level2Controller.html":{},"controllers/SubjectsController.html":{},"controllers/TeacherSubjectController.html":{},"controllers/TermsController.html":{},"controllers/UserController.html":{},"controllers/WorkspaceQuizQuestionOptionsController.html":{},"controllers/WorkspaceQuizQuestionsController.html":{},"controllers/WorkspaceStudentResultsController.html":{},"controllers/WorkspacesController.html":{}},"body":{"controllers/AppController.html":{},"controllers/CombinationsController.html":{},"controllers/Level1Controller.html":{},"controllers/Level2Controller.html":{},"controllers/SubjectsController.html":{},"controllers/TeacherSubjectController.html":{},"controllers/TermsController.html":{},"controllers/UserController.html":{},"controllers/WorkspaceQuizQuestionOptionsController.html":{},"controllers/WorkspaceQuizQuestionsController.html":{},"controllers/WorkspaceStudentResultsController.html":{},"controllers/WorkspacesController.html":{},"coverage.html":{}}}],["controller('combinations",{"_index":235,"title":{},"body":{"controllers/CombinationsController.html":{}}}],["controller('level1",{"_index":395,"title":{},"body":{"controllers/Level1Controller.html":{}}}],["controller('level2",{"_index":448,"title":{},"body":{"controllers/Level2Controller.html":{}}}],["controller('subjects",{"_index":538,"title":{},"body":{"controllers/SubjectsController.html":{}}}],["controller('teacher",{"_index":604,"title":{},"body":{"controllers/TeacherSubjectController.html":{}}}],["controller('terms",{"_index":644,"title":{},"body":{"controllers/TermsController.html":{}}}],["controller('user",{"_index":726,"title":{},"body":{"controllers/UserController.html":{}}}],["controller('workspace",{"_index":817,"title":{},"body":{"controllers/WorkspaceQuizQuestionOptionsController.html":{},"controllers/WorkspaceQuizQuestionsController.html":{},"controllers/WorkspaceStudentResultsController.html":{}}}],["controller('workspaces",{"_index":901,"title":{},"body":{"controllers/WorkspacesController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/CombinationsController.html":{},"modules/CombinationsModule.html":{},"controllers/Level1Controller.html":{},"modules/Level1Module.html":{},"controllers/Level2Controller.html":{},"modules/Level2Module.html":{},"controllers/SubjectsController.html":{},"modules/SubjectsModule.html":{},"controllers/TeacherSubjectController.html":{},"modules/TeacherSubjectModule.html":{},"controllers/TermsController.html":{},"modules/TermsModule.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"controllers/WorkspaceQuizQuestionOptionsController.html":{},"modules/WorkspaceQuizQuestionOptionsModule.html":{},"controllers/WorkspaceQuizQuestionsController.html":{},"modules/WorkspaceQuizQuestionsModule.html":{},"controllers/WorkspaceStudentResultsController.html":{},"modules/WorkspaceStudentResultsModule.html":{},"controllers/WorkspacesController.html":{},"modules/WorkspacesModule.html":{},"overview.html":{}}}],["controllers/user.controller",{"_index":739,"title":{},"body":{"modules/UserModule.html":{}}}],["cookie",{"_index":979,"title":{},"body":{"dependencies.html":{}}}],["coverage",{"_index":917,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":197,"title":{},"body":{"controllers/CombinationsController.html":{},"injectables/CombinationsService.html":{},"controllers/Level1Controller.html":{},"injectables/Level1Service.html":{},"controllers/Level2Controller.html":{},"injectables/Level2Service.html":{},"controllers/SubjectsController.html":{},"injectables/SubjectsService.html":{},"controllers/TeacherSubjectController.html":{},"injectables/TeacherSubjectService.html":{},"controllers/TermsController.html":{},"injectables/TermsService.html":{},"classes/UpdateCombinationDto.html":{},"classes/UpdateLevel1Dto.html":{},"classes/UpdateLevel2Dto.html":{},"classes/UpdateSubjectDto.html":{},"classes/UpdateTeacherSubjectDto.html":{},"classes/UpdateTermDto.html":{},"classes/UpdateWorkspaceDto.html":{},"classes/UpdateWorkspaceQuizQuestionDto.html":{},"classes/UpdateWorkspaceQuizQuestionOptionDto.html":{},"classes/UpdateWorkspaceStudentResultDto.html":{},"controllers/UserController.html":{},"controllers/WorkspaceQuizQuestionOptionsController.html":{},"injectables/WorkspaceQuizQuestionOptionsService.html":{},"controllers/WorkspaceQuizQuestionsController.html":{},"injectables/WorkspaceQuizQuestionsService.html":{},"controllers/WorkspaceStudentResultsController.html":{},"injectables/WorkspaceStudentResultsService.html":{},"controllers/WorkspacesController.html":{},"injectables/WorkspacesService.html":{}}}],["create(@body",{"_index":605,"title":{},"body":{"controllers/TeacherSubjectController.html":{},"controllers/UserController.html":{},"controllers/WorkspaceQuizQuestionOptionsController.html":{},"controllers/WorkspaceQuizQuestionsController.html":{},"controllers/WorkspaceStudentResultsController.html":{},"controllers/WorkspacesController.html":{}}}],["create(@req",{"_index":238,"title":{},"body":{"controllers/CombinationsController.html":{},"controllers/Level1Controller.html":{},"controllers/Level2Controller.html":{},"controllers/SubjectsController.html":{},"controllers/TermsController.html":{}}}],["create(createcombinationdto",{"_index":277,"title":{},"body":{"injectables/CombinationsService.html":{}}}],["create(createlevel1dto",{"_index":413,"title":{},"body":{"injectables/Level1Service.html":{}}}],["create(createlevel2dto",{"_index":462,"title":{},"body":{"injectables/Level2Service.html":{}}}],["create(createsubjectdto",{"_index":552,"title":{},"body":{"injectables/SubjectsService.html":{}}}],["create(createteachersubjectdto",{"_index":595,"title":{},"body":{"controllers/TeacherSubjectController.html":{},"injectables/TeacherSubjectService.html":{}}}],["create(createtermdto",{"_index":658,"title":{},"body":{"injectables/TermsService.html":{}}}],["create(createuserdto",{"_index":716,"title":{},"body":{"controllers/UserController.html":{}}}],["create(createworkspacedto",{"_index":893,"title":{},"body":{"controllers/WorkspacesController.html":{},"injectables/WorkspacesService.html":{}}}],["create(createworkspacequizquestiondto",{"_index":837,"title":{},"body":{"controllers/WorkspaceQuizQuestionsController.html":{},"injectables/WorkspaceQuizQuestionsService.html":{}}}],["create(createworkspacequizquestionoptiondto",{"_index":809,"title":{},"body":{"controllers/WorkspaceQuizQuestionOptionsController.html":{},"injectables/WorkspaceQuizQuestionOptionsService.html":{}}}],["create(createworkspacestudentresultdto",{"_index":866,"title":{},"body":{"controllers/WorkspaceStudentResultsController.html":{},"injectables/WorkspaceStudentResultsService.html":{}}}],["create(request",{"_index":202,"title":{},"body":{"controllers/CombinationsController.html":{},"controllers/Level1Controller.html":{},"controllers/Level2Controller.html":{},"controllers/SubjectsController.html":{},"controllers/TermsController.html":{}}}],["createcombination",{"_index":286,"title":{},"body":{"injectables/CombinationsService.html":{}}}],["createcombination.level1id",{"_index":290,"title":{},"body":{"injectables/CombinationsService.html":{}}}],["createcombination.level2id",{"_index":292,"title":{},"body":{"injectables/CombinationsService.html":{}}}],["createcombination.name",{"_index":288,"title":{},"body":{"injectables/CombinationsService.html":{}}}],["createcombination.save",{"_index":294,"title":{},"body":{"injectables/CombinationsService.html":{}}}],["createcombinationdto",{"_index":204,"title":{"classes/CreateCombinationDto.html":{}},"body":{"controllers/CombinationsController.html":{},"injectables/CombinationsService.html":{},"classes/CreateCombinationDto.html":{},"classes/UpdateCombinationDto.html":{},"coverage.html":{}}}],["createcombinationdto.level1id",{"_index":291,"title":{},"body":{"injectables/CombinationsService.html":{}}}],["createcombinationdto.level2id",{"_index":293,"title":{},"body":{"injectables/CombinationsService.html":{}}}],["createcombinationdto.name",{"_index":289,"title":{},"body":{"injectables/CombinationsService.html":{}}}],["createleve1",{"_index":419,"title":{},"body":{"injectables/Level1Service.html":{}}}],["createleve1.name",{"_index":420,"title":{},"body":{"injectables/Level1Service.html":{}}}],["createleve1.save",{"_index":422,"title":{},"body":{"injectables/Level1Service.html":{}}}],["createlevel1dto",{"_index":312,"title":{"classes/CreateLevel1Dto.html":{}},"body":{"classes/CreateLevel1Dto.html":{},"controllers/Level1Controller.html":{},"injectables/Level1Service.html":{},"classes/UpdateLevel1Dto.html":{},"coverage.html":{}}}],["createlevel1dto.name",{"_index":421,"title":{},"body":{"injectables/Level1Service.html":{}}}],["createlevel2.level1id",{"_index":471,"title":{},"body":{"injectables/Level2Service.html":{}}}],["createlevel2.name",{"_index":469,"title":{},"body":{"injectables/Level2Service.html":{}}}],["createlevel2.save",{"_index":473,"title":{},"body":{"injectables/Level2Service.html":{}}}],["createlevel2=new",{"_index":468,"title":{},"body":{"injectables/Level2Service.html":{}}}],["createlevel2dto",{"_index":316,"title":{"classes/CreateLevel2Dto.html":{}},"body":{"classes/CreateLevel2Dto.html":{},"controllers/Level2Controller.html":{},"injectables/Level2Service.html":{},"classes/UpdateLevel2Dto.html":{},"coverage.html":{}}}],["createlevel2dto.level1id",{"_index":472,"title":{},"body":{"injectables/Level2Service.html":{}}}],["createlevel2dto.name",{"_index":470,"title":{},"body":{"injectables/Level2Service.html":{}}}],["createsubject",{"_index":558,"title":{},"body":{"injectables/SubjectsService.html":{}}}],["createsubject.level1id",{"_index":561,"title":{},"body":{"injectables/SubjectsService.html":{}}}],["createsubject.level2id",{"_index":563,"title":{},"body":{"injectables/SubjectsService.html":{}}}],["createsubject.name",{"_index":559,"title":{},"body":{"injectables/SubjectsService.html":{}}}],["createsubject.save",{"_index":565,"title":{},"body":{"injectables/SubjectsService.html":{}}}],["createsubjectdto",{"_index":322,"title":{"classes/CreateSubjectDto.html":{}},"body":{"classes/CreateSubjectDto.html":{},"controllers/SubjectsController.html":{},"injectables/SubjectsService.html":{},"classes/UpdateSubjectDto.html":{},"coverage.html":{}}}],["createsubjectdto.level1id",{"_index":562,"title":{},"body":{"injectables/SubjectsService.html":{}}}],["createsubjectdto.level2id",{"_index":564,"title":{},"body":{"injectables/SubjectsService.html":{}}}],["createsubjectdto.name",{"_index":560,"title":{},"body":{"injectables/SubjectsService.html":{}}}],["createteachersubjectdto",{"_index":328,"title":{"classes/CreateTeacherSubjectDto.html":{}},"body":{"classes/CreateTeacherSubjectDto.html":{},"controllers/TeacherSubjectController.html":{},"injectables/TeacherSubjectService.html":{},"classes/UpdateTeacherSubjectDto.html":{},"coverage.html":{}}}],["createterm",{"_index":665,"title":{},"body":{"injectables/TermsService.html":{}}}],["createterm.level1id",{"_index":668,"title":{},"body":{"injectables/TermsService.html":{}}}],["createterm.name",{"_index":666,"title":{},"body":{"injectables/TermsService.html":{}}}],["createterm.save",{"_index":670,"title":{},"body":{"injectables/TermsService.html":{}}}],["createtermdto",{"_index":331,"title":{"classes/CreateTermDto.html":{}},"body":{"classes/CreateTermDto.html":{},"controllers/TermsController.html":{},"injectables/TermsService.html":{},"classes/UpdateTermDto.html":{},"coverage.html":{}}}],["createtermdto.level1id",{"_index":669,"title":{},"body":{"injectables/TermsService.html":{}}}],["createtermdto.name",{"_index":667,"title":{},"body":{"injectables/TermsService.html":{}}}],["createuser",{"_index":744,"title":{},"body":{"injectables/UserService.html":{}}}],["createuser(createuserdto",{"_index":749,"title":{},"body":{"injectables/UserService.html":{}}}],["createuser.email",{"_index":776,"title":{},"body":{"injectables/UserService.html":{}}}],["createuser.id",{"_index":783,"title":{},"body":{"injectables/UserService.html":{}}}],["createuser.names",{"_index":774,"title":{},"body":{"injectables/UserService.html":{}}}],["createuser.password",{"_index":780,"title":{},"body":{"injectables/UserService.html":{}}}],["createuser.role",{"_index":784,"title":{},"body":{"injectables/UserService.html":{}}}],["createuser.save",{"_index":781,"title":{},"body":{"injectables/UserService.html":{}}}],["createuser.username",{"_index":778,"title":{},"body":{"injectables/UserService.html":{}}}],["createuserdto",{"_index":717,"title":{"classes/createUserDto.html":{}},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{},"classes/createUserDto.html":{}}}],["createuserdto.email",{"_index":777,"title":{},"body":{"injectables/UserService.html":{}}}],["createuserdto.names",{"_index":775,"title":{},"body":{"injectables/UserService.html":{}}}],["createuserdto.username",{"_index":779,"title":{},"body":{"injectables/UserService.html":{}}}],["createworkspacedto",{"_index":336,"title":{"classes/CreateWorkspaceDto.html":{}},"body":{"classes/CreateWorkspaceDto.html":{},"classes/UpdateWorkspaceDto.html":{},"controllers/WorkspacesController.html":{},"injectables/WorkspacesService.html":{},"coverage.html":{}}}],["createworkspacequizquestiondto",{"_index":339,"title":{"classes/CreateWorkspaceQuizQuestionDto.html":{}},"body":{"classes/CreateWorkspaceQuizQuestionDto.html":{},"classes/UpdateWorkspaceQuizQuestionDto.html":{},"controllers/WorkspaceQuizQuestionsController.html":{},"injectables/WorkspaceQuizQuestionsService.html":{},"coverage.html":{}}}],["createworkspacequizquestionoptiondto",{"_index":343,"title":{"classes/CreateWorkspaceQuizQuestionOptionDto.html":{}},"body":{"classes/CreateWorkspaceQuizQuestionOptionDto.html":{},"classes/UpdateWorkspaceQuizQuestionOptionDto.html":{},"controllers/WorkspaceQuizQuestionOptionsController.html":{},"injectables/WorkspaceQuizQuestionOptionsService.html":{},"coverage.html":{}}}],["createworkspacestudentresultdto",{"_index":346,"title":{"classes/CreateWorkspaceStudentResultDto.html":{}},"body":{"classes/CreateWorkspaceStudentResultDto.html":{},"classes/UpdateWorkspaceStudentResultDto.html":{},"controllers/WorkspaceStudentResultsController.html":{},"injectables/WorkspaceStudentResultsService.html":{},"coverage.html":{}}}],["credentials",{"_index":796,"title":{},"body":{"injectables/UserService.html":{}}}],["d)|(?=.*\\w+))(?![.\\n])(?=.*[a",{"_index":1123,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data",{"_index":245,"title":{},"body":{"controllers/CombinationsController.html":{},"controllers/Level1Controller.html":{},"controllers/Level2Controller.html":{},"controllers/SubjectsController.html":{},"controllers/TermsController.html":{},"controllers/UserController.html":{}}}],["data.role",{"_index":396,"title":{},"body":{"controllers/Level1Controller.html":{},"controllers/Level2Controller.html":{},"controllers/TermsController.html":{},"controllers/UserController.html":{}}}],["database:process.env.postgres_database",{"_index":89,"title":{},"body":{"modules/AppModule.html":{}}}],["date",{"_index":696,"title":{},"body":{"classes/UpdateTermDto.html":{}}}],["decorators",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"entities/Combination.html":{},"controllers/CombinationsController.html":{},"classes/CreateCombinationDto.html":{},"classes/CreateLevel1Dto.html":{},"classes/CreateLevel2Dto.html":{},"classes/CreateSubjectDto.html":{},"classes/CreateTermDto.html":{},"entities/Level1.html":{},"controllers/Level1Controller.html":{},"entities/Level2.html":{},"controllers/Level2Controller.html":{},"entities/Subject.html":{},"controllers/SubjectsController.html":{},"entities/TeacherSubject.html":{},"controllers/TeacherSubjectController.html":{},"entities/Term.html":{},"controllers/TermsController.html":{},"classes/UpdateLevel2Dto.html":{},"classes/UpdateTermDto.html":{},"controllers/UserController.html":{},"classes/Workspace.html":{},"controllers/WorkspaceQuizQuestionOptionsController.html":{},"controllers/WorkspaceQuizQuestionsController.html":{},"controllers/WorkspaceStudentResultsController.html":{},"controllers/WorkspacesController.html":{},"classes/createUserDto.html":{},"classes/loginUserDto.html":{},"entities/userEntity.html":{}}}],["decorators/roles.decorator",{"_index":507,"title":{},"body":{"guards/RolesGuard.html":{}}}],["default",{"_index":1083,"title":{},"body":{"entities/userEntity.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"entities/Combination.html":{},"controllers/CombinationsController.html":{},"injectables/CombinationsService.html":{},"classes/CreateCombinationDto.html":{},"classes/CreateLevel1Dto.html":{},"classes/CreateLevel2Dto.html":{},"classes/CreateSubjectDto.html":{},"classes/CreateTermDto.html":{},"injectables/JwtStrategy.html":{},"entities/Level1.html":{},"controllers/Level1Controller.html":{},"injectables/Level1Service.html":{},"entities/Level2.html":{},"controllers/Level2Controller.html":{},"injectables/Level2Service.html":{},"injectables/LocalStrategy.html":{},"guards/RolesGuard.html":{},"entities/Subject.html":{},"controllers/SubjectsController.html":{},"injectables/SubjectsService.html":{},"entities/TeacherSubject.html":{},"controllers/TeacherSubjectController.html":{},"injectables/TeacherSubjectService.html":{},"entities/Term.html":{},"controllers/TermsController.html":{},"injectables/TermsService.html":{},"classes/UpdateLevel2Dto.html":{},"classes/UpdateTermDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"classes/Workspace.html":{},"controllers/WorkspaceQuizQuestionOptionsController.html":{},"injectables/WorkspaceQuizQuestionOptionsService.html":{},"controllers/WorkspaceQuizQuestionsController.html":{},"injectables/WorkspaceQuizQuestionsService.html":{},"controllers/WorkspaceStudentResultsController.html":{},"injectables/WorkspaceStudentResultsService.html":{},"controllers/WorkspacesController.html":{},"injectables/WorkspacesService.html":{},"classes/createUserDto.html":{},"classes/loginUserDto.html":{},"entities/userEntity.html":{}}}],["delete",{"_index":389,"title":{},"body":{"controllers/Level1Controller.html":{},"controllers/TeacherSubjectController.html":{},"controllers/TermsController.html":{},"controllers/WorkspaceQuizQuestionOptionsController.html":{},"controllers/WorkspaceQuizQuestionsController.html":{},"controllers/WorkspaceStudentResultsController.html":{},"controllers/WorkspacesController.html":{}}}],["delete(':id",{"_index":262,"title":{},"body":{"controllers/CombinationsController.html":{},"controllers/Level1Controller.html":{},"controllers/Level2Controller.html":{},"controllers/SubjectsController.html":{},"controllers/TeacherSubjectController.html":{},"controllers/TermsController.html":{},"controllers/WorkspaceQuizQuestionOptionsController.html":{},"controllers/WorkspaceQuizQuestionsController.html":{},"controllers/WorkspaceStudentResultsController.html":{},"controllers/WorkspacesController.html":{}}}],["delete,req",{"_index":444,"title":{},"body":{"controllers/Level2Controller.html":{}}}],["delete,req,unauthorizedexception,useguards",{"_index":224,"title":{},"body":{"controllers/CombinationsController.html":{},"controllers/SubjectsController.html":{}}}],["dependencies",{"_index":32,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CombinationsModule.html":{},"modules/Level1Module.html":{},"modules/Level2Module.html":{},"modules/SubjectsModule.html":{},"modules/TeacherSubjectModule.html":{},"modules/TermsModule.html":{},"modules/UserModule.html":{},"modules/WorkspaceQuizQuestionOptionsModule.html":{},"modules/WorkspaceQuizQuestionsModule.html":{},"modules/WorkspaceStudentResultsModule.html":{},"modules/WorkspacesModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":1023,"title":{},"body":{"index.html":{}}}],["development",{"_index":1031,"title":{},"body":{"index.html":{}}}],["dist/**/*.entity{.ts,.js",{"_index":93,"title":{},"body":{"modules/AppModule.html":{}}}],["documentation",{"_index":918,"title":{},"body":{"coverage.html":{}}}],["done",{"_index":454,"title":{},"body":{"controllers/Level2Controller.html":{}}}],["dto/create",{"_index":227,"title":{},"body":{"controllers/CombinationsController.html":{},"injectables/CombinationsService.html":{},"controllers/Level1Controller.html":{},"injectables/Level1Service.html":{},"controllers/Level2Controller.html":{},"injectables/Level2Service.html":{},"controllers/SubjectsController.html":{},"injectables/SubjectsService.html":{},"controllers/TeacherSubjectController.html":{},"injectables/TeacherSubjectService.html":{},"controllers/TermsController.html":{},"injectables/TermsService.html":{},"controllers/WorkspaceQuizQuestionOptionsController.html":{},"injectables/WorkspaceQuizQuestionOptionsService.html":{},"controllers/WorkspaceQuizQuestionsController.html":{},"injectables/WorkspaceQuizQuestionsService.html":{},"controllers/WorkspaceStudentResultsController.html":{},"injectables/WorkspaceStudentResultsService.html":{},"controllers/WorkspacesController.html":{},"injectables/WorkspacesService.html":{}}}],["dto/update",{"_index":229,"title":{},"body":{"controllers/CombinationsController.html":{},"injectables/CombinationsService.html":{},"controllers/Level1Controller.html":{},"injectables/Level1Service.html":{},"controllers/Level2Controller.html":{},"injectables/Level2Service.html":{},"controllers/SubjectsController.html":{},"injectables/SubjectsService.html":{},"controllers/TeacherSubjectController.html":{},"injectables/TeacherSubjectService.html":{},"controllers/TermsController.html":{},"injectables/TermsService.html":{},"controllers/WorkspaceQuizQuestionOptionsController.html":{},"injectables/WorkspaceQuizQuestionOptionsService.html":{},"controllers/WorkspaceQuizQuestionsController.html":{},"injectables/WorkspaceQuizQuestionsService.html":{},"controllers/WorkspaceStudentResultsController.html":{},"injectables/WorkspaceStudentResultsService.html":{},"controllers/WorkspacesController.html":{},"injectables/WorkspacesService.html":{}}}],["e2e",{"_index":1042,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":1018,"title":{},"body":{"index.html":{}}}],["email",{"_index":139,"title":{},"body":{"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"injectables/UserService.html":{},"classes/createUserDto.html":{},"classes/loginUserDto.html":{},"entities/userEntity.html":{},"interfaces/userInterface.html":{}}}],["email:string",{"_index":961,"title":{},"body":{"classes/createUserDto.html":{},"classes/loginUserDto.html":{}}}],["email?:string",{"_index":1109,"title":{},"body":{"interfaces/userInterface.html":{}}}],["emailtolowercase",{"_index":1103,"title":{},"body":{"entities/userEntity.html":{}}}],["entities",{"_index":92,"title":{},"body":{"modules/AppModule.html":{},"entities/Combination.html":{},"entities/Level1.html":{},"entities/Level2.html":{},"entities/Subject.html":{},"entities/TeacherSubject.html":{},"entities/Term.html":{},"overview.html":{},"entities/userEntity.html":{}}}],["entities/combination.entity",{"_index":270,"title":{},"body":{"modules/CombinationsModule.html":{},"injectables/CombinationsService.html":{}}}],["entities/level1.entity",{"_index":408,"title":{},"body":{"modules/Level1Module.html":{},"injectables/Level1Service.html":{}}}],["entities/level2.entity",{"_index":459,"title":{},"body":{"modules/Level2Module.html":{},"injectables/Level2Service.html":{}}}],["entities/subject.entity",{"_index":549,"title":{},"body":{"modules/SubjectsModule.html":{},"injectables/SubjectsService.html":{}}}],["entities/term.entity",{"_index":655,"title":{},"body":{"modules/TermsModule.html":{}}}],["entity",{"_index":168,"title":{"entities/Combination.html":{},"entities/Level1.html":{},"entities/Level2.html":{},"entities/Subject.html":{},"entities/TeacherSubject.html":{},"entities/Term.html":{},"entities/userEntity.html":{}},"body":{"coverage.html":{},"entities/userEntity.html":{}}}],["entity('combination",{"_index":185,"title":{},"body":{"entities/Combination.html":{}}}],["entity('level1",{"_index":380,"title":{},"body":{"entities/Level1.html":{}}}],["entity('level2",{"_index":432,"title":{},"body":{"entities/Level2.html":{}}}],["entity('subject",{"_index":525,"title":{},"body":{"entities/Subject.html":{}}}],["entity('teacher_subject",{"_index":584,"title":{},"body":{"entities/TeacherSubject.html":{}}}],["entity('term",{"_index":434,"title":{},"body":{"entities/Level2.html":{},"entities/Term.html":{}}}],["entity('user",{"_index":1097,"title":{},"body":{"entities/userEntity.html":{}}}],["entity,primarygeneratedcolumn,column,baseentity",{"_index":183,"title":{},"body":{"entities/Combination.html":{},"entities/Level2.html":{},"entities/Subject.html":{}}}],["entity,primarygeneratedcolumn,column,baseentity,beforeinsert",{"_index":379,"title":{},"body":{"entities/Level1.html":{}}}],["entity,primarygeneratedcolumn,column,baseentity,onetomany",{"_index":581,"title":{},"body":{"entities/TeacherSubject.html":{},"entities/Term.html":{}}}],["entity,primarygeneratedcolumn,column,baseentity,onetomany,jointable",{"_index":800,"title":{},"body":{"classes/Workspace.html":{}}}],["enumerations",{"_index":1006,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["errorhttpstatuscode:httpstatus.unprocessable_entity",{"_index":1127,"title":{},"body":{"miscellaneous/variables.html":{}}}],["executioncontext",{"_index":501,"title":{},"body":{"guards/RolesGuard.html":{}}}],["exist",{"_index":769,"title":{},"body":{"injectables/UserService.html":{}}}],["expiresin",{"_index":274,"title":{},"body":{"modules/CombinationsModule.html":{}}}],["export",{"_index":21,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"entities/Combination.html":{},"controllers/CombinationsController.html":{},"modules/CombinationsModule.html":{},"injectables/CombinationsService.html":{},"classes/CreateCombinationDto.html":{},"classes/CreateLevel1Dto.html":{},"classes/CreateLevel2Dto.html":{},"classes/CreateSubjectDto.html":{},"classes/CreateTeacherSubjectDto.html":{},"classes/CreateTermDto.html":{},"classes/CreateWorkspaceDto.html":{},"classes/CreateWorkspaceQuizQuestionDto.html":{},"classes/CreateWorkspaceQuizQuestionOptionDto.html":{},"classes/CreateWorkspaceStudentResultDto.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"entities/Level1.html":{},"controllers/Level1Controller.html":{},"modules/Level1Module.html":{},"injectables/Level1Service.html":{},"entities/Level2.html":{},"controllers/Level2Controller.html":{},"modules/Level2Module.html":{},"injectables/Level2Service.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"guards/RolesGuard.html":{},"entities/Subject.html":{},"controllers/SubjectsController.html":{},"modules/SubjectsModule.html":{},"injectables/SubjectsService.html":{},"entities/TeacherSubject.html":{},"controllers/TeacherSubjectController.html":{},"modules/TeacherSubjectModule.html":{},"injectables/TeacherSubjectService.html":{},"entities/Term.html":{},"controllers/TermsController.html":{},"modules/TermsModule.html":{},"injectables/TermsService.html":{},"classes/UpdateCombinationDto.html":{},"classes/UpdateLevel1Dto.html":{},"classes/UpdateLevel2Dto.html":{},"classes/UpdateSubjectDto.html":{},"classes/UpdateTeacherSubjectDto.html":{},"classes/UpdateTermDto.html":{},"classes/UpdateWorkspaceDto.html":{},"classes/UpdateWorkspaceQuizQuestionDto.html":{},"classes/UpdateWorkspaceQuizQuestionOptionDto.html":{},"classes/UpdateWorkspaceStudentResultDto.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"classes/Workspace.html":{},"classes/WorkspaceQuizQuestion.html":{},"classes/WorkspaceQuizQuestionOption.html":{},"controllers/WorkspaceQuizQuestionOptionsController.html":{},"modules/WorkspaceQuizQuestionOptionsModule.html":{},"injectables/WorkspaceQuizQuestionOptionsService.html":{},"controllers/WorkspaceQuizQuestionsController.html":{},"modules/WorkspaceQuizQuestionsModule.html":{},"injectables/WorkspaceQuizQuestionsService.html":{},"classes/WorkspaceStudentResult.html":{},"controllers/WorkspaceStudentResultsController.html":{},"modules/WorkspaceStudentResultsModule.html":{},"injectables/WorkspaceStudentResultsService.html":{},"controllers/WorkspacesController.html":{},"modules/WorkspacesModule.html":{},"injectables/WorkspacesService.html":{},"classes/createUserDto.html":{},"classes/loginUserDto.html":{},"entities/userEntity.html":{},"interfaces/userInterface.html":{}}}],["exports",{"_index":106,"title":{},"body":{"modules/AuthModule.html":{},"modules/UserModule.html":{}}}],["exports:[authservice",{"_index":119,"title":{},"body":{"modules/AuthModule.html":{}}}],["exports:[userservice",{"_index":742,"title":{},"body":{"modules/UserModule.html":{}}}],["express",{"_index":230,"title":{},"body":{"controllers/CombinationsController.html":{},"controllers/Level1Controller.html":{},"controllers/Level2Controller.html":{},"controllers/SubjectsController.html":{},"controllers/TermsController.html":{},"dependencies.html":{}}}],["extends",{"_index":186,"title":{},"body":{"entities/Combination.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"entities/Level1.html":{},"entities/Level2.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"entities/Subject.html":{},"entities/TeacherSubject.html":{},"entities/Term.html":{},"classes/UpdateCombinationDto.html":{},"classes/UpdateLevel1Dto.html":{},"classes/UpdateLevel2Dto.html":{},"classes/UpdateSubjectDto.html":{},"classes/UpdateTeacherSubjectDto.html":{},"classes/UpdateTermDto.html":{},"classes/UpdateWorkspaceDto.html":{},"classes/UpdateWorkspaceQuizQuestionDto.html":{},"classes/UpdateWorkspaceQuizQuestionOptionDto.html":{},"classes/UpdateWorkspaceStudentResultDto.html":{},"classes/createUserDto.html":{},"entities/userEntity.html":{}}}],["extractjwt",{"_index":360,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":368,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["false",{"_index":370,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["fastify",{"_index":983,"title":{},"body":{"dependencies.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"entities/Combination.html":{},"controllers/CombinationsController.html":{},"modules/CombinationsModule.html":{},"injectables/CombinationsService.html":{},"classes/CreateCombinationDto.html":{},"classes/CreateLevel1Dto.html":{},"classes/CreateLevel2Dto.html":{},"classes/CreateSubjectDto.html":{},"classes/CreateTeacherSubjectDto.html":{},"classes/CreateTermDto.html":{},"classes/CreateWorkspaceDto.html":{},"classes/CreateWorkspaceQuizQuestionDto.html":{},"classes/CreateWorkspaceQuizQuestionOptionDto.html":{},"classes/CreateWorkspaceStudentResultDto.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"entities/Level1.html":{},"controllers/Level1Controller.html":{},"modules/Level1Module.html":{},"injectables/Level1Service.html":{},"entities/Level2.html":{},"controllers/Level2Controller.html":{},"modules/Level2Module.html":{},"injectables/Level2Service.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"guards/RolesGuard.html":{},"entities/Subject.html":{},"controllers/SubjectsController.html":{},"modules/SubjectsModule.html":{},"injectables/SubjectsService.html":{},"entities/TeacherSubject.html":{},"controllers/TeacherSubjectController.html":{},"modules/TeacherSubjectModule.html":{},"injectables/TeacherSubjectService.html":{},"entities/Term.html":{},"controllers/TermsController.html":{},"modules/TermsModule.html":{},"injectables/TermsService.html":{},"classes/UpdateCombinationDto.html":{},"classes/UpdateLevel1Dto.html":{},"classes/UpdateLevel2Dto.html":{},"classes/UpdateSubjectDto.html":{},"classes/UpdateTeacherSubjectDto.html":{},"classes/UpdateTermDto.html":{},"classes/UpdateWorkspaceDto.html":{},"classes/UpdateWorkspaceQuizQuestionDto.html":{},"classes/UpdateWorkspaceQuizQuestionOptionDto.html":{},"classes/UpdateWorkspaceStudentResultDto.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"classes/Workspace.html":{},"classes/WorkspaceQuizQuestion.html":{},"classes/WorkspaceQuizQuestionOption.html":{},"controllers/WorkspaceQuizQuestionOptionsController.html":{},"modules/WorkspaceQuizQuestionOptionsModule.html":{},"injectables/WorkspaceQuizQuestionOptionsService.html":{},"controllers/WorkspaceQuizQuestionsController.html":{},"modules/WorkspaceQuizQuestionsModule.html":{},"injectables/WorkspaceQuizQuestionsService.html":{},"classes/WorkspaceStudentResult.html":{},"controllers/WorkspaceStudentResultsController.html":{},"modules/WorkspaceStudentResultsModule.html":{},"injectables/WorkspaceStudentResultsService.html":{},"controllers/WorkspacesController.html":{},"modules/WorkspacesModule.html":{},"injectables/WorkspacesService.html":{},"coverage.html":{},"classes/createUserDto.html":{},"classes/loginUserDto.html":{},"entities/userEntity.html":{},"interfaces/userInterface.html":{}}}],["findall",{"_index":198,"title":{},"body":{"controllers/CombinationsController.html":{},"injectables/CombinationsService.html":{},"controllers/Level1Controller.html":{},"injectables/Level1Service.html":{},"controllers/Level2Controller.html":{},"injectables/Level2Service.html":{},"controllers/SubjectsController.html":{},"injectables/SubjectsService.html":{},"controllers/TeacherSubjectController.html":{},"injectables/TeacherSubjectService.html":{},"controllers/TermsController.html":{},"injectables/TermsService.html":{},"controllers/UserController.html":{},"controllers/WorkspaceQuizQuestionOptionsController.html":{},"injectables/WorkspaceQuizQuestionOptionsService.html":{},"controllers/WorkspaceQuizQuestionsController.html":{},"injectables/WorkspaceQuizQuestionsService.html":{},"controllers/WorkspaceStudentResultsController.html":{},"injectables/WorkspaceStudentResultsService.html":{},"controllers/WorkspacesController.html":{},"injectables/WorkspacesService.html":{}}}],["findall(@req",{"_index":253,"title":{},"body":{"controllers/CombinationsController.html":{},"controllers/Level1Controller.html":{},"controllers/SubjectsController.html":{},"controllers/TermsController.html":{},"controllers/UserController.html":{}}}],["findall(request",{"_index":207,"title":{},"body":{"controllers/CombinationsController.html":{},"controllers/Level1Controller.html":{},"controllers/SubjectsController.html":{},"controllers/TermsController.html":{},"controllers/UserController.html":{}}}],["findallusers",{"_index":745,"title":{},"body":{"injectables/UserService.html":{}}}],["findone",{"_index":199,"title":{},"body":{"controllers/CombinationsController.html":{},"injectables/CombinationsService.html":{},"controllers/Level1Controller.html":{},"injectables/Level1Service.html":{},"controllers/Level2Controller.html":{},"injectables/Level2Service.html":{},"controllers/SubjectsController.html":{},"injectables/SubjectsService.html":{},"controllers/TeacherSubjectController.html":{},"injectables/TeacherSubjectService.html":{},"controllers/TermsController.html":{},"injectables/TermsService.html":{},"controllers/WorkspaceQuizQuestionOptionsController.html":{},"injectables/WorkspaceQuizQuestionOptionsService.html":{},"controllers/WorkspaceQuizQuestionsController.html":{},"injectables/WorkspaceQuizQuestionsService.html":{},"controllers/WorkspaceStudentResultsController.html":{},"injectables/WorkspaceStudentResultsService.html":{},"controllers/WorkspacesController.html":{},"injectables/WorkspacesService.html":{}}}],["findone(@param('id",{"_index":608,"title":{},"body":{"controllers/TeacherSubjectController.html":{},"controllers/WorkspaceQuizQuestionOptionsController.html":{},"controllers/WorkspaceQuizQuestionsController.html":{},"controllers/WorkspaceStudentResultsController.html":{},"controllers/WorkspacesController.html":{}}}],["findone(@req",{"_index":256,"title":{},"body":{"controllers/CombinationsController.html":{},"controllers/Level1Controller.html":{},"controllers/Level2Controller.html":{},"controllers/SubjectsController.html":{},"controllers/TermsController.html":{}}}],["findone(id",{"_index":280,"title":{},"body":{"injectables/CombinationsService.html":{},"injectables/Level1Service.html":{},"injectables/Level2Service.html":{},"injectables/SubjectsService.html":{},"controllers/TeacherSubjectController.html":{},"injectables/TeacherSubjectService.html":{},"injectables/TermsService.html":{},"controllers/WorkspaceQuizQuestionOptionsController.html":{},"injectables/WorkspaceQuizQuestionOptionsService.html":{},"controllers/WorkspaceQuizQuestionsController.html":{},"injectables/WorkspaceQuizQuestionsService.html":{},"controllers/WorkspaceStudentResultsController.html":{},"injectables/WorkspaceStudentResultsService.html":{},"controllers/WorkspacesController.html":{},"injectables/WorkspacesService.html":{}}}],["findone(request",{"_index":210,"title":{},"body":{"controllers/CombinationsController.html":{},"controllers/Level1Controller.html":{},"controllers/Level2Controller.html":{},"controllers/SubjectsController.html":{},"controllers/TermsController.html":{}}}],["finduserbyemail",{"_index":123,"title":{},"body":{"injectables/AuthService.html":{}}}],["finduserbyemail(email",{"_index":137,"title":{},"body":{"injectables/AuthService.html":{}}}],["framework",{"_index":1016,"title":{},"body":{"index.html":{}}}],["function",{"_index":931,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":1010,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["get(':id",{"_index":255,"title":{},"body":{"controllers/CombinationsController.html":{},"controllers/Level1Controller.html":{},"controllers/Level2Controller.html":{},"controllers/SubjectsController.html":{},"controllers/TeacherSubjectController.html":{},"controllers/TermsController.html":{},"controllers/WorkspaceQuizQuestionOptionsController.html":{},"controllers/WorkspaceQuizQuestionsController.html":{},"controllers/WorkspaceStudentResultsController.html":{},"controllers/WorkspacesController.html":{}}}],["get,useguards",{"_index":17,"title":{},"body":{"controllers/AppController.html":{}}}],["gethello",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getting",{"_index":1012,"title":{"index.html":{}},"body":{}}],["grow",{"_index":1049,"title":{},"body":{"index.html":{}}}],["guard",{"_index":493,"title":{"guards/RolesGuard.html":{}},"body":{"coverage.html":{},"overview.html":{}}}],["guards",{"_index":494,"title":{},"body":{"guards/RolesGuard.html":{}}}],["hashed",{"_index":771,"title":{},"body":{"injectables/UserService.html":{}}}],["hashpassword",{"_index":124,"title":{},"body":{"injectables/AuthService.html":{}}}],["hashpassword(password",{"_index":140,"title":{},"body":{"injectables/AuthService.html":{}}}],["hashpassword(password:string",{"_index":156,"title":{},"body":{"injectables/AuthService.html":{}}}],["here",{"_index":1060,"title":{},"body":{"index.html":{}}}],["host:process.env.postgres_host",{"_index":85,"title":{},"body":{"modules/AppModule.html":{}}}],["httpcode",{"_index":724,"title":{},"body":{"controllers/UserController.html":{}}}],["httpcode(200",{"_index":729,"title":{},"body":{"controllers/UserController.html":{}}}],["httpexception",{"_index":754,"title":{},"body":{"injectables/UserService.html":{}}}],["https://nestjs.com",{"_index":1067,"title":{},"body":{"index.html":{}}}],["httpstatus",{"_index":755,"title":{},"body":{"injectables/UserService.html":{}}}],["id",{"_index":172,"title":{},"body":{"entities/Combination.html":{},"controllers/CombinationsController.html":{},"injectables/CombinationsService.html":{},"entities/Level1.html":{},"controllers/Level1Controller.html":{},"injectables/Level1Service.html":{},"entities/Level2.html":{},"controllers/Level2Controller.html":{},"injectables/Level2Service.html":{},"entities/Subject.html":{},"controllers/SubjectsController.html":{},"injectables/SubjectsService.html":{},"entities/TeacherSubject.html":{},"controllers/TeacherSubjectController.html":{},"injectables/TeacherSubjectService.html":{},"entities/Term.html":{},"controllers/TermsController.html":{},"injectables/TermsService.html":{},"injectables/UserService.html":{},"classes/Workspace.html":{},"controllers/WorkspaceQuizQuestionOptionsController.html":{},"injectables/WorkspaceQuizQuestionOptionsService.html":{},"controllers/WorkspaceQuizQuestionsController.html":{},"injectables/WorkspaceQuizQuestionsService.html":{},"controllers/WorkspaceStudentResultsController.html":{},"injectables/WorkspaceStudentResultsService.html":{},"controllers/WorkspacesController.html":{},"injectables/WorkspacesService.html":{},"classes/createUserDto.html":{},"entities/userEntity.html":{},"interfaces/userInterface.html":{}}}],["id:number",{"_index":188,"title":{},"body":{"entities/Combination.html":{},"entities/Level1.html":{},"entities/Level2.html":{},"entities/Subject.html":{},"entities/TeacherSubject.html":{},"entities/Term.html":{},"classes/Workspace.html":{},"classes/createUserDto.html":{},"interfaces/userInterface.html":{}}}],["identifier",{"_index":919,"title":{},"body":{"coverage.html":{}}}],["if(data.role",{"_index":247,"title":{},"body":{"controllers/CombinationsController.html":{},"controllers/SubjectsController.html":{}}}],["ignoreexpiration",{"_index":369,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["implements",{"_index":510,"title":{},"body":{"guards/RolesGuard.html":{}}}],["import",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"entities/Combination.html":{},"controllers/CombinationsController.html":{},"modules/CombinationsModule.html":{},"injectables/CombinationsService.html":{},"classes/CreateCombinationDto.html":{},"classes/CreateLevel1Dto.html":{},"classes/CreateLevel2Dto.html":{},"classes/CreateSubjectDto.html":{},"classes/CreateTermDto.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"entities/Level1.html":{},"controllers/Level1Controller.html":{},"modules/Level1Module.html":{},"injectables/Level1Service.html":{},"entities/Level2.html":{},"controllers/Level2Controller.html":{},"modules/Level2Module.html":{},"injectables/Level2Service.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"guards/RolesGuard.html":{},"entities/Subject.html":{},"controllers/SubjectsController.html":{},"modules/SubjectsModule.html":{},"injectables/SubjectsService.html":{},"entities/TeacherSubject.html":{},"controllers/TeacherSubjectController.html":{},"modules/TeacherSubjectModule.html":{},"injectables/TeacherSubjectService.html":{},"entities/Term.html":{},"controllers/TermsController.html":{},"modules/TermsModule.html":{},"injectables/TermsService.html":{},"classes/UpdateCombinationDto.html":{},"classes/UpdateLevel1Dto.html":{},"classes/UpdateLevel2Dto.html":{},"classes/UpdateSubjectDto.html":{},"classes/UpdateTeacherSubjectDto.html":{},"classes/UpdateTermDto.html":{},"classes/UpdateWorkspaceDto.html":{},"classes/UpdateWorkspaceQuizQuestionDto.html":{},"classes/UpdateWorkspaceQuizQuestionOptionDto.html":{},"classes/UpdateWorkspaceStudentResultDto.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"classes/Workspace.html":{},"controllers/WorkspaceQuizQuestionOptionsController.html":{},"modules/WorkspaceQuizQuestionOptionsModule.html":{},"injectables/WorkspaceQuizQuestionOptionsService.html":{},"controllers/WorkspaceQuizQuestionsController.html":{},"modules/WorkspaceQuizQuestionsModule.html":{},"injectables/WorkspaceQuizQuestionsService.html":{},"controllers/WorkspaceStudentResultsController.html":{},"modules/WorkspaceStudentResultsModule.html":{},"injectables/WorkspaceStudentResultsService.html":{},"controllers/WorkspacesController.html":{},"modules/WorkspacesModule.html":{},"injectables/WorkspacesService.html":{},"classes/createUserDto.html":{},"classes/loginUserDto.html":{},"entities/userEntity.html":{}}}],["imports",{"_index":53,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UserModule.html":{}}}],["imports:[typeormmodule.forfeature([combination",{"_index":271,"title":{},"body":{"modules/CombinationsModule.html":{}}}],["imports:[typeormmodule.forfeature([level1",{"_index":411,"title":{},"body":{"modules/Level1Module.html":{}}}],["imports:[typeormmodule.forfeature([level2",{"_index":460,"title":{},"body":{"modules/Level2Module.html":{}}}],["imports:[typeormmodule.forfeature([subject",{"_index":550,"title":{},"body":{"modules/SubjectsModule.html":{}}}],["imports:[typeormmodule.forfeature([term",{"_index":656,"title":{},"body":{"modules/TermsModule.html":{}}}],["imports:[typeormmodule.forfeature([userentity",{"_index":741,"title":{},"body":{"modules/UserModule.html":{}}}],["import{combination",{"_index":269,"title":{},"body":{"modules/CombinationsModule.html":{},"injectables/CombinationsService.html":{}}}],["import{subject",{"_index":548,"title":{},"body":{"modules/SubjectsModule.html":{},"injectables/SubjectsService.html":{}}}],["import{term",{"_index":654,"title":{},"body":{"modules/TermsModule.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"entities/Combination.html":{},"controllers/CombinationsController.html":{},"injectables/CombinationsService.html":{},"classes/CreateCombinationDto.html":{},"classes/CreateLevel1Dto.html":{},"classes/CreateLevel2Dto.html":{},"classes/CreateSubjectDto.html":{},"classes/CreateTermDto.html":{},"injectables/JwtStrategy.html":{},"entities/Level1.html":{},"controllers/Level1Controller.html":{},"injectables/Level1Service.html":{},"entities/Level2.html":{},"controllers/Level2Controller.html":{},"injectables/Level2Service.html":{},"injectables/LocalStrategy.html":{},"guards/RolesGuard.html":{},"entities/Subject.html":{},"controllers/SubjectsController.html":{},"injectables/SubjectsService.html":{},"entities/TeacherSubject.html":{},"controllers/TeacherSubjectController.html":{},"injectables/TeacherSubjectService.html":{},"entities/Term.html":{},"controllers/TermsController.html":{},"injectables/TermsService.html":{},"classes/UpdateLevel2Dto.html":{},"classes/UpdateTermDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"classes/Workspace.html":{},"controllers/WorkspaceQuizQuestionOptionsController.html":{},"injectables/WorkspaceQuizQuestionOptionsService.html":{},"controllers/WorkspaceQuizQuestionsController.html":{},"injectables/WorkspaceQuizQuestionsService.html":{},"controllers/WorkspaceStudentResultsController.html":{},"injectables/WorkspaceStudentResultsService.html":{},"controllers/WorkspacesController.html":{},"injectables/WorkspacesService.html":{},"classes/createUserDto.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"classes/loginUserDto.html":{},"entities/userEntity.html":{},"interfaces/userInterface.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"entities/Combination.html":{},"controllers/CombinationsController.html":{},"modules/CombinationsModule.html":{},"injectables/CombinationsService.html":{},"classes/CreateCombinationDto.html":{},"classes/CreateLevel1Dto.html":{},"classes/CreateLevel2Dto.html":{},"classes/CreateSubjectDto.html":{},"classes/CreateTeacherSubjectDto.html":{},"classes/CreateTermDto.html":{},"classes/CreateWorkspaceDto.html":{},"classes/CreateWorkspaceQuizQuestionDto.html":{},"classes/CreateWorkspaceQuizQuestionOptionDto.html":{},"classes/CreateWorkspaceStudentResultDto.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"entities/Level1.html":{},"controllers/Level1Controller.html":{},"modules/Level1Module.html":{},"injectables/Level1Service.html":{},"entities/Level2.html":{},"controllers/Level2Controller.html":{},"modules/Level2Module.html":{},"injectables/Level2Service.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"guards/RolesGuard.html":{},"entities/Subject.html":{},"controllers/SubjectsController.html":{},"modules/SubjectsModule.html":{},"injectables/SubjectsService.html":{},"entities/TeacherSubject.html":{},"controllers/TeacherSubjectController.html":{},"modules/TeacherSubjectModule.html":{},"injectables/TeacherSubjectService.html":{},"entities/Term.html":{},"controllers/TermsController.html":{},"modules/TermsModule.html":{},"injectables/TermsService.html":{},"classes/UpdateCombinationDto.html":{},"classes/UpdateLevel1Dto.html":{},"classes/UpdateLevel2Dto.html":{},"classes/UpdateSubjectDto.html":{},"classes/UpdateTeacherSubjectDto.html":{},"classes/UpdateTermDto.html":{},"classes/UpdateWorkspaceDto.html":{},"classes/UpdateWorkspaceQuizQuestionDto.html":{},"classes/UpdateWorkspaceQuizQuestionOptionDto.html":{},"classes/UpdateWorkspaceStudentResultDto.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"classes/Workspace.html":{},"classes/WorkspaceQuizQuestion.html":{},"classes/WorkspaceQuizQuestionOption.html":{},"controllers/WorkspaceQuizQuestionOptionsController.html":{},"modules/WorkspaceQuizQuestionOptionsModule.html":{},"injectables/WorkspaceQuizQuestionOptionsService.html":{},"controllers/WorkspaceQuizQuestionsController.html":{},"modules/WorkspaceQuizQuestionsModule.html":{},"injectables/WorkspaceQuizQuestionsService.html":{},"classes/WorkspaceStudentResult.html":{},"controllers/WorkspaceStudentResultsController.html":{},"modules/WorkspaceStudentResultsModule.html":{},"injectables/WorkspaceStudentResultsService.html":{},"controllers/WorkspacesController.html":{},"modules/WorkspacesModule.html":{},"injectables/WorkspacesService.html":{},"classes/createUserDto.html":{},"classes/loginUserDto.html":{},"entities/userEntity.html":{},"interfaces/userInterface.html":{}}}],["inherited",{"_index":950,"title":{},"body":{"classes/createUserDto.html":{}}}],["injectable",{"_index":94,"title":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/CombinationsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/Level1Service.html":{},"injectables/Level2Service.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/SubjectsService.html":{},"injectables/TeacherSubjectService.html":{},"injectables/TermsService.html":{},"injectables/UserService.html":{},"injectables/WorkspaceQuizQuestionOptionsService.html":{},"injectables/WorkspaceQuizQuestionsService.html":{},"injectables/WorkspaceStudentResultsService.html":{},"injectables/WorkspacesService.html":{}},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/CombinationsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/Level1Service.html":{},"injectables/Level2Service.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"guards/RolesGuard.html":{},"injectables/SubjectsService.html":{},"injectables/TeacherSubjectService.html":{},"injectables/TermsService.html":{},"injectables/UserService.html":{},"injectables/WorkspaceQuizQuestionOptionsService.html":{},"injectables/WorkspaceQuizQuestionsService.html":{},"injectables/WorkspaceStudentResultsService.html":{},"injectables/WorkspacesService.html":{},"coverage.html":{}}}],["injectables",{"_index":95,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/CombinationsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/Level1Service.html":{},"injectables/Level2Service.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/SubjectsService.html":{},"injectables/TeacherSubjectService.html":{},"injectables/TermsService.html":{},"injectables/UserService.html":{},"injectables/WorkspaceQuizQuestionOptionsService.html":{},"injectables/WorkspaceQuizQuestionsService.html":{},"injectables/WorkspaceStudentResultsService.html":{},"injectables/WorkspacesService.html":{},"overview.html":{}}}],["injectrepository",{"_index":757,"title":{},"body":{"injectables/UserService.html":{}}}],["installation",{"_index":1027,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":1029,"title":{},"body":{"index.html":{}}}],["interface",{"_index":939,"title":{"interfaces/userInterface.html":{}},"body":{"coverage.html":{},"overview.html":{},"interfaces/userInterface.html":{}}}],["interfaces",{"_index":1106,"title":{},"body":{"interfaces/userInterface.html":{}}}],["invalid",{"_index":795,"title":{},"body":{"injectables/UserService.html":{}}}],["isemail",{"_index":949,"title":{},"body":{"classes/createUserDto.html":{},"classes/loginUserDto.html":{},"entities/userEntity.html":{}}}],["isemail,isnotempty",{"_index":957,"title":{},"body":{"classes/createUserDto.html":{},"classes/loginUserDto.html":{}}}],["isint",{"_index":311,"title":{},"body":{"classes/CreateCombinationDto.html":{},"classes/CreateLevel2Dto.html":{},"classes/CreateSubjectDto.html":{},"classes/CreateTermDto.html":{},"classes/UpdateLevel2Dto.html":{},"classes/UpdateTermDto.html":{}}}],["isnotempty",{"_index":309,"title":{},"body":{"classes/CreateCombinationDto.html":{},"classes/CreateLevel1Dto.html":{},"classes/CreateLevel2Dto.html":{},"classes/CreateSubjectDto.html":{},"classes/CreateTermDto.html":{},"classes/UpdateLevel2Dto.html":{},"classes/UpdateTermDto.html":{},"classes/createUserDto.html":{},"classes/loginUserDto.html":{},"entities/userEntity.html":{}}}],["isnotempty()@isint",{"_index":302,"title":{},"body":{"classes/CreateCombinationDto.html":{},"classes/CreateSubjectDto.html":{},"classes/UpdateLevel2Dto.html":{},"classes/UpdateTermDto.html":{}}}],["isnotempty()@isstring",{"_index":305,"title":{},"body":{"classes/CreateCombinationDto.html":{},"classes/CreateLevel1Dto.html":{},"classes/CreateLevel2Dto.html":{},"classes/CreateSubjectDto.html":{},"classes/CreateTermDto.html":{},"classes/UpdateLevel2Dto.html":{},"classes/UpdateTermDto.html":{}}}],["isnotempty({message",{"_index":1081,"title":{},"body":{"entities/userEntity.html":{}}}],["isnotempty,isstring",{"_index":321,"title":{},"body":{"classes/CreateLevel2Dto.html":{}}}],["isnotempty,isstring,isint",{"_index":307,"title":{},"body":{"classes/CreateCombinationDto.html":{},"classes/CreateSubjectDto.html":{},"classes/CreateTermDto.html":{}}}],["isnotempty,isstring,isint,isdate",{"_index":685,"title":{},"body":{"classes/UpdateLevel2Dto.html":{},"classes/UpdateTermDto.html":{}}}],["isstring",{"_index":310,"title":{},"body":{"classes/CreateCombinationDto.html":{},"classes/CreateLevel1Dto.html":{},"classes/CreateLevel2Dto.html":{},"classes/CreateSubjectDto.html":{},"classes/CreateTermDto.html":{},"classes/UpdateLevel2Dto.html":{},"classes/UpdateTermDto.html":{},"classes/createUserDto.html":{}}}],["join",{"_index":1056,"title":{},"body":{"index.html":{}}}],["jwt",{"_index":363,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["jwt.strategy",{"_index":113,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtauthguard",{"_index":232,"title":{"injectables/JwtAuthGuard.html":{}},"body":{"controllers/CombinationsController.html":{},"injectables/JwtAuthGuard.html":{},"controllers/Level1Controller.html":{},"controllers/Level2Controller.html":{},"controllers/SubjectsController.html":{},"controllers/TermsController.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["jwtfromrequest",{"_index":367,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtmodule",{"_index":107,"title":{},"body":{"modules/AuthModule.html":{},"modules/CombinationsModule.html":{},"modules/Level1Module.html":{},"modules/Level2Module.html":{},"modules/SubjectsModule.html":{},"modules/TermsModule.html":{},"modules/UserModule.html":{}}}],["jwtmodule.register",{"_index":272,"title":{},"body":{"modules/CombinationsModule.html":{},"modules/Level2Module.html":{},"modules/SubjectsModule.html":{},"modules/TermsModule.html":{}}}],["jwtmodule.registerasync",{"_index":114,"title":{},"body":{"modules/AuthModule.html":{},"modules/CombinationsModule.html":{},"modules/Level1Module.html":{},"modules/UserModule.html":{}}}],["jwtservice",{"_index":231,"title":{},"body":{"controllers/CombinationsController.html":{},"controllers/Level1Controller.html":{},"controllers/Level2Controller.html":{},"controllers/SubjectsController.html":{},"controllers/TermsController.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["jwtstrategy",{"_index":102,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["kamil",{"_index":1064,"title":{},"body":{"index.html":{}}}],["length",{"_index":1096,"title":{},"body":{"entities/userEntity.html":{}}}],["length(5",{"_index":1101,"title":{},"body":{"entities/userEntity.html":{}}}],["level1",{"_index":375,"title":{"entities/Level1.html":{}},"body":{"entities/Level1.html":{},"controllers/Level1Controller.html":{},"modules/Level1Module.html":{},"injectables/Level1Service.html":{},"entities/Level2.html":{},"entities/TeacherSubject.html":{},"entities/Term.html":{},"coverage.html":{}}}],["level1.controller",{"_index":407,"title":{},"body":{"modules/Level1Module.html":{}}}],["level1.delete(id",{"_index":426,"title":{},"body":{"injectables/Level1Service.html":{}}}],["level1.dto",{"_index":394,"title":{},"body":{"controllers/Level1Controller.html":{},"injectables/Level1Service.html":{},"classes/UpdateLevel1Dto.html":{}}}],["level1.dto.ts",{"_index":314,"title":{},"body":{"classes/CreateLevel1Dto.html":{},"classes/UpdateLevel1Dto.html":{},"coverage.html":{}}}],["level1.dto.ts:6",{"_index":315,"title":{},"body":{"classes/CreateLevel1Dto.html":{}}}],["level1.find",{"_index":423,"title":{},"body":{"injectables/Level1Service.html":{}}}],["level1.findone(id",{"_index":424,"title":{},"body":{"injectables/Level1Service.html":{}}}],["level1.id",{"_index":589,"title":{},"body":{"entities/TeacherSubject.html":{}}}],["level1.service",{"_index":393,"title":{},"body":{"controllers/Level1Controller.html":{},"modules/Level1Module.html":{}}}],["level1.update(id",{"_index":425,"title":{},"body":{"injectables/Level1Service.html":{}}}],["level1/entities/level1.entity",{"_index":433,"title":{},"body":{"entities/Level2.html":{},"entities/TeacherSubject.html":{},"entities/Term.html":{}}}],["level1/level1.module",{"_index":63,"title":{},"body":{"modules/AppModule.html":{}}}],["level1controller",{"_index":381,"title":{"controllers/Level1Controller.html":{}},"body":{"controllers/Level1Controller.html":{},"modules/Level1Module.html":{},"coverage.html":{}}}],["level1id",{"_index":173,"title":{},"body":{"entities/Combination.html":{},"classes/CreateCombinationDto.html":{},"classes/CreateLevel2Dto.html":{},"classes/CreateSubjectDto.html":{},"classes/CreateTermDto.html":{},"entities/Level2.html":{},"entities/Subject.html":{},"entities/TeacherSubject.html":{},"entities/Term.html":{},"classes/UpdateLevel2Dto.html":{},"classes/UpdateTermDto.html":{}}}],["level1id:number",{"_index":590,"title":{},"body":{"entities/TeacherSubject.html":{}}}],["level1id:string",{"_index":191,"title":{},"body":{"entities/Combination.html":{},"classes/CreateCombinationDto.html":{},"classes/CreateLevel2Dto.html":{},"classes/CreateSubjectDto.html":{},"classes/CreateTermDto.html":{},"entities/Level2.html":{},"entities/Subject.html":{},"entities/Term.html":{},"classes/UpdateLevel2Dto.html":{},"classes/UpdateTermDto.html":{}}}],["level1module",{"_index":38,"title":{"modules/Level1Module.html":{}},"body":{"modules/AppModule.html":{},"modules/Level1Module.html":{},"modules.html":{},"overview.html":{}}}],["level1service",{"_index":392,"title":{"injectables/Level1Service.html":{}},"body":{"controllers/Level1Controller.html":{},"modules/Level1Module.html":{},"injectables/Level1Service.html":{},"coverage.html":{},"overview.html":{}}}],["level2",{"_index":427,"title":{"entities/Level2.html":{}},"body":{"entities/Level2.html":{},"controllers/Level2Controller.html":{},"modules/Level2Module.html":{},"injectables/Level2Service.html":{},"entities/TeacherSubject.html":{},"coverage.html":{}}}],["level2.controller",{"_index":458,"title":{},"body":{"modules/Level2Module.html":{}}}],["level2.delete(id",{"_index":477,"title":{},"body":{"injectables/Level2Service.html":{}}}],["level2.dto",{"_index":447,"title":{},"body":{"controllers/Level2Controller.html":{},"injectables/Level2Service.html":{},"classes/UpdateLevel2Dto.html":{}}}],["level2.dto.ts",{"_index":318,"title":{},"body":{"classes/CreateLevel2Dto.html":{},"classes/UpdateLevel2Dto.html":{},"coverage.html":{}}}],["level2.dto.ts:10",{"_index":319,"title":{},"body":{"classes/CreateLevel2Dto.html":{}}}],["level2.dto.ts:13",{"_index":683,"title":{},"body":{"classes/UpdateLevel2Dto.html":{}}}],["level2.dto.ts:5",{"_index":320,"title":{},"body":{"classes/CreateLevel2Dto.html":{}}}],["level2.dto.ts:8",{"_index":684,"title":{},"body":{"classes/UpdateLevel2Dto.html":{}}}],["level2.find",{"_index":474,"title":{},"body":{"injectables/Level2Service.html":{}}}],["level2.findone(id",{"_index":475,"title":{},"body":{"injectables/Level2Service.html":{}}}],["level2.id",{"_index":591,"title":{},"body":{"entities/TeacherSubject.html":{}}}],["level2.service",{"_index":446,"title":{},"body":{"controllers/Level2Controller.html":{},"modules/Level2Module.html":{}}}],["level2.update(id,updatelevel2dto",{"_index":476,"title":{},"body":{"injectables/Level2Service.html":{}}}],["level2/level2.module",{"_index":81,"title":{},"body":{"modules/AppModule.html":{}}}],["level2_id",{"_index":573,"title":{},"body":{"entities/TeacherSubject.html":{}}}],["level2_id:number",{"_index":592,"title":{},"body":{"entities/TeacherSubject.html":{}}}],["level2controller",{"_index":436,"title":{"controllers/Level2Controller.html":{}},"body":{"controllers/Level2Controller.html":{},"modules/Level2Module.html":{},"coverage.html":{}}}],["level2id",{"_index":174,"title":{},"body":{"entities/Combination.html":{},"classes/CreateCombinationDto.html":{},"classes/CreateSubjectDto.html":{},"entities/Subject.html":{}}}],["level2id:string",{"_index":192,"title":{},"body":{"entities/Combination.html":{},"classes/CreateCombinationDto.html":{},"classes/CreateSubjectDto.html":{},"entities/Subject.html":{}}}],["level2module",{"_index":39,"title":{"modules/Level2Module.html":{}},"body":{"modules/AppModule.html":{},"modules/Level2Module.html":{},"modules.html":{},"overview.html":{}}}],["level2service",{"_index":445,"title":{"injectables/Level2Service.html":{}},"body":{"controllers/Level2Controller.html":{},"modules/Level2Module.html":{},"injectables/Level2Service.html":{},"coverage.html":{},"overview.html":{}}}],["license",{"_index":1070,"title":{},"body":{"index.html":{}}}],["licensed",{"_index":1046,"title":{},"body":{"index.html":{}}}],["loader",{"_index":1000,"title":{},"body":{"dependencies.html":{}}}],["local",{"_index":486,"title":{},"body":{"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["local.strategy",{"_index":111,"title":{},"body":{"modules/AuthModule.html":{}}}],["localauthguard",{"_index":478,"title":{"injectables/LocalAuthGuard.html":{}},"body":{"injectables/LocalAuthGuard.html":{},"coverage.html":{}}}],["localstrategy",{"_index":103,"title":{"injectables/LocalStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/LocalStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["login",{"_index":715,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["login(@body",{"_index":730,"title":{},"body":{"controllers/UserController.html":{}}}],["login(loginuserdto",{"_index":721,"title":{},"body":{"controllers/UserController.html":{}}}],["login.dto",{"_index":958,"title":{},"body":{"classes/createUserDto.html":{}}}],["loginuser",{"_index":746,"title":{},"body":{"injectables/UserService.html":{}}}],["loginuser(loginuserdto",{"_index":752,"title":{},"body":{"injectables/UserService.html":{}}}],["loginuserdto",{"_index":151,"title":{"classes/loginUserDto.html":{}},"body":{"injectables/AuthService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{},"classes/createUserDto.html":{},"classes/loginUserDto.html":{}}}],["loginuserdto:16",{"_index":951,"title":{},"body":{"classes/createUserDto.html":{}}}],["loginuserdto:19",{"_index":954,"title":{},"body":{"classes/createUserDto.html":{}}}],["lower",{"_index":1121,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mailexist",{"_index":125,"title":{},"body":{"injectables/AuthService.html":{}}}],["mailexist(email",{"_index":142,"title":{},"body":{"injectables/AuthService.html":{}}}],["mailexist(email:string",{"_index":161,"title":{},"body":{"injectables/AuthService.html":{}}}],["map",{"_index":761,"title":{},"body":{"injectables/UserService.html":{}}}],["matching",{"_index":28,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"entities/Combination.html":{},"controllers/CombinationsController.html":{},"modules/CombinationsModule.html":{},"injectables/CombinationsService.html":{},"classes/CreateCombinationDto.html":{},"classes/CreateLevel1Dto.html":{},"classes/CreateLevel2Dto.html":{},"classes/CreateSubjectDto.html":{},"classes/CreateTeacherSubjectDto.html":{},"classes/CreateTermDto.html":{},"classes/CreateWorkspaceDto.html":{},"classes/CreateWorkspaceQuizQuestionDto.html":{},"classes/CreateWorkspaceQuizQuestionOptionDto.html":{},"classes/CreateWorkspaceStudentResultDto.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"entities/Level1.html":{},"controllers/Level1Controller.html":{},"modules/Level1Module.html":{},"injectables/Level1Service.html":{},"entities/Level2.html":{},"controllers/Level2Controller.html":{},"modules/Level2Module.html":{},"injectables/Level2Service.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"guards/RolesGuard.html":{},"entities/Subject.html":{},"controllers/SubjectsController.html":{},"modules/SubjectsModule.html":{},"injectables/SubjectsService.html":{},"entities/TeacherSubject.html":{},"controllers/TeacherSubjectController.html":{},"modules/TeacherSubjectModule.html":{},"injectables/TeacherSubjectService.html":{},"entities/Term.html":{},"controllers/TermsController.html":{},"modules/TermsModule.html":{},"injectables/TermsService.html":{},"classes/UpdateCombinationDto.html":{},"classes/UpdateLevel1Dto.html":{},"classes/UpdateLevel2Dto.html":{},"classes/UpdateSubjectDto.html":{},"classes/UpdateTeacherSubjectDto.html":{},"classes/UpdateTermDto.html":{},"classes/UpdateWorkspaceDto.html":{},"classes/UpdateWorkspaceQuizQuestionDto.html":{},"classes/UpdateWorkspaceQuizQuestionOptionDto.html":{},"classes/UpdateWorkspaceStudentResultDto.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"classes/Workspace.html":{},"classes/WorkspaceQuizQuestion.html":{},"classes/WorkspaceQuizQuestionOption.html":{},"controllers/WorkspaceQuizQuestionOptionsController.html":{},"modules/WorkspaceQuizQuestionOptionsModule.html":{},"injectables/WorkspaceQuizQuestionOptionsService.html":{},"controllers/WorkspaceQuizQuestionsController.html":{},"modules/WorkspaceQuizQuestionsModule.html":{},"injectables/WorkspaceQuizQuestionsService.html":{},"classes/WorkspaceStudentResult.html":{},"controllers/WorkspaceStudentResultsController.html":{},"modules/WorkspaceStudentResultsModule.html":{},"injectables/WorkspaceStudentResultsService.html":{},"controllers/WorkspacesController.html":{},"modules/WorkspacesModule.html":{},"injectables/WorkspacesService.html":{},"coverage.html":{},"classes/createUserDto.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"classes/loginUserDto.html":{},"modules.html":{},"overview.html":{},"entities/userEntity.html":{},"interfaces/userInterface.html":{},"miscellaneous/variables.html":{}}}],["message",{"_index":398,"title":{},"body":{"controllers/Level1Controller.html":{},"controllers/Level2Controller.html":{},"controllers/TermsController.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{},"entities/userEntity.html":{},"miscellaneous/variables.html":{}}}],["message:\"you",{"_index":250,"title":{},"body":{"controllers/CombinationsController.html":{},"controllers/SubjectsController.html":{}}}],["metadata",{"_index":994,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"controllers/CombinationsController.html":{},"injectables/CombinationsService.html":{},"injectables/JwtStrategy.html":{},"controllers/Level1Controller.html":{},"injectables/Level1Service.html":{},"controllers/Level2Controller.html":{},"injectables/Level2Service.html":{},"injectables/LocalStrategy.html":{},"guards/RolesGuard.html":{},"controllers/SubjectsController.html":{},"injectables/SubjectsService.html":{},"controllers/TeacherSubjectController.html":{},"injectables/TeacherSubjectService.html":{},"controllers/TermsController.html":{},"injectables/TermsService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"controllers/WorkspaceQuizQuestionOptionsController.html":{},"injectables/WorkspaceQuizQuestionOptionsService.html":{},"controllers/WorkspaceQuizQuestionsController.html":{},"injectables/WorkspaceQuizQuestionsService.html":{},"controllers/WorkspaceStudentResultsController.html":{},"injectables/WorkspaceStudentResultsService.html":{},"controllers/WorkspacesController.html":{},"injectables/WorkspacesService.html":{}}}],["miscellaneous",{"_index":1005,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":1045,"title":{},"body":{"index.html":{}}}],["moddles/role.enum",{"_index":509,"title":{},"body":{"guards/RolesGuard.html":{}}}],["mode",{"_index":1035,"title":{},"body":{"index.html":{}}}],["modles/user.entity",{"_index":738,"title":{},"body":{"modules/UserModule.html":{}}}],["module",{"_index":29,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CombinationsModule.html":{},"modules/Level1Module.html":{},"modules/Level2Module.html":{},"modules/SubjectsModule.html":{},"modules/TeacherSubjectModule.html":{},"modules/TermsModule.html":{},"modules/UserModule.html":{},"modules/WorkspaceQuizQuestionOptionsModule.html":{},"modules/WorkspaceQuizQuestionsModule.html":{},"modules/WorkspaceStudentResultsModule.html":{},"modules/WorkspacesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CombinationsModule.html":{},"modules/Level1Module.html":{},"modules/Level2Module.html":{},"modules/SubjectsModule.html":{},"modules/TeacherSubjectModule.html":{},"modules/TermsModule.html":{},"modules/UserModule.html":{},"modules/WorkspaceQuizQuestionOptionsModule.html":{},"modules/WorkspaceQuizQuestionsModule.html":{},"modules/WorkspaceStudentResultsModule.html":{},"modules/WorkspacesModule.html":{}}}],["modules",{"_index":31,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CombinationsModule.html":{},"modules/Level1Module.html":{},"modules/Level2Module.html":{},"modules/SubjectsModule.html":{},"modules/TeacherSubjectModule.html":{},"modules/TermsModule.html":{},"modules/UserModule.html":{},"modules/WorkspaceQuizQuestionOptionsModule.html":{},"modules/WorkspaceQuizQuestionsModule.html":{},"modules/WorkspaceStudentResultsModule.html":{},"modules/WorkspacesModule.html":{},"modules.html":{},"overview.html":{}}}],["moment",{"_index":986,"title":{},"body":{"dependencies.html":{}}}],["more",{"_index":1059,"title":{},"body":{"index.html":{}}}],["myśliwiec",{"_index":1065,"title":{},"body":{"index.html":{}}}],["name",{"_index":132,"title":{},"body":{"injectables/AuthService.html":{},"entities/Combination.html":{},"controllers/CombinationsController.html":{},"injectables/CombinationsService.html":{},"classes/CreateCombinationDto.html":{},"classes/CreateLevel1Dto.html":{},"classes/CreateLevel2Dto.html":{},"classes/CreateSubjectDto.html":{},"classes/CreateTermDto.html":{},"injectables/JwtStrategy.html":{},"entities/Level1.html":{},"controllers/Level1Controller.html":{},"injectables/Level1Service.html":{},"entities/Level2.html":{},"controllers/Level2Controller.html":{},"injectables/Level2Service.html":{},"injectables/LocalStrategy.html":{},"guards/RolesGuard.html":{},"entities/Subject.html":{},"controllers/SubjectsController.html":{},"injectables/SubjectsService.html":{},"controllers/TeacherSubjectController.html":{},"injectables/TeacherSubjectService.html":{},"entities/Term.html":{},"controllers/TermsController.html":{},"injectables/TermsService.html":{},"classes/UpdateLevel2Dto.html":{},"classes/UpdateTermDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"classes/Workspace.html":{},"controllers/WorkspaceQuizQuestionOptionsController.html":{},"injectables/WorkspaceQuizQuestionOptionsService.html":{},"controllers/WorkspaceQuizQuestionsController.html":{},"injectables/WorkspaceQuizQuestionsService.html":{},"controllers/WorkspaceStudentResultsController.html":{},"injectables/WorkspaceStudentResultsService.html":{},"controllers/WorkspacesController.html":{},"injectables/WorkspacesService.html":{},"entities/userEntity.html":{}}}],["name:string",{"_index":190,"title":{},"body":{"entities/Combination.html":{},"classes/CreateCombinationDto.html":{},"classes/CreateLevel1Dto.html":{},"classes/CreateLevel2Dto.html":{},"classes/CreateSubjectDto.html":{},"classes/CreateTermDto.html":{},"entities/Level1.html":{},"entities/Level2.html":{},"entities/Subject.html":{},"entities/Term.html":{},"classes/UpdateLevel2Dto.html":{},"classes/UpdateTermDto.html":{},"classes/Workspace.html":{}}}],["names",{"_index":948,"title":{},"body":{"classes/createUserDto.html":{},"entities/userEntity.html":{},"interfaces/userInterface.html":{}}}],["names:string",{"_index":959,"title":{},"body":{"classes/createUserDto.html":{}}}],["names?:string",{"_index":1107,"title":{},"body":{"interfaces/userInterface.html":{}}}],["nest",{"_index":1024,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":1069,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":18,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CombinationsController.html":{},"modules/CombinationsModule.html":{},"injectables/CombinationsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"controllers/Level1Controller.html":{},"modules/Level1Module.html":{},"injectables/Level1Service.html":{},"controllers/Level2Controller.html":{},"modules/Level2Module.html":{},"injectables/Level2Service.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"guards/RolesGuard.html":{},"controllers/SubjectsController.html":{},"modules/SubjectsModule.html":{},"injectables/SubjectsService.html":{},"controllers/TeacherSubjectController.html":{},"modules/TeacherSubjectModule.html":{},"injectables/TeacherSubjectService.html":{},"controllers/TermsController.html":{},"modules/TermsModule.html":{},"injectables/TermsService.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"controllers/WorkspaceQuizQuestionOptionsController.html":{},"modules/WorkspaceQuizQuestionOptionsModule.html":{},"injectables/WorkspaceQuizQuestionOptionsService.html":{},"controllers/WorkspaceQuizQuestionsController.html":{},"modules/WorkspaceQuizQuestionsModule.html":{},"injectables/WorkspaceQuizQuestionsService.html":{},"controllers/WorkspaceStudentResultsController.html":{},"modules/WorkspaceStudentResultsModule.html":{},"injectables/WorkspaceStudentResultsService.html":{},"controllers/WorkspacesController.html":{},"modules/WorkspacesModule.html":{},"injectables/WorkspacesService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":56,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":505,"title":{},"body":{"guards/RolesGuard.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":108,"title":{},"body":{"modules/AuthModule.html":{},"controllers/CombinationsController.html":{},"modules/CombinationsModule.html":{},"controllers/Level1Controller.html":{},"modules/Level1Module.html":{},"controllers/Level2Controller.html":{},"modules/Level2Module.html":{},"controllers/SubjectsController.html":{},"modules/SubjectsModule.html":{},"controllers/TermsController.html":{},"modules/TermsModule.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["nestjs/mapped",{"_index":677,"title":{},"body":{"classes/UpdateCombinationDto.html":{},"classes/UpdateLevel1Dto.html":{},"classes/UpdateLevel2Dto.html":{},"classes/UpdateSubjectDto.html":{},"classes/UpdateTeacherSubjectDto.html":{},"classes/UpdateTermDto.html":{},"classes/UpdateWorkspaceDto.html":{},"classes/UpdateWorkspaceQuizQuestionDto.html":{},"classes/UpdateWorkspaceQuizQuestionOptionDto.html":{},"classes/UpdateWorkspaceStudentResultDto.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":110,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":971,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":972,"title":{},"body":{"dependencies.html":{}}}],["nestjs/typeorm",{"_index":58,"title":{},"body":{"modules/AppModule.html":{},"modules/CombinationsModule.html":{},"modules/Level1Module.html":{},"modules/Level2Module.html":{},"modules/SubjectsModule.html":{},"modules/TermsModule.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["new",{"_index":287,"title":{},"body":{"injectables/CombinationsService.html":{},"injectables/Level1Service.html":{},"injectables/LocalStrategy.html":{},"injectables/SubjectsService.html":{},"injectables/TeacherSubjectService.html":{},"injectables/TermsService.html":{},"injectables/UserService.html":{},"injectables/WorkspaceQuizQuestionOptionsService.html":{},"injectables/WorkspaceQuizQuestionsService.html":{},"injectables/WorkspaceStudentResultsService.html":{},"injectables/WorkspacesService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["node.js",{"_index":1015,"title":{},"body":{"index.html":{}}}],["npm",{"_index":1028,"title":{},"body":{"index.html":{}}}],["null",{"_index":1099,"title":{},"body":{"entities/userEntity.html":{}}}],["number",{"_index":175,"title":{},"body":{"entities/Combination.html":{},"injectables/CombinationsService.html":{},"entities/Level1.html":{},"injectables/Level1Service.html":{},"entities/Level2.html":{},"injectables/Level2Service.html":{},"entities/Subject.html":{},"injectables/SubjectsService.html":{},"entities/TeacherSubject.html":{},"injectables/TeacherSubjectService.html":{},"entities/Term.html":{},"injectables/TermsService.html":{},"classes/Workspace.html":{},"injectables/WorkspaceQuizQuestionOptionsService.html":{},"injectables/WorkspaceQuizQuestionsService.html":{},"injectables/WorkspaceStudentResultsService.html":{},"injectables/WorkspacesService.html":{},"classes/createUserDto.html":{},"entities/userEntity.html":{},"interfaces/userInterface.html":{}}}],["object",{"_index":1117,"title":{},"body":{"miscellaneous/variables.html":{}}}],["observable",{"_index":759,"title":{},"body":{"injectables/UserService.html":{}}}],["onetomany",{"_index":586,"title":{},"body":{"entities/TeacherSubject.html":{}}}],["open",{"_index":1047,"title":{},"body":{"index.html":{}}}],["option.dto",{"_index":707,"title":{},"body":{"classes/UpdateWorkspaceQuizQuestionOptionDto.html":{},"controllers/WorkspaceQuizQuestionOptionsController.html":{},"injectables/WorkspaceQuizQuestionOptionsService.html":{}}}],["option.dto.ts",{"_index":345,"title":{},"body":{"classes/CreateWorkspaceQuizQuestionOptionDto.html":{},"classes/UpdateWorkspaceQuizQuestionOptionDto.html":{},"coverage.html":{}}}],["option.entity.ts",{"_index":806,"title":{},"body":{"classes/WorkspaceQuizQuestionOption.html":{},"coverage.html":{}}}],["optional",{"_index":134,"title":{},"body":{"injectables/AuthService.html":{},"controllers/CombinationsController.html":{},"injectables/CombinationsService.html":{},"injectables/JwtStrategy.html":{},"controllers/Level1Controller.html":{},"injectables/Level1Service.html":{},"controllers/Level2Controller.html":{},"injectables/Level2Service.html":{},"injectables/LocalStrategy.html":{},"guards/RolesGuard.html":{},"controllers/SubjectsController.html":{},"injectables/SubjectsService.html":{},"controllers/TeacherSubjectController.html":{},"injectables/TeacherSubjectService.html":{},"controllers/TermsController.html":{},"injectables/TermsService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"controllers/WorkspaceQuizQuestionOptionsController.html":{},"injectables/WorkspaceQuizQuestionOptionsService.html":{},"controllers/WorkspaceQuizQuestionsController.html":{},"injectables/WorkspaceQuizQuestionsService.html":{},"controllers/WorkspaceStudentResultsController.html":{},"injectables/WorkspaceStudentResultsService.html":{},"controllers/WorkspacesController.html":{},"injectables/WorkspacesService.html":{},"interfaces/userInterface.html":{}}}],["options",{"_index":756,"title":{},"body":{"injectables/UserService.html":{},"controllers/WorkspaceQuizQuestionOptionsController.html":{}}}],["options.controller",{"_index":826,"title":{},"body":{"modules/WorkspaceQuizQuestionOptionsModule.html":{}}}],["options.controller.ts",{"_index":808,"title":{},"body":{"controllers/WorkspaceQuizQuestionOptionsController.html":{},"coverage.html":{}}}],["options.controller.ts:11",{"_index":810,"title":{},"body":{"controllers/WorkspaceQuizQuestionOptionsController.html":{}}}],["options.controller.ts:16",{"_index":811,"title":{},"body":{"controllers/WorkspaceQuizQuestionOptionsController.html":{}}}],["options.controller.ts:21",{"_index":812,"title":{},"body":{"controllers/WorkspaceQuizQuestionOptionsController.html":{}}}],["options.controller.ts:26",{"_index":814,"title":{},"body":{"controllers/WorkspaceQuizQuestionOptionsController.html":{}}}],["options.controller.ts:31",{"_index":813,"title":{},"body":{"controllers/WorkspaceQuizQuestionOptionsController.html":{}}}],["options.module",{"_index":77,"title":{},"body":{"modules/AppModule.html":{}}}],["options.module.ts",{"_index":825,"title":{},"body":{"modules/WorkspaceQuizQuestionOptionsModule.html":{}}}],["options.service",{"_index":816,"title":{},"body":{"controllers/WorkspaceQuizQuestionOptionsController.html":{},"modules/WorkspaceQuizQuestionOptionsModule.html":{}}}],["options.service.ts",{"_index":827,"title":{},"body":{"injectables/WorkspaceQuizQuestionOptionsService.html":{},"coverage.html":{}}}],["options.service.ts:11",{"_index":829,"title":{},"body":{"injectables/WorkspaceQuizQuestionOptionsService.html":{}}}],["options.service.ts:15",{"_index":830,"title":{},"body":{"injectables/WorkspaceQuizQuestionOptionsService.html":{}}}],["options.service.ts:19",{"_index":832,"title":{},"body":{"injectables/WorkspaceQuizQuestionOptionsService.html":{}}}],["options.service.ts:23",{"_index":831,"title":{},"body":{"injectables/WorkspaceQuizQuestionOptionsService.html":{}}}],["options.service.ts:7",{"_index":828,"title":{},"body":{"injectables/WorkspaceQuizQuestionOptionsService.html":{}}}],["options/dto/create",{"_index":344,"title":{},"body":{"classes/CreateWorkspaceQuizQuestionOptionDto.html":{},"coverage.html":{}}}],["options/dto/update",{"_index":706,"title":{},"body":{"classes/UpdateWorkspaceQuizQuestionOptionDto.html":{},"coverage.html":{}}}],["options/entities/workspace",{"_index":805,"title":{},"body":{"classes/WorkspaceQuizQuestionOption.html":{},"coverage.html":{}}}],["options/workspace",{"_index":76,"title":{},"body":{"modules/AppModule.html":{},"controllers/WorkspaceQuizQuestionOptionsController.html":{},"modules/WorkspaceQuizQuestionOptionsModule.html":{},"injectables/WorkspaceQuizQuestionOptionsService.html":{},"coverage.html":{}}}],["out",{"_index":50,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CombinationsModule.html":{},"modules/Level1Module.html":{},"modules/Level2Module.html":{},"modules/SubjectsModule.html":{},"modules/TeacherSubjectModule.html":{},"modules/TermsModule.html":{},"modules/UserModule.html":{},"modules/WorkspaceQuizQuestionOptionsModule.html":{},"modules/WorkspaceQuizQuestionsModule.html":{},"modules/WorkspaceStudentResultsModule.html":{},"modules/WorkspacesModule.html":{},"overview.html":{}}}],["overview",{"_index":1076,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":964,"title":{"dependencies.html":{}},"body":{}}],["param",{"_index":223,"title":{},"body":{"controllers/CombinationsController.html":{},"controllers/Level1Controller.html":{},"controllers/Level2Controller.html":{},"controllers/SubjectsController.html":{},"controllers/TeacherSubjectController.html":{},"controllers/TermsController.html":{},"controllers/WorkspaceQuizQuestionOptionsController.html":{},"controllers/WorkspaceQuizQuestionsController.html":{},"controllers/WorkspaceStudentResultsController.html":{},"controllers/WorkspacesController.html":{}}}],["param('id",{"_index":400,"title":{},"body":{"controllers/Level1Controller.html":{},"controllers/TermsController.html":{}}}],["parameters",{"_index":131,"title":{},"body":{"injectables/AuthService.html":{},"controllers/CombinationsController.html":{},"injectables/CombinationsService.html":{},"injectables/JwtStrategy.html":{},"controllers/Level1Controller.html":{},"injectables/Level1Service.html":{},"controllers/Level2Controller.html":{},"injectables/Level2Service.html":{},"injectables/LocalStrategy.html":{},"guards/RolesGuard.html":{},"controllers/SubjectsController.html":{},"injectables/SubjectsService.html":{},"controllers/TeacherSubjectController.html":{},"injectables/TeacherSubjectService.html":{},"controllers/TermsController.html":{},"injectables/TermsService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"controllers/WorkspaceQuizQuestionOptionsController.html":{},"injectables/WorkspaceQuizQuestionOptionsService.html":{},"controllers/WorkspaceQuizQuestionsController.html":{},"injectables/WorkspaceQuizQuestionsService.html":{},"controllers/WorkspaceStudentResultsController.html":{},"injectables/WorkspaceStudentResultsService.html":{},"controllers/WorkspacesController.html":{},"injectables/WorkspacesService.html":{}}}],["parser",{"_index":980,"title":{},"body":{"dependencies.html":{}}}],["partialtype",{"_index":676,"title":{},"body":{"classes/UpdateCombinationDto.html":{},"classes/UpdateLevel1Dto.html":{},"classes/UpdateLevel2Dto.html":{},"classes/UpdateSubjectDto.html":{},"classes/UpdateTeacherSubjectDto.html":{},"classes/UpdateTermDto.html":{},"classes/UpdateWorkspaceDto.html":{},"classes/UpdateWorkspaceQuizQuestionDto.html":{},"classes/UpdateWorkspaceQuizQuestionOptionDto.html":{},"classes/UpdateWorkspaceStudentResultDto.html":{}}}],["partialtype(createcombinationdto",{"_index":679,"title":{},"body":{"classes/UpdateCombinationDto.html":{}}}],["partialtype(createlevel1dto",{"_index":681,"title":{},"body":{"classes/UpdateLevel1Dto.html":{}}}],["partialtype(createlevel2dto",{"_index":686,"title":{},"body":{"classes/UpdateLevel2Dto.html":{}}}],["partialtype(createsubjectdto",{"_index":688,"title":{},"body":{"classes/UpdateSubjectDto.html":{}}}],["partialtype(createteachersubjectdto",{"_index":690,"title":{},"body":{"classes/UpdateTeacherSubjectDto.html":{}}}],["partialtype(createtermdto",{"_index":694,"title":{},"body":{"classes/UpdateTermDto.html":{}}}],["partialtype(createworkspacedto",{"_index":700,"title":{},"body":{"classes/UpdateWorkspaceDto.html":{}}}],["partialtype(createworkspacequizquestiondto",{"_index":704,"title":{},"body":{"classes/UpdateWorkspaceQuizQuestionDto.html":{}}}],["partialtype(createworkspacequizquestionoptiondto",{"_index":708,"title":{},"body":{"classes/UpdateWorkspaceQuizQuestionOptionDto.html":{}}}],["partialtype(createworkspacestudentresultdto",{"_index":712,"title":{},"body":{"classes/UpdateWorkspaceStudentResultDto.html":{}}}],["passport",{"_index":362,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":109,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportstrategy",{"_index":364,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["passportstrategy(strategy",{"_index":365,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["password",{"_index":135,"title":{},"body":{"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"classes/createUserDto.html":{},"classes/loginUserDto.html":{},"entities/userEntity.html":{},"interfaces/userInterface.html":{},"miscellaneous/variables.html":{}}}],["password:process.env.postgres_password",{"_index":88,"title":{},"body":{"modules/AppModule.html":{}}}],["password:string",{"_index":962,"title":{},"body":{"classes/createUserDto.html":{},"classes/loginUserDto.html":{}}}],["password?:string",{"_index":1110,"title":{},"body":{"interfaces/userInterface.html":{}}}],["password_message",{"_index":941,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["password_rule",{"_index":942,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["patch",{"_index":222,"title":{},"body":{"controllers/CombinationsController.html":{},"controllers/Level1Controller.html":{},"controllers/Level2Controller.html":{},"controllers/SubjectsController.html":{},"controllers/TeacherSubjectController.html":{},"controllers/TermsController.html":{},"controllers/WorkspaceQuizQuestionOptionsController.html":{},"controllers/WorkspaceQuizQuestionsController.html":{},"controllers/WorkspaceStudentResultsController.html":{},"controllers/WorkspacesController.html":{}}}],["patch(':id",{"_index":259,"title":{},"body":{"controllers/CombinationsController.html":{},"controllers/Level1Controller.html":{},"controllers/Level2Controller.html":{},"controllers/SubjectsController.html":{},"controllers/TeacherSubjectController.html":{},"controllers/TermsController.html":{},"controllers/WorkspaceQuizQuestionOptionsController.html":{},"controllers/WorkspaceQuizQuestionsController.html":{},"controllers/WorkspaceStudentResultsController.html":{},"controllers/WorkspacesController.html":{}}}],["payload",{"_index":359,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["payload.sub",{"_index":373,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["payload.username",{"_index":374,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["pg",{"_index":991,"title":{},"body":{"dependencies.html":{}}}],["please",{"_index":1057,"title":{},"body":{"index.html":{}}}],["port:parseint(process.env.postgres_port",{"_index":86,"title":{},"body":{"modules/AppModule.html":{}}}],["post",{"_index":220,"title":{},"body":{"controllers/CombinationsController.html":{},"controllers/Level1Controller.html":{},"controllers/Level2Controller.html":{},"controllers/SubjectsController.html":{},"controllers/TeacherSubjectController.html":{},"controllers/TermsController.html":{},"controllers/UserController.html":{},"controllers/WorkspaceQuizQuestionOptionsController.html":{},"controllers/WorkspaceQuizQuestionsController.html":{},"controllers/WorkspaceStudentResultsController.html":{},"controllers/WorkspacesController.html":{}}}],["post('login",{"_index":728,"title":{},"body":{"controllers/UserController.html":{}}}],["post('login')@httpcode(200",{"_index":722,"title":{},"body":{"controllers/UserController.html":{}}}],["post('signup",{"_index":718,"title":{},"body":{"controllers/UserController.html":{}}}],["prefix",{"_index":195,"title":{},"body":{"controllers/CombinationsController.html":{},"controllers/Level1Controller.html":{},"controllers/Level2Controller.html":{},"controllers/SubjectsController.html":{},"controllers/TeacherSubjectController.html":{},"controllers/TermsController.html":{},"controllers/UserController.html":{},"controllers/WorkspaceQuizQuestionOptionsController.html":{},"controllers/WorkspaceQuizQuestionsController.html":{},"controllers/WorkspaceStudentResultsController.html":{},"controllers/WorkspacesController.html":{}}}],["primarygeneratedcolumn",{"_index":176,"title":{},"body":{"entities/Combination.html":{},"entities/Level1.html":{},"entities/Level2.html":{},"entities/Subject.html":{},"entities/TeacherSubject.html":{},"entities/Term.html":{},"classes/Workspace.html":{},"classes/createUserDto.html":{},"entities/userEntity.html":{}}}],["private",{"_index":236,"title":{},"body":{"controllers/CombinationsController.html":{},"controllers/Level1Controller.html":{},"controllers/Level2Controller.html":{},"controllers/SubjectsController.html":{},"controllers/TermsController.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["production",{"_index":1037,"title":{},"body":{"index.html":{}}}],["progressive",{"_index":1014,"title":{},"body":{"index.html":{}}}],["project",{"_index":1048,"title":{},"body":{"index.html":{}}}],["properties",{"_index":171,"title":{},"body":{"entities/Combination.html":{},"classes/CreateCombinationDto.html":{},"classes/CreateLevel1Dto.html":{},"classes/CreateLevel2Dto.html":{},"classes/CreateSubjectDto.html":{},"classes/CreateTermDto.html":{},"entities/Level1.html":{},"entities/Level2.html":{},"entities/Subject.html":{},"entities/TeacherSubject.html":{},"entities/Term.html":{},"classes/UpdateLevel2Dto.html":{},"classes/UpdateTermDto.html":{},"classes/Workspace.html":{},"classes/createUserDto.html":{},"classes/loginUserDto.html":{},"entities/userEntity.html":{},"interfaces/userInterface.html":{}}}],["providers",{"_index":52,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CombinationsModule.html":{},"modules/Level1Module.html":{},"modules/Level2Module.html":{},"modules/SubjectsModule.html":{},"modules/TeacherSubjectModule.html":{},"modules/TermsModule.html":{},"modules/UserModule.html":{},"modules/WorkspaceQuizQuestionOptionsModule.html":{},"modules/WorkspaceQuizQuestionsModule.html":{},"modules/WorkspaceStudentResultsModule.html":{},"modules/WorkspacesModule.html":{}}}],["question",{"_index":75,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateWorkspaceQuizQuestionOptionDto.html":{},"classes/UpdateWorkspaceQuizQuestionOptionDto.html":{},"classes/WorkspaceQuizQuestionOption.html":{},"controllers/WorkspaceQuizQuestionOptionsController.html":{},"modules/WorkspaceQuizQuestionOptionsModule.html":{},"injectables/WorkspaceQuizQuestionOptionsService.html":{},"coverage.html":{}}}],["question.dto",{"_index":703,"title":{},"body":{"classes/UpdateWorkspaceQuizQuestionDto.html":{},"controllers/WorkspaceQuizQuestionsController.html":{},"injectables/WorkspaceQuizQuestionsService.html":{}}}],["question.dto.ts",{"_index":342,"title":{},"body":{"classes/CreateWorkspaceQuizQuestionDto.html":{},"classes/UpdateWorkspaceQuizQuestionDto.html":{},"coverage.html":{}}}],["question.entity.ts",{"_index":803,"title":{},"body":{"classes/WorkspaceQuizQuestion.html":{},"coverage.html":{}}}],["questions",{"_index":836,"title":{},"body":{"controllers/WorkspaceQuizQuestionsController.html":{}}}],["questions.controller",{"_index":853,"title":{},"body":{"modules/WorkspaceQuizQuestionsModule.html":{}}}],["questions.controller.ts",{"_index":835,"title":{},"body":{"controllers/WorkspaceQuizQuestionsController.html":{},"coverage.html":{}}}],["questions.controller.ts:11",{"_index":838,"title":{},"body":{"controllers/WorkspaceQuizQuestionsController.html":{}}}],["questions.controller.ts:16",{"_index":839,"title":{},"body":{"controllers/WorkspaceQuizQuestionsController.html":{}}}],["questions.controller.ts:21",{"_index":840,"title":{},"body":{"controllers/WorkspaceQuizQuestionsController.html":{}}}],["questions.controller.ts:26",{"_index":842,"title":{},"body":{"controllers/WorkspaceQuizQuestionsController.html":{}}}],["questions.controller.ts:31",{"_index":841,"title":{},"body":{"controllers/WorkspaceQuizQuestionsController.html":{}}}],["questions.module",{"_index":74,"title":{},"body":{"modules/AppModule.html":{}}}],["questions.module.ts",{"_index":852,"title":{},"body":{"modules/WorkspaceQuizQuestionsModule.html":{}}}],["questions.service",{"_index":844,"title":{},"body":{"controllers/WorkspaceQuizQuestionsController.html":{},"modules/WorkspaceQuizQuestionsModule.html":{}}}],["questions.service.ts",{"_index":854,"title":{},"body":{"injectables/WorkspaceQuizQuestionsService.html":{},"coverage.html":{}}}],["questions.service.ts:11",{"_index":856,"title":{},"body":{"injectables/WorkspaceQuizQuestionsService.html":{}}}],["questions.service.ts:15",{"_index":857,"title":{},"body":{"injectables/WorkspaceQuizQuestionsService.html":{}}}],["questions.service.ts:19",{"_index":859,"title":{},"body":{"injectables/WorkspaceQuizQuestionsService.html":{}}}],["questions.service.ts:23",{"_index":858,"title":{},"body":{"injectables/WorkspaceQuizQuestionsService.html":{}}}],["questions.service.ts:7",{"_index":855,"title":{},"body":{"injectables/WorkspaceQuizQuestionsService.html":{}}}],["questions/dto/create",{"_index":341,"title":{},"body":{"classes/CreateWorkspaceQuizQuestionDto.html":{},"coverage.html":{}}}],["questions/dto/update",{"_index":702,"title":{},"body":{"classes/UpdateWorkspaceQuizQuestionDto.html":{},"coverage.html":{}}}],["questions/entities/workspace",{"_index":802,"title":{},"body":{"classes/WorkspaceQuizQuestion.html":{},"coverage.html":{}}}],["questions/workspace",{"_index":73,"title":{},"body":{"modules/AppModule.html":{},"controllers/WorkspaceQuizQuestionsController.html":{},"modules/WorkspaceQuizQuestionsModule.html":{},"injectables/WorkspaceQuizQuestionsService.html":{},"coverage.html":{}}}],["quiz",{"_index":72,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateWorkspaceQuizQuestionDto.html":{},"classes/CreateWorkspaceQuizQuestionOptionDto.html":{},"classes/UpdateWorkspaceQuizQuestionDto.html":{},"classes/UpdateWorkspaceQuizQuestionOptionDto.html":{},"classes/WorkspaceQuizQuestion.html":{},"classes/WorkspaceQuizQuestionOption.html":{},"controllers/WorkspaceQuizQuestionOptionsController.html":{},"modules/WorkspaceQuizQuestionOptionsModule.html":{},"injectables/WorkspaceQuizQuestionOptionsService.html":{},"controllers/WorkspaceQuizQuestionsController.html":{},"modules/WorkspaceQuizQuestionsModule.html":{},"injectables/WorkspaceQuizQuestionsService.html":{},"coverage.html":{}}}],["read",{"_index":1058,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"controllers/CombinationsController.html":{},"controllers/Level1Controller.html":{},"controllers/Level2Controller.html":{},"controllers/SubjectsController.html":{},"controllers/TeacherSubjectController.html":{},"controllers/TermsController.html":{},"controllers/WorkspaceQuizQuestionOptionsController.html":{},"controllers/WorkspaceQuizQuestionsController.html":{},"controllers/WorkspaceStudentResultsController.html":{},"controllers/WorkspacesController.html":{}}}],["reflect",{"_index":993,"title":{},"body":{"dependencies.html":{}}}],["reflector",{"_index":498,"title":{},"body":{"guards/RolesGuard.html":{}}}],["regularexpression",{"_index":943,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["remove",{"_index":200,"title":{},"body":{"controllers/CombinationsController.html":{},"injectables/CombinationsService.html":{},"controllers/Level1Controller.html":{},"injectables/Level1Service.html":{},"controllers/Level2Controller.html":{},"injectables/Level2Service.html":{},"controllers/SubjectsController.html":{},"injectables/SubjectsService.html":{},"controllers/TeacherSubjectController.html":{},"injectables/TeacherSubjectService.html":{},"controllers/TermsController.html":{},"injectables/TermsService.html":{},"controllers/WorkspaceQuizQuestionOptionsController.html":{},"injectables/WorkspaceQuizQuestionOptionsService.html":{},"controllers/WorkspaceQuizQuestionsController.html":{},"injectables/WorkspaceQuizQuestionsService.html":{},"controllers/WorkspaceStudentResultsController.html":{},"injectables/WorkspaceStudentResultsService.html":{},"controllers/WorkspacesController.html":{},"injectables/WorkspacesService.html":{}}}],["remove(@param('id",{"_index":612,"title":{},"body":{"controllers/TeacherSubjectController.html":{},"controllers/WorkspaceQuizQuestionOptionsController.html":{},"controllers/WorkspaceQuizQuestionsController.html":{},"controllers/WorkspaceStudentResultsController.html":{},"controllers/WorkspacesController.html":{}}}],["remove(@req",{"_index":263,"title":{},"body":{"controllers/CombinationsController.html":{},"controllers/Level1Controller.html":{},"controllers/Level2Controller.html":{},"controllers/SubjectsController.html":{},"controllers/TermsController.html":{}}}],["remove(id",{"_index":282,"title":{},"body":{"injectables/CombinationsService.html":{},"injectables/Level1Service.html":{},"injectables/Level2Service.html":{},"injectables/SubjectsService.html":{},"controllers/TeacherSubjectController.html":{},"injectables/TeacherSubjectService.html":{},"injectables/TermsService.html":{},"controllers/WorkspaceQuizQuestionOptionsController.html":{},"injectables/WorkspaceQuizQuestionOptionsService.html":{},"controllers/WorkspaceQuizQuestionsController.html":{},"injectables/WorkspaceQuizQuestionsService.html":{},"controllers/WorkspaceStudentResultsController.html":{},"injectables/WorkspaceStudentResultsService.html":{},"controllers/WorkspacesController.html":{},"injectables/WorkspacesService.html":{}}}],["remove(request",{"_index":213,"title":{},"body":{"controllers/CombinationsController.html":{},"controllers/Level1Controller.html":{},"controllers/Level2Controller.html":{},"controllers/SubjectsController.html":{},"controllers/TermsController.html":{}}}],["removes",{"_index":627,"title":{},"body":{"injectables/TeacherSubjectService.html":{},"injectables/WorkspaceQuizQuestionOptionsService.html":{},"injectables/WorkspaceQuizQuestionsService.html":{},"injectables/WorkspaceStudentResultsService.html":{},"injectables/WorkspacesService.html":{}}}],["repository",{"_index":758,"title":{},"body":{"injectables/UserService.html":{},"index.html":{}}}],["req",{"_index":390,"title":{},"body":{"controllers/Level1Controller.html":{},"controllers/TermsController.html":{},"controllers/UserController.html":{}}}],["request",{"_index":203,"title":{},"body":{"controllers/CombinationsController.html":{},"controllers/Level1Controller.html":{},"controllers/Level2Controller.html":{},"controllers/SubjectsController.html":{},"controllers/TermsController.html":{},"controllers/UserController.html":{}}}],["request,@body",{"_index":239,"title":{},"body":{"controllers/CombinationsController.html":{},"controllers/Level2Controller.html":{},"controllers/SubjectsController.html":{}}}],["request,@param('id",{"_index":257,"title":{},"body":{"controllers/CombinationsController.html":{},"controllers/Level2Controller.html":{},"controllers/SubjectsController.html":{}}}],["request.headers['authorization",{"_index":241,"title":{},"body":{"controllers/CombinationsController.html":{},"controllers/Level1Controller.html":{},"controllers/Level2Controller.html":{},"controllers/SubjectsController.html":{},"controllers/TermsController.html":{},"controllers/UserController.html":{}}}],["require('bcrypt",{"_index":155,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["required",{"_index":1098,"title":{},"body":{"entities/userEntity.html":{}}}],["required'})@column({default",{"_index":1086,"title":{},"body":{"entities/userEntity.html":{}}}],["required'})@isemail()@column({unique",{"_index":1082,"title":{},"body":{"entities/userEntity.html":{}}}],["required'})@length(5",{"_index":1088,"title":{},"body":{"entities/userEntity.html":{}}}],["requiredroles",{"_index":511,"title":{},"body":{"guards/RolesGuard.html":{}}}],["requiredroles.some((role",{"_index":517,"title":{},"body":{"guards/RolesGuard.html":{}}}],["reset",{"_index":49,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CombinationsModule.html":{},"modules/Level1Module.html":{},"modules/Level2Module.html":{},"modules/SubjectsModule.html":{},"modules/TeacherSubjectModule.html":{},"modules/TermsModule.html":{},"modules/UserModule.html":{},"modules/WorkspaceQuizQuestionOptionsModule.html":{},"modules/WorkspaceQuizQuestionsModule.html":{},"modules/WorkspaceStudentResultsModule.html":{},"modules/WorkspacesModule.html":{},"overview.html":{}}}],["result.dto",{"_index":711,"title":{},"body":{"classes/UpdateWorkspaceStudentResultDto.html":{},"controllers/WorkspaceStudentResultsController.html":{},"injectables/WorkspaceStudentResultsService.html":{}}}],["result.dto.ts",{"_index":348,"title":{},"body":{"classes/CreateWorkspaceStudentResultDto.html":{},"classes/UpdateWorkspaceStudentResultDto.html":{},"coverage.html":{}}}],["result.entity.ts",{"_index":863,"title":{},"body":{"classes/WorkspaceStudentResult.html":{},"coverage.html":{}}}],["results",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"entities/Combination.html":{},"controllers/CombinationsController.html":{},"modules/CombinationsModule.html":{},"injectables/CombinationsService.html":{},"classes/CreateCombinationDto.html":{},"classes/CreateLevel1Dto.html":{},"classes/CreateLevel2Dto.html":{},"classes/CreateSubjectDto.html":{},"classes/CreateTeacherSubjectDto.html":{},"classes/CreateTermDto.html":{},"classes/CreateWorkspaceDto.html":{},"classes/CreateWorkspaceQuizQuestionDto.html":{},"classes/CreateWorkspaceQuizQuestionOptionDto.html":{},"classes/CreateWorkspaceStudentResultDto.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"entities/Level1.html":{},"controllers/Level1Controller.html":{},"modules/Level1Module.html":{},"injectables/Level1Service.html":{},"entities/Level2.html":{},"controllers/Level2Controller.html":{},"modules/Level2Module.html":{},"injectables/Level2Service.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"guards/RolesGuard.html":{},"entities/Subject.html":{},"controllers/SubjectsController.html":{},"modules/SubjectsModule.html":{},"injectables/SubjectsService.html":{},"entities/TeacherSubject.html":{},"controllers/TeacherSubjectController.html":{},"modules/TeacherSubjectModule.html":{},"injectables/TeacherSubjectService.html":{},"entities/Term.html":{},"controllers/TermsController.html":{},"modules/TermsModule.html":{},"injectables/TermsService.html":{},"classes/UpdateCombinationDto.html":{},"classes/UpdateLevel1Dto.html":{},"classes/UpdateLevel2Dto.html":{},"classes/UpdateSubjectDto.html":{},"classes/UpdateTeacherSubjectDto.html":{},"classes/UpdateTermDto.html":{},"classes/UpdateWorkspaceDto.html":{},"classes/UpdateWorkspaceQuizQuestionDto.html":{},"classes/UpdateWorkspaceQuizQuestionOptionDto.html":{},"classes/UpdateWorkspaceStudentResultDto.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"classes/Workspace.html":{},"classes/WorkspaceQuizQuestion.html":{},"classes/WorkspaceQuizQuestionOption.html":{},"controllers/WorkspaceQuizQuestionOptionsController.html":{},"modules/WorkspaceQuizQuestionOptionsModule.html":{},"injectables/WorkspaceQuizQuestionOptionsService.html":{},"controllers/WorkspaceQuizQuestionsController.html":{},"modules/WorkspaceQuizQuestionsModule.html":{},"injectables/WorkspaceQuizQuestionsService.html":{},"classes/WorkspaceStudentResult.html":{},"controllers/WorkspaceStudentResultsController.html":{},"modules/WorkspaceStudentResultsModule.html":{},"injectables/WorkspaceStudentResultsService.html":{},"controllers/WorkspacesController.html":{},"modules/WorkspacesModule.html":{},"injectables/WorkspacesService.html":{},"coverage.html":{},"classes/createUserDto.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"classes/loginUserDto.html":{},"modules.html":{},"overview.html":{},"entities/userEntity.html":{},"interfaces/userInterface.html":{},"miscellaneous/variables.html":{}}}],["results.controller",{"_index":882,"title":{},"body":{"modules/WorkspaceStudentResultsModule.html":{}}}],["results.controller.ts",{"_index":865,"title":{},"body":{"controllers/WorkspaceStudentResultsController.html":{},"coverage.html":{}}}],["results.controller.ts:11",{"_index":867,"title":{},"body":{"controllers/WorkspaceStudentResultsController.html":{}}}],["results.controller.ts:16",{"_index":868,"title":{},"body":{"controllers/WorkspaceStudentResultsController.html":{}}}],["results.controller.ts:21",{"_index":869,"title":{},"body":{"controllers/WorkspaceStudentResultsController.html":{}}}],["results.controller.ts:26",{"_index":871,"title":{},"body":{"controllers/WorkspaceStudentResultsController.html":{}}}],["results.controller.ts:31",{"_index":870,"title":{},"body":{"controllers/WorkspaceStudentResultsController.html":{}}}],["results.module",{"_index":80,"title":{},"body":{"modules/AppModule.html":{}}}],["results.module.ts",{"_index":881,"title":{},"body":{"modules/WorkspaceStudentResultsModule.html":{}}}],["results.service",{"_index":873,"title":{},"body":{"controllers/WorkspaceStudentResultsController.html":{},"modules/WorkspaceStudentResultsModule.html":{}}}],["results.service.ts",{"_index":883,"title":{},"body":{"injectables/WorkspaceStudentResultsService.html":{},"coverage.html":{}}}],["results.service.ts:11",{"_index":885,"title":{},"body":{"injectables/WorkspaceStudentResultsService.html":{}}}],["results.service.ts:15",{"_index":886,"title":{},"body":{"injectables/WorkspaceStudentResultsService.html":{}}}],["results.service.ts:19",{"_index":888,"title":{},"body":{"injectables/WorkspaceStudentResultsService.html":{}}}],["results.service.ts:23",{"_index":887,"title":{},"body":{"injectables/WorkspaceStudentResultsService.html":{}}}],["results.service.ts:7",{"_index":884,"title":{},"body":{"injectables/WorkspaceStudentResultsService.html":{}}}],["results/dto/create",{"_index":347,"title":{},"body":{"classes/CreateWorkspaceStudentResultDto.html":{},"coverage.html":{}}}],["results/dto/update",{"_index":710,"title":{},"body":{"classes/UpdateWorkspaceStudentResultDto.html":{},"coverage.html":{}}}],["results/entities/workspace",{"_index":862,"title":{},"body":{"classes/WorkspaceStudentResult.html":{},"coverage.html":{}}}],["results/workspace",{"_index":79,"title":{},"body":{"modules/AppModule.html":{},"controllers/WorkspaceStudentResultsController.html":{},"modules/WorkspaceStudentResultsModule.html":{},"injectables/WorkspaceStudentResultsService.html":{},"coverage.html":{}}}],["return",{"_index":25,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"controllers/CombinationsController.html":{},"injectables/CombinationsService.html":{},"injectables/JwtStrategy.html":{},"controllers/Level1Controller.html":{},"injectables/Level1Service.html":{},"controllers/Level2Controller.html":{},"injectables/Level2Service.html":{},"injectables/LocalStrategy.html":{},"guards/RolesGuard.html":{},"controllers/SubjectsController.html":{},"injectables/SubjectsService.html":{},"controllers/TeacherSubjectController.html":{},"injectables/TeacherSubjectService.html":{},"controllers/TermsController.html":{},"injectables/TermsService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"controllers/WorkspaceQuizQuestionOptionsController.html":{},"injectables/WorkspaceQuizQuestionOptionsService.html":{},"controllers/WorkspaceQuizQuestionsController.html":{},"injectables/WorkspaceQuizQuestionsService.html":{},"controllers/WorkspaceStudentResultsController.html":{},"injectables/WorkspaceStudentResultsService.html":{},"controllers/WorkspacesController.html":{},"injectables/WorkspacesService.html":{}}}],["returns",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"controllers/CombinationsController.html":{},"injectables/CombinationsService.html":{},"injectables/JwtStrategy.html":{},"controllers/Level1Controller.html":{},"injectables/Level1Service.html":{},"controllers/Level2Controller.html":{},"injectables/Level2Service.html":{},"injectables/LocalStrategy.html":{},"guards/RolesGuard.html":{},"controllers/SubjectsController.html":{},"injectables/SubjectsService.html":{},"controllers/TeacherSubjectController.html":{},"injectables/TeacherSubjectService.html":{},"controllers/TermsController.html":{},"injectables/TermsService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"controllers/WorkspaceQuizQuestionOptionsController.html":{},"injectables/WorkspaceQuizQuestionOptionsService.html":{},"controllers/WorkspaceQuizQuestionsController.html":{},"injectables/WorkspaceQuizQuestionsService.html":{},"controllers/WorkspaceStudentResultsController.html":{},"injectables/WorkspaceStudentResultsService.html":{},"controllers/WorkspacesController.html":{},"injectables/WorkspacesService.html":{}}}],["rimraf",{"_index":996,"title":{},"body":{"dependencies.html":{}}}],["role",{"_index":508,"title":{},"body":{"guards/RolesGuard.html":{},"injectables/UserService.html":{},"classes/createUserDto.html":{},"miscellaneous/enumerations.html":{},"entities/userEntity.html":{},"interfaces/userInterface.html":{},"miscellaneous/variables.html":{}}}],["role:string",{"_index":963,"title":{},"body":{"classes/createUserDto.html":{}}}],["role?:string",{"_index":1111,"title":{},"body":{"interfaces/userInterface.html":{}}}],["roles",{"_index":925,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["roles_key",{"_index":506,"title":{},"body":{"guards/RolesGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["rolesguard",{"_index":409,"title":{"guards/RolesGuard.html":{}},"body":{"modules/Level1Module.html":{},"guards/RolesGuard.html":{},"coverage.html":{}}}],["run",{"_index":1032,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":762,"title":{},"body":{"injectables/UserService.html":{},"dependencies.html":{}}}],["sass",{"_index":999,"title":{},"body":{"dependencies.html":{}}}],["scalable",{"_index":1019,"title":{},"body":{"index.html":{}}}],["secret:'jwtsecret",{"_index":116,"title":{},"body":{"modules/AuthModule.html":{},"modules/CombinationsModule.html":{},"modules/Level1Module.html":{},"modules/Level2Module.html":{},"modules/SubjectsModule.html":{},"modules/TermsModule.html":{},"modules/UserModule.html":{}}}],["secretorkey:'jwtsecret",{"_index":371,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["server",{"_index":1020,"title":{},"body":{"index.html":{}}}],["services/auth/auth.service",{"_index":62,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/LocalStrategy.html":{},"injectables/UserService.html":{}}}],["services/user.service",{"_index":488,"title":{},"body":{"injectables/LocalStrategy.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{}}}],["setmetadata(roles_key",{"_index":1128,"title":{},"body":{"miscellaneous/variables.html":{}}}],["settings",{"_index":944,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["side",{"_index":1021,"title":{},"body":{"index.html":{}}}],["signoptions",{"_index":273,"title":{},"body":{"modules/CombinationsModule.html":{}}}],["signoptions:{expiresin:'1d",{"_index":117,"title":{},"body":{"modules/AuthModule.html":{},"modules/CombinationsModule.html":{},"modules/Level1Module.html":{},"modules/Level2Module.html":{},"modules/SubjectsModule.html":{},"modules/TermsModule.html":{},"modules/UserModule.html":{}}}],["signup",{"_index":785,"title":{},"body":{"injectables/UserService.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"entities/Combination.html":{},"controllers/CombinationsController.html":{},"modules/CombinationsModule.html":{},"injectables/CombinationsService.html":{},"classes/CreateCombinationDto.html":{},"classes/CreateLevel1Dto.html":{},"classes/CreateLevel2Dto.html":{},"classes/CreateSubjectDto.html":{},"classes/CreateTeacherSubjectDto.html":{},"classes/CreateTermDto.html":{},"classes/CreateWorkspaceDto.html":{},"classes/CreateWorkspaceQuizQuestionDto.html":{},"classes/CreateWorkspaceQuizQuestionOptionDto.html":{},"classes/CreateWorkspaceStudentResultDto.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"entities/Level1.html":{},"controllers/Level1Controller.html":{},"modules/Level1Module.html":{},"injectables/Level1Service.html":{},"entities/Level2.html":{},"controllers/Level2Controller.html":{},"modules/Level2Module.html":{},"injectables/Level2Service.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"guards/RolesGuard.html":{},"entities/Subject.html":{},"controllers/SubjectsController.html":{},"modules/SubjectsModule.html":{},"injectables/SubjectsService.html":{},"entities/TeacherSubject.html":{},"controllers/TeacherSubjectController.html":{},"modules/TeacherSubjectModule.html":{},"injectables/TeacherSubjectService.html":{},"entities/Term.html":{},"controllers/TermsController.html":{},"modules/TermsModule.html":{},"injectables/TermsService.html":{},"classes/UpdateCombinationDto.html":{},"classes/UpdateLevel1Dto.html":{},"classes/UpdateLevel2Dto.html":{},"classes/UpdateSubjectDto.html":{},"classes/UpdateTeacherSubjectDto.html":{},"classes/UpdateTermDto.html":{},"classes/UpdateWorkspaceDto.html":{},"classes/UpdateWorkspaceQuizQuestionDto.html":{},"classes/UpdateWorkspaceQuizQuestionOptionDto.html":{},"classes/UpdateWorkspaceStudentResultDto.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"classes/Workspace.html":{},"classes/WorkspaceQuizQuestion.html":{},"classes/WorkspaceQuizQuestionOption.html":{},"controllers/WorkspaceQuizQuestionOptionsController.html":{},"modules/WorkspaceQuizQuestionOptionsModule.html":{},"injectables/WorkspaceQuizQuestionOptionsService.html":{},"controllers/WorkspaceQuizQuestionsController.html":{},"modules/WorkspaceQuizQuestionsModule.html":{},"injectables/WorkspaceQuizQuestionsService.html":{},"classes/WorkspaceStudentResult.html":{},"controllers/WorkspaceStudentResultsController.html":{},"modules/WorkspaceStudentResultsModule.html":{},"injectables/WorkspaceStudentResultsService.html":{},"controllers/WorkspacesController.html":{},"modules/WorkspacesModule.html":{},"injectables/WorkspacesService.html":{},"classes/createUserDto.html":{},"index.html":{},"classes/loginUserDto.html":{},"entities/userEntity.html":{},"interfaces/userInterface.html":{}}}],["sponsors",{"_index":1051,"title":{},"body":{"index.html":{}}}],["src/.../auth.service.ts",{"_index":1114,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":1011,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../role.enum.ts",{"_index":1007,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../roles.decorator.ts",{"_index":1116,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../user.service.ts",{"_index":1113,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:10",{"_index":13,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":51,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":96,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":97,"title":{},"body":{"injectables/AppService.html":{}}}],["src/auth/auth.module",{"_index":740,"title":{},"body":{"modules/UserModule.html":{}}}],["src/auth/auth.module.ts",{"_index":105,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/decorators/roles.decorator.ts",{"_index":923,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/auth/guards/jwt",{"_index":349,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["src/auth/guards/local",{"_index":479,"title":{},"body":{"injectables/LocalAuthGuard.html":{},"coverage.html":{}}}],["src/auth/guards/roles.guard",{"_index":410,"title":{},"body":{"modules/Level1Module.html":{}}}],["src/auth/guards/roles.guard.ts",{"_index":495,"title":{},"body":{"guards/RolesGuard.html":{},"coverage.html":{}}}],["src/auth/guards/roles.guard.ts:10",{"_index":502,"title":{},"body":{"guards/RolesGuard.html":{}}}],["src/auth/guards/roles.guard.ts:8",{"_index":499,"title":{},"body":{"guards/RolesGuard.html":{}}}],["src/auth/jwt.strategy.ts",{"_index":353,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/auth/jwt.strategy.ts:16",{"_index":358,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/jwt.strategy.ts:7",{"_index":356,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/local.strategy.ts",{"_index":481,"title":{},"body":{"injectables/LocalStrategy.html":{},"coverage.html":{}}}],["src/auth/local.strategy.ts:14",{"_index":485,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["src/auth/local.strategy.ts:9",{"_index":483,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["src/auth/moddles/role.enum.ts",{"_index":1008,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/combinations/combinations.controller.ts",{"_index":194,"title":{},"body":{"controllers/CombinationsController.html":{},"coverage.html":{}}}],["src/combinations/combinations.controller.ts:19",{"_index":206,"title":{},"body":{"controllers/CombinationsController.html":{}}}],["src/combinations/combinations.controller.ts:38",{"_index":209,"title":{},"body":{"controllers/CombinationsController.html":{}}}],["src/combinations/combinations.controller.ts:57",{"_index":212,"title":{},"body":{"controllers/CombinationsController.html":{}}}],["src/combinations/combinations.controller.ts:76",{"_index":219,"title":{},"body":{"controllers/CombinationsController.html":{}}}],["src/combinations/combinations.controller.ts:95",{"_index":215,"title":{},"body":{"controllers/CombinationsController.html":{}}}],["src/combinations/combinations.module.ts",{"_index":267,"title":{},"body":{"modules/CombinationsModule.html":{}}}],["src/combinations/combinations.service.ts",{"_index":276,"title":{},"body":{"injectables/CombinationsService.html":{},"coverage.html":{}}}],["src/combinations/combinations.service.ts:21",{"_index":279,"title":{},"body":{"injectables/CombinationsService.html":{}}}],["src/combinations/combinations.service.ts:26",{"_index":281,"title":{},"body":{"injectables/CombinationsService.html":{}}}],["src/combinations/combinations.service.ts:29",{"_index":285,"title":{},"body":{"injectables/CombinationsService.html":{}}}],["src/combinations/combinations.service.ts:34",{"_index":283,"title":{},"body":{"injectables/CombinationsService.html":{}}}],["src/combinations/combinations.service.ts:8",{"_index":278,"title":{},"body":{"injectables/CombinationsService.html":{}}}],["src/combinations/dto/create",{"_index":300,"title":{},"body":{"classes/CreateCombinationDto.html":{},"coverage.html":{}}}],["src/combinations/dto/update",{"_index":675,"title":{},"body":{"classes/UpdateCombinationDto.html":{},"coverage.html":{}}}],["src/combinations/entities/combination.entity.ts",{"_index":170,"title":{},"body":{"entities/Combination.html":{},"coverage.html":{}}}],["src/combinations/entities/combination.entity.ts:12",{"_index":180,"title":{},"body":{"entities/Combination.html":{}}}],["src/combinations/entities/combination.entity.ts:15",{"_index":181,"title":{},"body":{"entities/Combination.html":{}}}],["src/combinations/entities/combination.entity.ts:6",{"_index":177,"title":{},"body":{"entities/Combination.html":{}}}],["src/combinations/entities/combination.entity.ts:9",{"_index":182,"title":{},"body":{"entities/Combination.html":{}}}],["src/controllers/user.controller.ts",{"_index":714,"title":{},"body":{"controllers/UserController.html":{},"coverage.html":{}}}],["src/controllers/user.controller.ts:17",{"_index":719,"title":{},"body":{"controllers/UserController.html":{}}}],["src/controllers/user.controller.ts:23",{"_index":723,"title":{},"body":{"controllers/UserController.html":{}}}],["src/controllers/user.controller.ts:36",{"_index":720,"title":{},"body":{"controllers/UserController.html":{}}}],["src/level1/dto/create",{"_index":313,"title":{},"body":{"classes/CreateLevel1Dto.html":{},"coverage.html":{}}}],["src/level1/dto/update",{"_index":680,"title":{},"body":{"classes/UpdateLevel1Dto.html":{},"coverage.html":{}}}],["src/level1/entities/level1.entity.ts",{"_index":376,"title":{},"body":{"entities/Level1.html":{},"coverage.html":{}}}],["src/level1/entities/level1.entity.ts:10",{"_index":378,"title":{},"body":{"entities/Level1.html":{}}}],["src/level1/entities/level1.entity.ts:7",{"_index":377,"title":{},"body":{"entities/Level1.html":{}}}],["src/level1/level1.controller.ts",{"_index":382,"title":{},"body":{"controllers/Level1Controller.html":{},"coverage.html":{}}}],["src/level1/level1.controller.ts:19",{"_index":383,"title":{},"body":{"controllers/Level1Controller.html":{}}}],["src/level1/level1.controller.ts:39",{"_index":384,"title":{},"body":{"controllers/Level1Controller.html":{}}}],["src/level1/level1.controller.ts:48",{"_index":385,"title":{},"body":{"controllers/Level1Controller.html":{}}}],["src/level1/level1.controller.ts:64",{"_index":388,"title":{},"body":{"controllers/Level1Controller.html":{}}}],["src/level1/level1.controller.ts:83",{"_index":386,"title":{},"body":{"controllers/Level1Controller.html":{}}}],["src/level1/level1.module.ts",{"_index":406,"title":{},"body":{"modules/Level1Module.html":{}}}],["src/level1/level1.service.ts",{"_index":412,"title":{},"body":{"injectables/Level1Service.html":{},"coverage.html":{}}}],["src/level1/level1.service.ts:15",{"_index":415,"title":{},"body":{"injectables/Level1Service.html":{}}}],["src/level1/level1.service.ts:19",{"_index":416,"title":{},"body":{"injectables/Level1Service.html":{}}}],["src/level1/level1.service.ts:25",{"_index":418,"title":{},"body":{"injectables/Level1Service.html":{}}}],["src/level1/level1.service.ts:30",{"_index":417,"title":{},"body":{"injectables/Level1Service.html":{}}}],["src/level1/level1.service.ts:8",{"_index":414,"title":{},"body":{"injectables/Level1Service.html":{}}}],["src/level2/dto/create",{"_index":317,"title":{},"body":{"classes/CreateLevel2Dto.html":{},"coverage.html":{}}}],["src/level2/dto/update",{"_index":682,"title":{},"body":{"classes/UpdateLevel2Dto.html":{},"coverage.html":{}}}],["src/level2/entities/level2.entity",{"_index":582,"title":{},"body":{"entities/TeacherSubject.html":{}}}],["src/level2/entities/level2.entity.ts",{"_index":428,"title":{},"body":{"entities/Level2.html":{},"coverage.html":{}}}],["src/level2/entities/level2.entity.ts:10",{"_index":431,"title":{},"body":{"entities/Level2.html":{}}}],["src/level2/entities/level2.entity.ts:13",{"_index":430,"title":{},"body":{"entities/Level2.html":{}}}],["src/level2/entities/level2.entity.ts:7",{"_index":429,"title":{},"body":{"entities/Level2.html":{}}}],["src/level2/level2.controller.ts",{"_index":437,"title":{},"body":{"controllers/Level2Controller.html":{},"coverage.html":{}}}],["src/level2/level2.controller.ts:20",{"_index":438,"title":{},"body":{"controllers/Level2Controller.html":{}}}],["src/level2/level2.controller.ts:37",{"_index":439,"title":{},"body":{"controllers/Level2Controller.html":{}}}],["src/level2/level2.controller.ts:43",{"_index":440,"title":{},"body":{"controllers/Level2Controller.html":{}}}],["src/level2/level2.controller.ts:63",{"_index":443,"title":{},"body":{"controllers/Level2Controller.html":{}}}],["src/level2/level2.controller.ts:80",{"_index":441,"title":{},"body":{"controllers/Level2Controller.html":{}}}],["src/level2/level2.module.ts",{"_index":457,"title":{},"body":{"modules/Level2Module.html":{}}}],["src/level2/level2.service.ts",{"_index":461,"title":{},"body":{"injectables/Level2Service.html":{},"coverage.html":{}}}],["src/level2/level2.service.ts:16",{"_index":464,"title":{},"body":{"injectables/Level2Service.html":{}}}],["src/level2/level2.service.ts:21",{"_index":465,"title":{},"body":{"injectables/Level2Service.html":{}}}],["src/level2/level2.service.ts:25",{"_index":467,"title":{},"body":{"injectables/Level2Service.html":{}}}],["src/level2/level2.service.ts:30",{"_index":466,"title":{},"body":{"injectables/Level2Service.html":{}}}],["src/level2/level2.service.ts:8",{"_index":463,"title":{},"body":{"injectables/Level2Service.html":{}}}],["src/main.ts",{"_index":930,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/services/auth/auth.service.ts",{"_index":120,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/services/auth/auth.service.ts:10",{"_index":141,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/services/auth/auth.service.ts:13",{"_index":130,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/services/auth/auth.service.ts:17",{"_index":143,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/services/auth/auth.service.ts:21",{"_index":145,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/services/auth/auth.service.ts:25",{"_index":148,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/services/auth/auth.service.ts:31",{"_index":138,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/services/user.service",{"_index":112,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/services/user.service.ts",{"_index":743,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/services/user.service.ts:17",{"_index":748,"title":{},"body":{"injectables/UserService.html":{}}}],["src/services/user.service.ts:22",{"_index":750,"title":{},"body":{"injectables/UserService.html":{}}}],["src/services/user.service.ts:55",{"_index":753,"title":{},"body":{"injectables/UserService.html":{}}}],["src/services/user.service.ts:95",{"_index":751,"title":{},"body":{"injectables/UserService.html":{}}}],["src/subjects/dto/create",{"_index":323,"title":{},"body":{"classes/CreateSubjectDto.html":{},"coverage.html":{}}}],["src/subjects/dto/update",{"_index":687,"title":{},"body":{"classes/UpdateSubjectDto.html":{},"coverage.html":{}}}],["src/subjects/entities/subject.entity.ts",{"_index":520,"title":{},"body":{"entities/Subject.html":{},"coverage.html":{}}}],["src/subjects/entities/subject.entity.ts:12",{"_index":522,"title":{},"body":{"entities/Subject.html":{}}}],["src/subjects/entities/subject.entity.ts:15",{"_index":523,"title":{},"body":{"entities/Subject.html":{}}}],["src/subjects/entities/subject.entity.ts:6",{"_index":521,"title":{},"body":{"entities/Subject.html":{}}}],["src/subjects/entities/subject.entity.ts:9",{"_index":524,"title":{},"body":{"entities/Subject.html":{}}}],["src/subjects/subjects.controller.ts",{"_index":527,"title":{},"body":{"controllers/SubjectsController.html":{},"coverage.html":{}}}],["src/subjects/subjects.controller.ts:18",{"_index":529,"title":{},"body":{"controllers/SubjectsController.html":{}}}],["src/subjects/subjects.controller.ts:37",{"_index":530,"title":{},"body":{"controllers/SubjectsController.html":{}}}],["src/subjects/subjects.controller.ts:47",{"_index":531,"title":{},"body":{"controllers/SubjectsController.html":{}}}],["src/subjects/subjects.controller.ts:66",{"_index":534,"title":{},"body":{"controllers/SubjectsController.html":{}}}],["src/subjects/subjects.controller.ts:85",{"_index":532,"title":{},"body":{"controllers/SubjectsController.html":{}}}],["src/subjects/subjects.module.ts",{"_index":546,"title":{},"body":{"modules/SubjectsModule.html":{}}}],["src/subjects/subjects.service.ts",{"_index":551,"title":{},"body":{"injectables/SubjectsService.html":{},"coverage.html":{}}}],["src/subjects/subjects.service.ts:19",{"_index":554,"title":{},"body":{"injectables/SubjectsService.html":{}}}],["src/subjects/subjects.service.ts:23",{"_index":555,"title":{},"body":{"injectables/SubjectsService.html":{}}}],["src/subjects/subjects.service.ts:28",{"_index":557,"title":{},"body":{"injectables/SubjectsService.html":{}}}],["src/subjects/subjects.service.ts:33",{"_index":556,"title":{},"body":{"injectables/SubjectsService.html":{}}}],["src/subjects/subjects.service.ts:9",{"_index":553,"title":{},"body":{"injectables/SubjectsService.html":{}}}],["src/teacher",{"_index":329,"title":{},"body":{"classes/CreateTeacherSubjectDto.html":{},"entities/TeacherSubject.html":{},"controllers/TeacherSubjectController.html":{},"modules/TeacherSubjectModule.html":{},"injectables/TeacherSubjectService.html":{},"classes/UpdateTeacherSubjectDto.html":{},"coverage.html":{}}}],["src/terms/dto/create",{"_index":332,"title":{},"body":{"classes/CreateTermDto.html":{},"coverage.html":{}}}],["src/terms/dto/update",{"_index":691,"title":{},"body":{"classes/UpdateTermDto.html":{},"coverage.html":{}}}],["src/terms/entities/term.entity.ts",{"_index":628,"title":{},"body":{"entities/Term.html":{},"coverage.html":{}}}],["src/terms/entities/term.entity.ts:12",{"_index":631,"title":{},"body":{"entities/Term.html":{}}}],["src/terms/entities/term.entity.ts:15",{"_index":630,"title":{},"body":{"entities/Term.html":{}}}],["src/terms/entities/term.entity.ts:9",{"_index":629,"title":{},"body":{"entities/Term.html":{}}}],["src/terms/terms.controller.ts",{"_index":633,"title":{},"body":{"controllers/TermsController.html":{},"coverage.html":{}}}],["src/terms/terms.controller.ts:18",{"_index":635,"title":{},"body":{"controllers/TermsController.html":{}}}],["src/terms/terms.controller.ts:36",{"_index":636,"title":{},"body":{"controllers/TermsController.html":{}}}],["src/terms/terms.controller.ts:44",{"_index":637,"title":{},"body":{"controllers/TermsController.html":{}}}],["src/terms/terms.controller.ts:61",{"_index":640,"title":{},"body":{"controllers/TermsController.html":{}}}],["src/terms/terms.controller.ts:79",{"_index":638,"title":{},"body":{"controllers/TermsController.html":{}}}],["src/terms/terms.module.ts",{"_index":652,"title":{},"body":{"modules/TermsModule.html":{}}}],["src/terms/terms.service.ts",{"_index":657,"title":{},"body":{"injectables/TermsService.html":{},"coverage.html":{}}}],["src/terms/terms.service.ts:18",{"_index":660,"title":{},"body":{"injectables/TermsService.html":{}}}],["src/terms/terms.service.ts:22",{"_index":661,"title":{},"body":{"injectables/TermsService.html":{}}}],["src/terms/terms.service.ts:26",{"_index":663,"title":{},"body":{"injectables/TermsService.html":{}}}],["src/terms/terms.service.ts:31",{"_index":662,"title":{},"body":{"injectables/TermsService.html":{}}}],["src/terms/terms.service.ts:9",{"_index":659,"title":{},"body":{"injectables/TermsService.html":{}}}],["src/user/modles/dto/create.dto.ts",{"_index":935,"title":{},"body":{"coverage.html":{},"classes/createUserDto.html":{}}}],["src/user/modles/dto/create.dto.ts:10",{"_index":953,"title":{},"body":{"classes/createUserDto.html":{}}}],["src/user/modles/dto/create.dto.ts:13",{"_index":956,"title":{},"body":{"classes/createUserDto.html":{}}}],["src/user/modles/dto/create.dto.ts:22",{"_index":955,"title":{},"body":{"classes/createUserDto.html":{}}}],["src/user/modles/dto/create.dto.ts:7",{"_index":952,"title":{},"body":{"classes/createUserDto.html":{}}}],["src/user/modles/dto/login.dto",{"_index":152,"title":{},"body":{"injectables/AuthService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["src/user/modles/dto/login.dto.ts",{"_index":936,"title":{},"body":{"coverage.html":{},"classes/loginUserDto.html":{}}}],["src/user/modles/dto/login.dto.ts:10",{"_index":1072,"title":{},"body":{"classes/loginUserDto.html":{}}}],["src/user/modles/dto/login.dto.ts:7",{"_index":1071,"title":{},"body":{"classes/loginUserDto.html":{}}}],["src/user/modles/user.entity.ts",{"_index":937,"title":{},"body":{"coverage.html":{},"entities/userEntity.html":{}}}],["src/user/modles/user.entity.ts:15",{"_index":1087,"title":{},"body":{"entities/userEntity.html":{}}}],["src/user/modles/user.entity.ts:21",{"_index":1092,"title":{},"body":{"entities/userEntity.html":{}}}],["src/user/modles/user.entity.ts:29",{"_index":1084,"title":{},"body":{"entities/userEntity.html":{}}}],["src/user/modles/user.entity.ts:36",{"_index":1090,"title":{},"body":{"entities/userEntity.html":{}}}],["src/user/modles/user.entity.ts:40",{"_index":1091,"title":{},"body":{"entities/userEntity.html":{}}}],["src/user/modles/user.entity.ts:9",{"_index":1085,"title":{},"body":{"entities/userEntity.html":{}}}],["src/user/modles/user.interface.ts",{"_index":938,"title":{},"body":{"coverage.html":{},"interfaces/userInterface.html":{}}}],["src/user/user.module.ts",{"_index":737,"title":{},"body":{"modules/UserModule.html":{}}}],["src/workspace",{"_index":340,"title":{},"body":{"classes/CreateWorkspaceQuizQuestionDto.html":{},"classes/CreateWorkspaceQuizQuestionOptionDto.html":{},"classes/CreateWorkspaceStudentResultDto.html":{},"classes/UpdateWorkspaceQuizQuestionDto.html":{},"classes/UpdateWorkspaceQuizQuestionOptionDto.html":{},"classes/UpdateWorkspaceStudentResultDto.html":{},"classes/WorkspaceQuizQuestion.html":{},"classes/WorkspaceQuizQuestionOption.html":{},"controllers/WorkspaceQuizQuestionOptionsController.html":{},"modules/WorkspaceQuizQuestionOptionsModule.html":{},"injectables/WorkspaceQuizQuestionOptionsService.html":{},"controllers/WorkspaceQuizQuestionsController.html":{},"modules/WorkspaceQuizQuestionsModule.html":{},"injectables/WorkspaceQuizQuestionsService.html":{},"classes/WorkspaceStudentResult.html":{},"controllers/WorkspaceStudentResultsController.html":{},"modules/WorkspaceStudentResultsModule.html":{},"injectables/WorkspaceStudentResultsService.html":{},"coverage.html":{}}}],["src/workspaces/dto/create",{"_index":337,"title":{},"body":{"classes/CreateWorkspaceDto.html":{},"coverage.html":{}}}],["src/workspaces/dto/update",{"_index":698,"title":{},"body":{"classes/UpdateWorkspaceDto.html":{},"coverage.html":{}}}],["src/workspaces/entities/workspace.entity.ts",{"_index":797,"title":{},"body":{"classes/Workspace.html":{},"coverage.html":{}}}],["src/workspaces/entities/workspace.entity.ts:4",{"_index":798,"title":{},"body":{"classes/Workspace.html":{}}}],["src/workspaces/entities/workspace.entity.ts:7",{"_index":799,"title":{},"body":{"classes/Workspace.html":{}}}],["src/workspaces/workspaces.controller.ts",{"_index":891,"title":{},"body":{"controllers/WorkspacesController.html":{},"coverage.html":{}}}],["src/workspaces/workspaces.controller.ts:11",{"_index":894,"title":{},"body":{"controllers/WorkspacesController.html":{}}}],["src/workspaces/workspaces.controller.ts:16",{"_index":895,"title":{},"body":{"controllers/WorkspacesController.html":{}}}],["src/workspaces/workspaces.controller.ts:21",{"_index":896,"title":{},"body":{"controllers/WorkspacesController.html":{}}}],["src/workspaces/workspaces.controller.ts:26",{"_index":898,"title":{},"body":{"controllers/WorkspacesController.html":{}}}],["src/workspaces/workspaces.controller.ts:31",{"_index":897,"title":{},"body":{"controllers/WorkspacesController.html":{}}}],["src/workspaces/workspaces.module.ts",{"_index":909,"title":{},"body":{"modules/WorkspacesModule.html":{}}}],["src/workspaces/workspaces.service.ts",{"_index":911,"title":{},"body":{"injectables/WorkspacesService.html":{},"coverage.html":{}}}],["src/workspaces/workspaces.service.ts:11",{"_index":913,"title":{},"body":{"injectables/WorkspacesService.html":{}}}],["src/workspaces/workspaces.service.ts:15",{"_index":914,"title":{},"body":{"injectables/WorkspacesService.html":{}}}],["src/workspaces/workspaces.service.ts:19",{"_index":916,"title":{},"body":{"injectables/WorkspacesService.html":{}}}],["src/workspaces/workspaces.service.ts:23",{"_index":915,"title":{},"body":{"injectables/WorkspacesService.html":{}}}],["src/workspaces/workspaces.service.ts:7",{"_index":912,"title":{},"body":{"injectables/WorkspacesService.html":{}}}],["start",{"_index":1033,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":1036,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":1038,"title":{},"body":{"index.html":{}}}],["started",{"_index":1013,"title":{"index.html":{}},"body":{}}],["starter",{"_index":1026,"title":{},"body":{"index.html":{}}}],["statements",{"_index":920,"title":{},"body":{"coverage.html":{}}}],["stay",{"_index":1061,"title":{},"body":{"index.html":{}}}],["strategy",{"_index":361,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["string",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"entities/Combination.html":{},"controllers/CombinationsController.html":{},"classes/CreateCombinationDto.html":{},"classes/CreateLevel1Dto.html":{},"classes/CreateLevel2Dto.html":{},"classes/CreateSubjectDto.html":{},"classes/CreateTermDto.html":{},"entities/Level1.html":{},"controllers/Level1Controller.html":{},"entities/Level2.html":{},"controllers/Level2Controller.html":{},"injectables/LocalStrategy.html":{},"entities/Subject.html":{},"controllers/SubjectsController.html":{},"controllers/TeacherSubjectController.html":{},"injectables/TeacherSubjectService.html":{},"entities/Term.html":{},"controllers/TermsController.html":{},"classes/UpdateLevel2Dto.html":{},"classes/UpdateTermDto.html":{},"classes/Workspace.html":{},"controllers/WorkspaceQuizQuestionOptionsController.html":{},"injectables/WorkspaceQuizQuestionOptionsService.html":{},"controllers/WorkspaceQuizQuestionsController.html":{},"injectables/WorkspaceQuizQuestionsService.html":{},"controllers/WorkspaceStudentResultsController.html":{},"injectables/WorkspaceStudentResultsService.html":{},"controllers/WorkspacesController.html":{},"injectables/WorkspacesService.html":{},"classes/createUserDto.html":{},"classes/loginUserDto.html":{},"entities/userEntity.html":{},"interfaces/userInterface.html":{},"miscellaneous/variables.html":{}}}],["string,password",{"_index":490,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["strorepasswordhash",{"_index":129,"title":{},"body":{"injectables/AuthService.html":{}}}],["student",{"_index":78,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateWorkspaceStudentResultDto.html":{},"classes/UpdateWorkspaceStudentResultDto.html":{},"classes/WorkspaceStudentResult.html":{},"controllers/WorkspaceStudentResultsController.html":{},"modules/WorkspaceStudentResultsModule.html":{},"injectables/WorkspaceStudentResultsService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"entities/userEntity.html":{}}}],["subject",{"_index":519,"title":{"entities/Subject.html":{}},"body":{"entities/Subject.html":{},"injectables/SubjectsService.html":{},"entities/TeacherSubject.html":{},"controllers/TeacherSubjectController.html":{},"coverage.html":{}}}],["subject.controller",{"_index":617,"title":{},"body":{"modules/TeacherSubjectModule.html":{}}}],["subject.controller.ts",{"_index":594,"title":{},"body":{"controllers/TeacherSubjectController.html":{},"coverage.html":{}}}],["subject.controller.ts:11",{"_index":596,"title":{},"body":{"controllers/TeacherSubjectController.html":{}}}],["subject.controller.ts:16",{"_index":597,"title":{},"body":{"controllers/TeacherSubjectController.html":{}}}],["subject.controller.ts:21",{"_index":598,"title":{},"body":{"controllers/TeacherSubjectController.html":{}}}],["subject.controller.ts:26",{"_index":601,"title":{},"body":{"controllers/TeacherSubjectController.html":{}}}],["subject.controller.ts:31",{"_index":599,"title":{},"body":{"controllers/TeacherSubjectController.html":{}}}],["subject.delete(id",{"_index":569,"title":{},"body":{"injectables/SubjectsService.html":{}}}],["subject.dto",{"_index":537,"title":{},"body":{"controllers/SubjectsController.html":{},"injectables/SubjectsService.html":{},"controllers/TeacherSubjectController.html":{},"injectables/TeacherSubjectService.html":{},"classes/UpdateSubjectDto.html":{},"classes/UpdateTeacherSubjectDto.html":{}}}],["subject.dto.ts",{"_index":324,"title":{},"body":{"classes/CreateSubjectDto.html":{},"classes/CreateTeacherSubjectDto.html":{},"classes/UpdateSubjectDto.html":{},"classes/UpdateTeacherSubjectDto.html":{},"coverage.html":{}}}],["subject.dto.ts:11",{"_index":325,"title":{},"body":{"classes/CreateSubjectDto.html":{}}}],["subject.dto.ts:15",{"_index":326,"title":{},"body":{"classes/CreateSubjectDto.html":{}}}],["subject.dto.ts:6",{"_index":327,"title":{},"body":{"classes/CreateSubjectDto.html":{}}}],["subject.entity.ts",{"_index":572,"title":{},"body":{"entities/TeacherSubject.html":{},"coverage.html":{}}}],["subject.entity.ts:12",{"_index":580,"title":{},"body":{"entities/TeacherSubject.html":{}}}],["subject.entity.ts:16",{"_index":579,"title":{},"body":{"entities/TeacherSubject.html":{}}}],["subject.entity.ts:21",{"_index":577,"title":{},"body":{"entities/TeacherSubject.html":{}}}],["subject.entity.ts:25",{"_index":578,"title":{},"body":{"entities/TeacherSubject.html":{}}}],["subject.entity.ts:9",{"_index":576,"title":{},"body":{"entities/TeacherSubject.html":{}}}],["subject.find",{"_index":566,"title":{},"body":{"injectables/SubjectsService.html":{}}}],["subject.findone(id",{"_index":567,"title":{},"body":{"injectables/SubjectsService.html":{}}}],["subject.id",{"_index":587,"title":{},"body":{"entities/TeacherSubject.html":{}}}],["subject.module",{"_index":69,"title":{},"body":{"modules/AppModule.html":{}}}],["subject.module.ts",{"_index":616,"title":{},"body":{"modules/TeacherSubjectModule.html":{}}}],["subject.service",{"_index":603,"title":{},"body":{"controllers/TeacherSubjectController.html":{},"modules/TeacherSubjectModule.html":{}}}],["subject.service.ts",{"_index":618,"title":{},"body":{"injectables/TeacherSubjectService.html":{},"coverage.html":{}}}],["subject.service.ts:11",{"_index":620,"title":{},"body":{"injectables/TeacherSubjectService.html":{}}}],["subject.service.ts:15",{"_index":621,"title":{},"body":{"injectables/TeacherSubjectService.html":{}}}],["subject.service.ts:19",{"_index":623,"title":{},"body":{"injectables/TeacherSubjectService.html":{}}}],["subject.service.ts:23",{"_index":622,"title":{},"body":{"injectables/TeacherSubjectService.html":{}}}],["subject.service.ts:7",{"_index":619,"title":{},"body":{"injectables/TeacherSubjectService.html":{}}}],["subject.update(id",{"_index":568,"title":{},"body":{"injectables/SubjectsService.html":{}}}],["subject/dto/create",{"_index":330,"title":{},"body":{"classes/CreateTeacherSubjectDto.html":{},"coverage.html":{}}}],["subject/dto/update",{"_index":689,"title":{},"body":{"classes/UpdateTeacherSubjectDto.html":{},"coverage.html":{}}}],["subject/entities/teacher",{"_index":571,"title":{},"body":{"entities/TeacherSubject.html":{},"coverage.html":{}}}],["subject/teacher",{"_index":68,"title":{},"body":{"modules/AppModule.html":{},"controllers/TeacherSubjectController.html":{},"modules/TeacherSubjectModule.html":{},"injectables/TeacherSubjectService.html":{},"coverage.html":{}}}],["subject_id",{"_index":574,"title":{},"body":{"entities/TeacherSubject.html":{}}}],["subject_id:number",{"_index":588,"title":{},"body":{"entities/TeacherSubject.html":{}}}],["subjects",{"_index":528,"title":{},"body":{"controllers/SubjectsController.html":{}}}],["subjects.controller",{"_index":547,"title":{},"body":{"modules/SubjectsModule.html":{}}}],["subjects.service",{"_index":536,"title":{},"body":{"controllers/SubjectsController.html":{},"modules/SubjectsModule.html":{}}}],["subjects/entities/subject.entity",{"_index":583,"title":{},"body":{"entities/TeacherSubject.html":{}}}],["subjects/subjects.module",{"_index":66,"title":{},"body":{"modules/AppModule.html":{}}}],["subjectscontroller",{"_index":526,"title":{"controllers/SubjectsController.html":{}},"body":{"controllers/SubjectsController.html":{},"modules/SubjectsModule.html":{},"coverage.html":{}}}],["subjectsmodule",{"_index":40,"title":{"modules/SubjectsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/SubjectsModule.html":{},"modules.html":{},"overview.html":{}}}],["subjectsservice",{"_index":535,"title":{"injectables/SubjectsService.html":{}},"body":{"controllers/SubjectsController.html":{},"modules/SubjectsModule.html":{},"injectables/SubjectsService.html":{},"coverage.html":{},"overview.html":{}}}],["success",{"_index":786,"title":{},"body":{"injectables/UserService.html":{}}}],["super",{"_index":366,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["support",{"_index":1052,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":1074,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":984,"title":{},"body":{"dependencies.html":{}}}],["switchmap",{"_index":760,"title":{},"body":{"injectables/UserService.html":{}}}],["synchronize:true",{"_index":91,"title":{},"body":{"modules/AppModule.html":{}}}],["table",{"_index":947,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":946,"title":{},"body":{"coverage.html":{}}}],["taken",{"_index":770,"title":{},"body":{"injectables/UserService.html":{}}}],["teacher",{"_index":67,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateTeacherSubjectDto.html":{},"controllers/TeacherSubjectController.html":{},"modules/TeacherSubjectModule.html":{},"injectables/TeacherSubjectService.html":{},"classes/UpdateTeacherSubjectDto.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["teacher_id",{"_index":575,"title":{},"body":{"entities/TeacherSubject.html":{}}}],["teacher_id:number",{"_index":585,"title":{},"body":{"entities/TeacherSubject.html":{}}}],["teachersubject",{"_index":570,"title":{"entities/TeacherSubject.html":{}},"body":{"entities/TeacherSubject.html":{},"injectables/TeacherSubjectService.html":{},"coverage.html":{}}}],["teachersubjectcontroller",{"_index":593,"title":{"controllers/TeacherSubjectController.html":{}},"body":{"controllers/TeacherSubjectController.html":{},"modules/TeacherSubjectModule.html":{},"coverage.html":{}}}],["teachersubjectmodule",{"_index":41,"title":{"modules/TeacherSubjectModule.html":{}},"body":{"modules/AppModule.html":{},"modules/TeacherSubjectModule.html":{},"modules.html":{},"overview.html":{}}}],["teachersubjectservice",{"_index":602,"title":{"injectables/TeacherSubjectService.html":{}},"body":{"controllers/TeacherSubjectController.html":{},"modules/TeacherSubjectModule.html":{},"injectables/TeacherSubjectService.html":{},"coverage.html":{},"overview.html":{}}}],["term",{"_index":435,"title":{"entities/Term.html":{}},"body":{"entities/Level2.html":{},"entities/Term.html":{},"injectables/TermsService.html":{},"coverage.html":{}}}],["term.delete(id",{"_index":674,"title":{},"body":{"injectables/TermsService.html":{}}}],["term.dto",{"_index":643,"title":{},"body":{"controllers/TermsController.html":{},"injectables/TermsService.html":{},"classes/UpdateTermDto.html":{}}}],["term.dto.ts",{"_index":333,"title":{},"body":{"classes/CreateTermDto.html":{},"classes/UpdateTermDto.html":{},"coverage.html":{}}}],["term.dto.ts:10",{"_index":334,"title":{},"body":{"classes/CreateTermDto.html":{}}}],["term.dto.ts:13",{"_index":692,"title":{},"body":{"classes/UpdateTermDto.html":{}}}],["term.dto.ts:5",{"_index":335,"title":{},"body":{"classes/CreateTermDto.html":{}}}],["term.dto.ts:8",{"_index":693,"title":{},"body":{"classes/UpdateTermDto.html":{}}}],["term.find",{"_index":671,"title":{},"body":{"injectables/TermsService.html":{}}}],["term.findone(id",{"_index":672,"title":{},"body":{"injectables/TermsService.html":{}}}],["term.update(id",{"_index":673,"title":{},"body":{"injectables/TermsService.html":{}}}],["terms",{"_index":634,"title":{},"body":{"controllers/TermsController.html":{}}}],["terms.controller",{"_index":653,"title":{},"body":{"modules/TermsModule.html":{}}}],["terms.service",{"_index":642,"title":{},"body":{"controllers/TermsController.html":{},"modules/TermsModule.html":{}}}],["terms/entities/term.entity",{"_index":664,"title":{},"body":{"injectables/TermsService.html":{}}}],["terms/terms.module",{"_index":64,"title":{},"body":{"modules/AppModule.html":{}}}],["termscontroller",{"_index":632,"title":{"controllers/TermsController.html":{}},"body":{"controllers/TermsController.html":{},"modules/TermsModule.html":{},"coverage.html":{}}}],["termsmodule",{"_index":42,"title":{"modules/TermsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/TermsModule.html":{},"modules.html":{},"overview.html":{}}}],["termsservice",{"_index":641,"title":{"injectables/TermsService.html":{}},"body":{"controllers/TermsController.html":{},"modules/TermsModule.html":{},"injectables/TermsService.html":{},"coverage.html":{},"overview.html":{}}}],["test",{"_index":1041,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":1044,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":1043,"title":{},"body":{"index.html":{}}}],["tests",{"_index":1040,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":1050,"title":{},"body":{"index.html":{}}}],["this.appservice.gethello",{"_index":26,"title":{},"body":{"controllers/AppController.html":{}}}],["this.authservice.comparepassword(loginuserdto.password",{"_index":790,"title":{},"body":{"injectables/UserService.html":{}}}],["this.authservice.finduserbyemail(loginuserdto.email",{"_index":787,"title":{},"body":{"injectables/UserService.html":{}}}],["this.authservice.mailexist(createuserdto.email",{"_index":766,"title":{},"body":{"injectables/UserService.html":{}}}],["this.authservice.usernameexist(createuserdto.username",{"_index":767,"title":{},"body":{"injectables/UserService.html":{}}}],["this.combinationsservice.create(createcombinationdto",{"_index":249,"title":{},"body":{"controllers/CombinationsController.html":{}}}],["this.combinationsservice.findall",{"_index":254,"title":{},"body":{"controllers/CombinationsController.html":{}}}],["this.combinationsservice.findone(+id",{"_index":258,"title":{},"body":{"controllers/CombinationsController.html":{}}}],["this.combinationsservice.remove(+id",{"_index":264,"title":{},"body":{"controllers/CombinationsController.html":{}}}],["this.combinationsservice.update(+id",{"_index":261,"title":{},"body":{"controllers/CombinationsController.html":{}}}],["this.email",{"_index":1104,"title":{},"body":{"entities/userEntity.html":{}}}],["this.email.tolowercase",{"_index":1105,"title":{},"body":{"entities/userEntity.html":{}}}],["this.jwtservice.sign",{"_index":782,"title":{},"body":{"injectables/UserService.html":{}}}],["this.jwtservice.verify(token",{"_index":246,"title":{},"body":{"controllers/CombinationsController.html":{},"controllers/Level1Controller.html":{},"controllers/Level2Controller.html":{},"controllers/SubjectsController.html":{},"controllers/TermsController.html":{},"controllers/UserController.html":{}}}],["this.level1service.create(createlevel1dto",{"_index":397,"title":{},"body":{"controllers/Level1Controller.html":{}}}],["this.level1service.findall",{"_index":399,"title":{},"body":{"controllers/Level1Controller.html":{}}}],["this.level1service.findone(+id",{"_index":401,"title":{},"body":{"controllers/Level1Controller.html":{}}}],["this.level1service.remove(+id",{"_index":403,"title":{},"body":{"controllers/Level1Controller.html":{}}}],["this.level1service.update(+id",{"_index":402,"title":{},"body":{"controllers/Level1Controller.html":{}}}],["this.level2service.create(createlevel2dto",{"_index":449,"title":{},"body":{"controllers/Level2Controller.html":{}}}],["this.level2service.findall",{"_index":450,"title":{},"body":{"controllers/Level2Controller.html":{}}}],["this.level2service.findone(+id",{"_index":451,"title":{},"body":{"controllers/Level2Controller.html":{}}}],["this.level2service.remove(+id",{"_index":453,"title":{},"body":{"controllers/Level2Controller.html":{}}}],["this.level2service.update(+id",{"_index":452,"title":{},"body":{"controllers/Level2Controller.html":{}}}],["this.reflector.getallandoverride(roles_key",{"_index":512,"title":{},"body":{"guards/RolesGuard.html":{}}}],["this.subjectsservice.create(createsubjectdto",{"_index":539,"title":{},"body":{"controllers/SubjectsController.html":{}}}],["this.subjectsservice.findall",{"_index":540,"title":{},"body":{"controllers/SubjectsController.html":{}}}],["this.subjectsservice.findone(+id",{"_index":541,"title":{},"body":{"controllers/SubjectsController.html":{}}}],["this.subjectsservice.remove(+id",{"_index":543,"title":{},"body":{"controllers/SubjectsController.html":{}}}],["this.subjectsservice.update(+id",{"_index":542,"title":{},"body":{"controllers/SubjectsController.html":{}}}],["this.teachersubjectservice.create(createteachersubjectdto",{"_index":606,"title":{},"body":{"controllers/TeacherSubjectController.html":{}}}],["this.teachersubjectservice.findall",{"_index":607,"title":{},"body":{"controllers/TeacherSubjectController.html":{}}}],["this.teachersubjectservice.findone(+id",{"_index":609,"title":{},"body":{"controllers/TeacherSubjectController.html":{}}}],["this.teachersubjectservice.remove(+id",{"_index":613,"title":{},"body":{"controllers/TeacherSubjectController.html":{}}}],["this.teachersubjectservice.update(+id",{"_index":611,"title":{},"body":{"controllers/TeacherSubjectController.html":{}}}],["this.termsservice.create(createtermdto",{"_index":645,"title":{},"body":{"controllers/TermsController.html":{}}}],["this.termsservice.findall",{"_index":646,"title":{},"body":{"controllers/TermsController.html":{}}}],["this.termsservice.findone(+id",{"_index":647,"title":{},"body":{"controllers/TermsController.html":{}}}],["this.termsservice.remove(+id",{"_index":649,"title":{},"body":{"controllers/TermsController.html":{}}}],["this.termsservice.update(+id",{"_index":648,"title":{},"body":{"controllers/TermsController.html":{}}}],["this.userservice.createuser(createuserdto",{"_index":727,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.findallusers",{"_index":732,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.login(email,password",{"_index":491,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["this.userservice.loginuser(loginuserdto",{"_index":731,"title":{},"body":{"controllers/UserController.html":{}}}],["this.workspacequizquestionoptionsservice.create(createworkspacequizquestionoptiondto",{"_index":818,"title":{},"body":{"controllers/WorkspaceQuizQuestionOptionsController.html":{}}}],["this.workspacequizquestionoptionsservice.findall",{"_index":819,"title":{},"body":{"controllers/WorkspaceQuizQuestionOptionsController.html":{}}}],["this.workspacequizquestionoptionsservice.findone(+id",{"_index":820,"title":{},"body":{"controllers/WorkspaceQuizQuestionOptionsController.html":{}}}],["this.workspacequizquestionoptionsservice.remove(+id",{"_index":822,"title":{},"body":{"controllers/WorkspaceQuizQuestionOptionsController.html":{}}}],["this.workspacequizquestionoptionsservice.update(+id",{"_index":821,"title":{},"body":{"controllers/WorkspaceQuizQuestionOptionsController.html":{}}}],["this.workspacequizquestionsservice.create(createworkspacequizquestiondto",{"_index":845,"title":{},"body":{"controllers/WorkspaceQuizQuestionsController.html":{}}}],["this.workspacequizquestionsservice.findall",{"_index":846,"title":{},"body":{"controllers/WorkspaceQuizQuestionsController.html":{}}}],["this.workspacequizquestionsservice.findone(+id",{"_index":847,"title":{},"body":{"controllers/WorkspaceQuizQuestionsController.html":{}}}],["this.workspacequizquestionsservice.remove(+id",{"_index":849,"title":{},"body":{"controllers/WorkspaceQuizQuestionsController.html":{}}}],["this.workspacequizquestionsservice.update(+id",{"_index":848,"title":{},"body":{"controllers/WorkspaceQuizQuestionsController.html":{}}}],["this.workspacesservice.create(createworkspacedto",{"_index":902,"title":{},"body":{"controllers/WorkspacesController.html":{}}}],["this.workspacesservice.findall",{"_index":903,"title":{},"body":{"controllers/WorkspacesController.html":{}}}],["this.workspacesservice.findone(+id",{"_index":904,"title":{},"body":{"controllers/WorkspacesController.html":{}}}],["this.workspacesservice.remove(+id",{"_index":906,"title":{},"body":{"controllers/WorkspacesController.html":{}}}],["this.workspacesservice.update(+id",{"_index":905,"title":{},"body":{"controllers/WorkspacesController.html":{}}}],["this.workspacestudentresultsservice.create(createworkspacestudentresultdto",{"_index":874,"title":{},"body":{"controllers/WorkspaceStudentResultsController.html":{}}}],["this.workspacestudentresultsservice.findall",{"_index":875,"title":{},"body":{"controllers/WorkspaceStudentResultsController.html":{}}}],["this.workspacestudentresultsservice.findone(+id",{"_index":876,"title":{},"body":{"controllers/WorkspaceStudentResultsController.html":{}}}],["this.workspacestudentresultsservice.remove(+id",{"_index":878,"title":{},"body":{"controllers/WorkspaceStudentResultsController.html":{}}}],["this.workspacestudentresultsservice.update(+id",{"_index":877,"title":{},"body":{"controllers/WorkspaceStudentResultsController.html":{}}}],["throw",{"_index":492,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["token",{"_index":242,"title":{},"body":{"controllers/CombinationsController.html":{},"controllers/Level1Controller.html":{},"controllers/Level2Controller.html":{},"controllers/SubjectsController.html":{},"controllers/TermsController.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["touch",{"_index":1062,"title":{},"body":{"index.html":{}}}],["transformer",{"_index":976,"title":{},"body":{"dependencies.html":{}}}],["true",{"_index":515,"title":{},"body":{"guards/RolesGuard.html":{},"entities/userEntity.html":{}}}],["twitter",{"_index":1068,"title":{},"body":{"index.html":{}}}],["type",{"_index":133,"title":{},"body":{"injectables/AuthService.html":{},"entities/Combination.html":{},"controllers/CombinationsController.html":{},"injectables/CombinationsService.html":{},"classes/CreateCombinationDto.html":{},"classes/CreateLevel1Dto.html":{},"classes/CreateLevel2Dto.html":{},"classes/CreateSubjectDto.html":{},"classes/CreateTermDto.html":{},"injectables/JwtStrategy.html":{},"entities/Level1.html":{},"controllers/Level1Controller.html":{},"injectables/Level1Service.html":{},"entities/Level2.html":{},"controllers/Level2Controller.html":{},"injectables/Level2Service.html":{},"injectables/LocalStrategy.html":{},"guards/RolesGuard.html":{},"entities/Subject.html":{},"controllers/SubjectsController.html":{},"injectables/SubjectsService.html":{},"entities/TeacherSubject.html":{},"controllers/TeacherSubjectController.html":{},"injectables/TeacherSubjectService.html":{},"entities/Term.html":{},"controllers/TermsController.html":{},"injectables/TermsService.html":{},"classes/UpdateLevel2Dto.html":{},"classes/UpdateTermDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"classes/Workspace.html":{},"controllers/WorkspaceQuizQuestionOptionsController.html":{},"injectables/WorkspaceQuizQuestionOptionsService.html":{},"controllers/WorkspaceQuizQuestionsController.html":{},"injectables/WorkspaceQuizQuestionsService.html":{},"controllers/WorkspaceStudentResultsController.html":{},"injectables/WorkspaceStudentResultsService.html":{},"controllers/WorkspacesController.html":{},"injectables/WorkspacesService.html":{},"coverage.html":{},"classes/createUserDto.html":{},"classes/loginUserDto.html":{},"entities/userEntity.html":{},"interfaces/userInterface.html":{},"miscellaneous/variables.html":{}}}],["type:'postgres",{"_index":84,"title":{},"body":{"modules/AppModule.html":{}}}],["typeorm",{"_index":184,"title":{},"body":{"entities/Combination.html":{},"entities/Level1.html":{},"entities/Level2.html":{},"entities/Subject.html":{},"entities/TeacherSubject.html":{},"entities/Term.html":{},"injectables/UserService.html":{},"classes/Workspace.html":{},"classes/createUserDto.html":{},"dependencies.html":{},"entities/userEntity.html":{}}}],["typeormmodule",{"_index":57,"title":{},"body":{"modules/AppModule.html":{},"modules/CombinationsModule.html":{},"modules/Level1Module.html":{},"modules/Level2Module.html":{},"modules/SubjectsModule.html":{},"modules/TermsModule.html":{},"modules/UserModule.html":{}}}],["typeormmodule.forroot",{"_index":83,"title":{},"body":{"modules/AppModule.html":{}}}],["types",{"_index":678,"title":{},"body":{"classes/UpdateCombinationDto.html":{},"classes/UpdateLevel1Dto.html":{},"classes/UpdateLevel2Dto.html":{},"classes/UpdateSubjectDto.html":{},"classes/UpdateTeacherSubjectDto.html":{},"classes/UpdateTermDto.html":{},"classes/UpdateWorkspaceDto.html":{},"classes/UpdateWorkspaceQuizQuestionDto.html":{},"classes/UpdateWorkspaceQuizQuestionOptionDto.html":{},"classes/UpdateWorkspaceStudentResultDto.html":{},"dependencies.html":{}}}],["typescript",{"_index":1025,"title":{},"body":{"index.html":{}}}],["ui",{"_index":1002,"title":{},"body":{"dependencies.html":{}}}],["unauthorizedexception",{"_index":487,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["undefined",{"_index":179,"title":{},"body":{"entities/Combination.html":{},"entities/Level1.html":{},"entities/Level2.html":{},"entities/Subject.html":{},"entities/TeacherSubject.html":{},"entities/Term.html":{},"classes/Workspace.html":{},"entities/userEntity.html":{}}}],["unique",{"_index":1100,"title":{},"body":{"entities/userEntity.html":{}}}],["unit",{"_index":1039,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":136,"title":{},"body":{"injectables/AuthService.html":{},"controllers/CombinationsController.html":{},"injectables/CombinationsService.html":{},"injectables/JwtStrategy.html":{},"controllers/Level1Controller.html":{},"injectables/Level1Service.html":{},"controllers/Level2Controller.html":{},"injectables/Level2Service.html":{},"controllers/SubjectsController.html":{},"injectables/SubjectsService.html":{},"controllers/TermsController.html":{},"injectables/TermsService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["update",{"_index":201,"title":{},"body":{"controllers/CombinationsController.html":{},"injectables/CombinationsService.html":{},"controllers/Level1Controller.html":{},"injectables/Level1Service.html":{},"controllers/Level2Controller.html":{},"injectables/Level2Service.html":{},"controllers/SubjectsController.html":{},"injectables/SubjectsService.html":{},"controllers/TeacherSubjectController.html":{},"injectables/TeacherSubjectService.html":{},"controllers/TermsController.html":{},"injectables/TermsService.html":{},"controllers/WorkspaceQuizQuestionOptionsController.html":{},"injectables/WorkspaceQuizQuestionOptionsService.html":{},"controllers/WorkspaceQuizQuestionsController.html":{},"injectables/WorkspaceQuizQuestionsService.html":{},"controllers/WorkspaceStudentResultsController.html":{},"injectables/WorkspaceStudentResultsService.html":{},"controllers/WorkspacesController.html":{},"injectables/WorkspacesService.html":{}}}],["update(@param('id",{"_index":610,"title":{},"body":{"controllers/TeacherSubjectController.html":{},"controllers/WorkspaceQuizQuestionOptionsController.html":{},"controllers/WorkspaceQuizQuestionsController.html":{},"controllers/WorkspaceStudentResultsController.html":{},"controllers/WorkspacesController.html":{}}}],["update(@req",{"_index":260,"title":{},"body":{"controllers/CombinationsController.html":{},"controllers/Level1Controller.html":{},"controllers/Level2Controller.html":{},"controllers/SubjectsController.html":{},"controllers/TermsController.html":{}}}],["update(id",{"_index":284,"title":{},"body":{"injectables/CombinationsService.html":{},"injectables/Level1Service.html":{},"injectables/Level2Service.html":{},"injectables/SubjectsService.html":{},"controllers/TeacherSubjectController.html":{},"injectables/TeacherSubjectService.html":{},"injectables/TermsService.html":{},"controllers/WorkspaceQuizQuestionOptionsController.html":{},"injectables/WorkspaceQuizQuestionOptionsService.html":{},"controllers/WorkspaceQuizQuestionsController.html":{},"injectables/WorkspaceQuizQuestionsService.html":{},"controllers/WorkspaceStudentResultsController.html":{},"injectables/WorkspaceStudentResultsService.html":{},"controllers/WorkspacesController.html":{},"injectables/WorkspacesService.html":{}}}],["update(request",{"_index":216,"title":{},"body":{"controllers/CombinationsController.html":{},"controllers/Level1Controller.html":{},"controllers/Level2Controller.html":{},"controllers/SubjectsController.html":{},"controllers/TermsController.html":{}}}],["updatecombinationdto",{"_index":217,"title":{"classes/UpdateCombinationDto.html":{}},"body":{"controllers/CombinationsController.html":{},"injectables/CombinationsService.html":{},"classes/UpdateCombinationDto.html":{},"coverage.html":{}}}],["updated",{"_index":695,"title":{},"body":{"classes/UpdateTermDto.html":{}}}],["updatelevel1dto",{"_index":387,"title":{"classes/UpdateLevel1Dto.html":{}},"body":{"controllers/Level1Controller.html":{},"injectables/Level1Service.html":{},"classes/UpdateLevel1Dto.html":{},"coverage.html":{}}}],["updatelevel2dto",{"_index":442,"title":{"classes/UpdateLevel2Dto.html":{}},"body":{"controllers/Level2Controller.html":{},"injectables/Level2Service.html":{},"classes/UpdateLevel2Dto.html":{},"coverage.html":{}}}],["updates",{"_index":626,"title":{},"body":{"injectables/TeacherSubjectService.html":{},"injectables/WorkspaceQuizQuestionOptionsService.html":{},"injectables/WorkspaceQuizQuestionsService.html":{},"injectables/WorkspaceStudentResultsService.html":{},"injectables/WorkspacesService.html":{}}}],["updatesubjectdto",{"_index":533,"title":{"classes/UpdateSubjectDto.html":{}},"body":{"controllers/SubjectsController.html":{},"injectables/SubjectsService.html":{},"classes/UpdateSubjectDto.html":{},"coverage.html":{}}}],["updateteachersubjectdto",{"_index":600,"title":{"classes/UpdateTeacherSubjectDto.html":{}},"body":{"controllers/TeacherSubjectController.html":{},"injectables/TeacherSubjectService.html":{},"classes/UpdateTeacherSubjectDto.html":{},"coverage.html":{}}}],["updatetermdto",{"_index":639,"title":{"classes/UpdateTermDto.html":{}},"body":{"controllers/TermsController.html":{},"injectables/TermsService.html":{},"classes/UpdateTermDto.html":{},"coverage.html":{}}}],["updateworkspacedto",{"_index":697,"title":{"classes/UpdateWorkspaceDto.html":{}},"body":{"classes/UpdateWorkspaceDto.html":{},"controllers/WorkspacesController.html":{},"injectables/WorkspacesService.html":{},"coverage.html":{}}}],["updateworkspacequizquestiondto",{"_index":701,"title":{"classes/UpdateWorkspaceQuizQuestionDto.html":{}},"body":{"classes/UpdateWorkspaceQuizQuestionDto.html":{},"controllers/WorkspaceQuizQuestionsController.html":{},"injectables/WorkspaceQuizQuestionsService.html":{},"coverage.html":{}}}],["updateworkspacequizquestionoptiondto",{"_index":705,"title":{"classes/UpdateWorkspaceQuizQuestionOptionDto.html":{}},"body":{"classes/UpdateWorkspaceQuizQuestionOptionDto.html":{},"controllers/WorkspaceQuizQuestionOptionsController.html":{},"injectables/WorkspaceQuizQuestionOptionsService.html":{},"coverage.html":{}}}],["updateworkspacestudentresultdto",{"_index":709,"title":{"classes/UpdateWorkspaceStudentResultDto.html":{}},"body":{"classes/UpdateWorkspaceStudentResultDto.html":{},"controllers/WorkspaceStudentResultsController.html":{},"injectables/WorkspaceStudentResultsService.html":{},"coverage.html":{}}}],["upper",{"_index":1119,"title":{},"body":{"miscellaneous/variables.html":{}}}],["usefactory",{"_index":115,"title":{},"body":{"modules/AuthModule.html":{},"modules/CombinationsModule.html":{},"modules/Level1Module.html":{},"modules/UserModule.html":{}}}],["useguards",{"_index":391,"title":{},"body":{"controllers/Level1Controller.html":{},"controllers/Level2Controller.html":{},"controllers/TermsController.html":{},"controllers/UserController.html":{}}}],["useguards(jwtauthguard",{"_index":237,"title":{},"body":{"controllers/CombinationsController.html":{},"controllers/Level1Controller.html":{},"controllers/Level2Controller.html":{},"controllers/SubjectsController.html":{},"controllers/TermsController.html":{},"controllers/UserController.html":{}}}],["useguards(jwtauthguard)@delete(':id",{"_index":214,"title":{},"body":{"controllers/CombinationsController.html":{},"controllers/Level1Controller.html":{},"controllers/Level2Controller.html":{},"controllers/SubjectsController.html":{},"controllers/TermsController.html":{}}}],["useguards(jwtauthguard)@get",{"_index":208,"title":{},"body":{"controllers/CombinationsController.html":{},"controllers/Level1Controller.html":{},"controllers/Level2Controller.html":{},"controllers/SubjectsController.html":{},"controllers/TermsController.html":{},"controllers/UserController.html":{}}}],["useguards(jwtauthguard)@get(':id",{"_index":211,"title":{},"body":{"controllers/CombinationsController.html":{},"controllers/Level1Controller.html":{},"controllers/Level2Controller.html":{},"controllers/SubjectsController.html":{},"controllers/TermsController.html":{}}}],["useguards(jwtauthguard)@patch(':id",{"_index":218,"title":{},"body":{"controllers/CombinationsController.html":{},"controllers/Level2Controller.html":{},"controllers/SubjectsController.html":{},"controllers/TermsController.html":{}}}],["useguards(jwtauthguard)@post",{"_index":205,"title":{},"body":{"controllers/CombinationsController.html":{},"controllers/Level1Controller.html":{},"controllers/Level2Controller.html":{},"controllers/SubjectsController.html":{},"controllers/TermsController.html":{}}}],["user",{"_index":98,"title":{},"body":{"injectables/AppService.html":{},"injectables/LocalStrategy.html":{},"guards/RolesGuard.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["user.roles?.includes(role",{"_index":518,"title":{},"body":{"guards/RolesGuard.html":{}}}],["user/modles/dto/create.dto",{"_index":725,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["user/modles/user.entity",{"_index":150,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["user/modles/user.interface",{"_index":764,"title":{},"body":{"injectables/UserService.html":{}}}],["user/user.module",{"_index":59,"title":{},"body":{"modules/AppModule.html":{}}}],["user[0",{"_index":788,"title":{},"body":{"injectables/UserService.html":{}}}],["user[0].email",{"_index":793,"title":{},"body":{"injectables/UserService.html":{}}}],["user[0].id",{"_index":792,"title":{},"body":{"injectables/UserService.html":{}}}],["user[0].password",{"_index":791,"title":{},"body":{"injectables/UserService.html":{}}}],["user[0].role",{"_index":794,"title":{},"body":{"injectables/UserService.html":{}}}],["usercontroller",{"_index":713,"title":{"controllers/UserController.html":{}},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["useremail",{"_index":765,"title":{},"body":{"injectables/UserService.html":{}}}],["userentity",{"_index":149,"title":{"entities/userEntity.html":{}},"body":{"injectables/AuthService.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"entities/userEntity.html":{}}}],["userentity.find",{"_index":167,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["userentity.findone({email",{"_index":162,"title":{},"body":{"injectables/AuthService.html":{}}}],["userentity.findone({password",{"_index":166,"title":{},"body":{"injectables/AuthService.html":{}}}],["userentity.findone({username",{"_index":164,"title":{},"body":{"injectables/AuthService.html":{}}}],["userid",{"_index":372,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["userinterface",{"_index":763,"title":{"interfaces/userInterface.html":{}},"body":{"injectables/UserService.html":{},"coverage.html":{},"interfaces/userInterface.html":{}}}],["usermodule",{"_index":43,"title":{"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["username",{"_index":146,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/UserService.html":{},"classes/createUserDto.html":{},"entities/userEntity.html":{},"interfaces/userInterface.html":{}}}],["username:process.env.postgres_user",{"_index":87,"title":{},"body":{"modules/AppModule.html":{}}}],["username:string",{"_index":960,"title":{},"body":{"classes/createUserDto.html":{}}}],["username?:string",{"_index":1108,"title":{},"body":{"interfaces/userInterface.html":{}}}],["usernameexist",{"_index":126,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["usernameexist(username",{"_index":144,"title":{},"body":{"injectables/AuthService.html":{}}}],["usernameexist(username:string",{"_index":163,"title":{},"body":{"injectables/AuthService.html":{}}}],["userservice",{"_index":104,"title":{"injectables/UserService.html":{}},"body":{"modules/AuthModule.html":{},"injectables/LocalStrategy.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["userservice:userservice",{"_index":489,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["utils/.../app.utils.ts",{"_index":1115,"title":{},"body":{"miscellaneous/variables.html":{}}}],["utils/app.utils.ts",{"_index":940,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["valid",{"_index":789,"title":{},"body":{"injectables/UserService.html":{}}}],["validate",{"_index":354,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["validate(email",{"_index":484,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["validate(payload",{"_index":357,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validatepasword",{"_index":127,"title":{},"body":{"injectables/AuthService.html":{}}}],["validatepasword(password",{"_index":147,"title":{},"body":{"injectables/AuthService.html":{}}}],["validatepasword(password:string",{"_index":165,"title":{},"body":{"injectables/AuthService.html":{}}}],["validation_pipe",{"_index":945,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["validationpipe",{"_index":1126,"title":{},"body":{"miscellaneous/variables.html":{}}}],["validator",{"_index":308,"title":{},"body":{"classes/CreateCombinationDto.html":{},"classes/CreateLevel1Dto.html":{},"classes/CreateLevel2Dto.html":{},"classes/CreateSubjectDto.html":{},"classes/CreateTermDto.html":{},"classes/UpdateLevel2Dto.html":{},"classes/UpdateTermDto.html":{},"classes/createUserDto.html":{},"dependencies.html":{},"classes/loginUserDto.html":{},"entities/userEntity.html":{}}}],["value",{"_index":1009,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":924,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1112,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["watch",{"_index":1034,"title":{},"body":{"index.html":{}}}],["website",{"_index":1066,"title":{},"body":{"index.html":{}}}],["workspace",{"_index":71,"title":{"classes/Workspace.html":{}},"body":{"modules/AppModule.html":{},"classes/CreateWorkspaceQuizQuestionDto.html":{},"classes/CreateWorkspaceQuizQuestionOptionDto.html":{},"classes/CreateWorkspaceStudentResultDto.html":{},"classes/UpdateWorkspaceQuizQuestionDto.html":{},"classes/UpdateWorkspaceQuizQuestionOptionDto.html":{},"classes/UpdateWorkspaceStudentResultDto.html":{},"classes/Workspace.html":{},"controllers/WorkspaceQuizQuestionOptionsController.html":{},"modules/WorkspaceQuizQuestionOptionsModule.html":{},"injectables/WorkspaceQuizQuestionOptionsService.html":{},"controllers/WorkspaceQuizQuestionsController.html":{},"modules/WorkspaceQuizQuestionsModule.html":{},"injectables/WorkspaceQuizQuestionsService.html":{},"controllers/WorkspaceStudentResultsController.html":{},"modules/WorkspaceStudentResultsModule.html":{},"injectables/WorkspaceStudentResultsService.html":{},"injectables/WorkspacesService.html":{},"coverage.html":{}}}],["workspace.dto",{"_index":699,"title":{},"body":{"classes/UpdateWorkspaceDto.html":{},"controllers/WorkspacesController.html":{},"injectables/WorkspacesService.html":{}}}],["workspace.dto.ts",{"_index":338,"title":{},"body":{"classes/CreateWorkspaceDto.html":{},"classes/UpdateWorkspaceDto.html":{},"coverage.html":{}}}],["workspacequizquestion",{"_index":801,"title":{"classes/WorkspaceQuizQuestion.html":{}},"body":{"classes/WorkspaceQuizQuestion.html":{},"injectables/WorkspaceQuizQuestionsService.html":{},"coverage.html":{}}}],["workspacequizquestionoption",{"_index":804,"title":{"classes/WorkspaceQuizQuestionOption.html":{}},"body":{"classes/WorkspaceQuizQuestionOption.html":{},"injectables/WorkspaceQuizQuestionOptionsService.html":{},"coverage.html":{}}}],["workspacequizquestionoptions",{"_index":833,"title":{},"body":{"injectables/WorkspaceQuizQuestionOptionsService.html":{}}}],["workspacequizquestionoptionscontroller",{"_index":807,"title":{"controllers/WorkspaceQuizQuestionOptionsController.html":{}},"body":{"controllers/WorkspaceQuizQuestionOptionsController.html":{},"modules/WorkspaceQuizQuestionOptionsModule.html":{},"coverage.html":{}}}],["workspacequizquestionoptionsmodule",{"_index":44,"title":{"modules/WorkspaceQuizQuestionOptionsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/WorkspaceQuizQuestionOptionsModule.html":{},"modules.html":{},"overview.html":{}}}],["workspacequizquestionoptionsservice",{"_index":815,"title":{"injectables/WorkspaceQuizQuestionOptionsService.html":{}},"body":{"controllers/WorkspaceQuizQuestionOptionsController.html":{},"modules/WorkspaceQuizQuestionOptionsModule.html":{},"injectables/WorkspaceQuizQuestionOptionsService.html":{},"coverage.html":{},"overview.html":{}}}],["workspacequizquestions",{"_index":860,"title":{},"body":{"injectables/WorkspaceQuizQuestionsService.html":{}}}],["workspacequizquestionscontroller",{"_index":834,"title":{"controllers/WorkspaceQuizQuestionsController.html":{}},"body":{"controllers/WorkspaceQuizQuestionsController.html":{},"modules/WorkspaceQuizQuestionsModule.html":{},"coverage.html":{}}}],["workspacequizquestionsmodule",{"_index":45,"title":{"modules/WorkspaceQuizQuestionsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/WorkspaceQuizQuestionsModule.html":{},"modules.html":{},"overview.html":{}}}],["workspacequizquestionsservice",{"_index":843,"title":{"injectables/WorkspaceQuizQuestionsService.html":{}},"body":{"controllers/WorkspaceQuizQuestionsController.html":{},"modules/WorkspaceQuizQuestionsModule.html":{},"injectables/WorkspaceQuizQuestionsService.html":{},"coverage.html":{},"overview.html":{}}}],["workspaces",{"_index":892,"title":{},"body":{"controllers/WorkspacesController.html":{},"injectables/WorkspacesService.html":{}}}],["workspaces.controller",{"_index":910,"title":{},"body":{"modules/WorkspacesModule.html":{}}}],["workspaces.service",{"_index":900,"title":{},"body":{"controllers/WorkspacesController.html":{},"modules/WorkspacesModule.html":{}}}],["workspaces/workspaces.module",{"_index":70,"title":{},"body":{"modules/AppModule.html":{}}}],["workspacescontroller",{"_index":890,"title":{"controllers/WorkspacesController.html":{}},"body":{"controllers/WorkspacesController.html":{},"modules/WorkspacesModule.html":{},"coverage.html":{}}}],["workspacesmodule",{"_index":47,"title":{"modules/WorkspacesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/WorkspacesModule.html":{},"modules.html":{},"overview.html":{}}}],["workspacesservice",{"_index":899,"title":{"injectables/WorkspacesService.html":{}},"body":{"controllers/WorkspacesController.html":{},"modules/WorkspacesModule.html":{},"injectables/WorkspacesService.html":{},"coverage.html":{},"overview.html":{}}}],["workspacestudentresult",{"_index":861,"title":{"classes/WorkspaceStudentResult.html":{}},"body":{"classes/WorkspaceStudentResult.html":{},"injectables/WorkspaceStudentResultsService.html":{},"coverage.html":{}}}],["workspacestudentresults",{"_index":889,"title":{},"body":{"injectables/WorkspaceStudentResultsService.html":{}}}],["workspacestudentresultscontroller",{"_index":864,"title":{"controllers/WorkspaceStudentResultsController.html":{}},"body":{"controllers/WorkspaceStudentResultsController.html":{},"modules/WorkspaceStudentResultsModule.html":{},"coverage.html":{}}}],["workspacestudentresultsmodule",{"_index":46,"title":{"modules/WorkspaceStudentResultsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/WorkspaceStudentResultsModule.html":{},"modules.html":{},"overview.html":{}}}],["workspacestudentresultsservice",{"_index":872,"title":{"injectables/WorkspaceStudentResultsService.html":{}},"body":{"controllers/WorkspaceStudentResultsController.html":{},"modules/WorkspaceStudentResultsModule.html":{},"injectables/WorkspaceStudentResultsService.html":{},"coverage.html":{},"overview.html":{}}}],["you'd",{"_index":1055,"title":{},"body":{"index.html":{}}}],["z",{"_index":1125,"title":{},"body":{"miscellaneous/variables.html":{}}}],["z])(?=.*[a",{"_index":1124,"title":{},"body":{"miscellaneous/variables.html":{}}}],["zoom",{"_index":48,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CombinationsModule.html":{},"modules/Level1Module.html":{},"modules/Level2Module.html":{},"modules/SubjectsModule.html":{},"modules/TeacherSubjectModule.html":{},"modules/TermsModule.html":{},"modules/UserModule.html":{},"modules/WorkspaceQuizQuestionOptionsModule.html":{},"modules/WorkspaceQuizQuestionsModule.html":{},"modules/WorkspaceStudentResultsModule.html":{},"modules/WorkspacesModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get,UseGuards } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  \n  @Get()\n  getHello(): string {\n    return this.appService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nCombinationsModule\n\nCombinationsModule\n\nAppModule -->\n\nCombinationsModule->AppModule\n\n\n\n\n\nLevel1Module\n\nLevel1Module\n\nAppModule -->\n\nLevel1Module->AppModule\n\n\n\n\n\nLevel2Module\n\nLevel2Module\n\nAppModule -->\n\nLevel2Module->AppModule\n\n\n\n\n\nSubjectsModule\n\nSubjectsModule\n\nAppModule -->\n\nSubjectsModule->AppModule\n\n\n\n\n\nTeacherSubjectModule\n\nTeacherSubjectModule\n\nAppModule -->\n\nTeacherSubjectModule->AppModule\n\n\n\n\n\nTermsModule\n\nTermsModule\n\nAppModule -->\n\nTermsModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nWorkspaceQuizQuestionOptionsModule\n\nWorkspaceQuizQuestionOptionsModule\n\nAppModule -->\n\nWorkspaceQuizQuestionOptionsModule->AppModule\n\n\n\n\n\nWorkspaceQuizQuestionsModule\n\nWorkspaceQuizQuestionsModule\n\nAppModule -->\n\nWorkspaceQuizQuestionsModule->AppModule\n\n\n\n\n\nWorkspaceStudentResultsModule\n\nWorkspaceStudentResultsModule\n\nAppModule -->\n\nWorkspaceStudentResultsModule->AppModule\n\n\n\n\n\nWorkspacesModule\n\nWorkspacesModule\n\nAppModule -->\n\nWorkspacesModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            CombinationsModule\n                        \n                        \n                            Level1Module\n                        \n                        \n                            Level2Module\n                        \n                        \n                            SubjectsModule\n                        \n                        \n                            TeacherSubjectModule\n                        \n                        \n                            TermsModule\n                        \n                        \n                            UserModule\n                        \n                        \n                            WorkspaceQuizQuestionOptionsModule\n                        \n                        \n                            WorkspaceQuizQuestionsModule\n                        \n                        \n                            WorkspaceStudentResultsModule\n                        \n                        \n                            WorkspacesModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { ConfigModule } from '@nestjs/config';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { UserModule } from './user/user.module';\nimport { AuthModule } from './auth/auth.module';\nimport { AuthService } from './services/auth/auth.service';\nimport { Level1Module } from './level1/level1.module';\nimport { TermsModule } from './terms/terms.module';\nimport { CombinationsModule } from './combinations/combinations.module';\nimport { SubjectsModule } from './subjects/subjects.module';\nimport { TeacherSubjectModule } from './teacher-subject/teacher-subject.module';\nimport { WorkspacesModule } from './workspaces/workspaces.module';\nimport { WorkspaceQuizQuestionsModule } from './workspace-quiz-questions/workspace-quiz-questions.module';\nimport { WorkspaceQuizQuestionOptionsModule } from './workspace-quiz-question-options/workspace-quiz-question-options.module';\nimport { WorkspaceStudentResultsModule } from './workspace-student-results/workspace-student-results.module';\nimport { Level2Module } from './level2/level2.module';\n\n\n\n\n\n\n\n@Module({\n  imports: [ConfigModule.forRoot({isGlobal:true}),\n    TypeOrmModule.forRoot({\n      type:'postgres',\n      host:process.env.POSTGRES_HOST,\n      port:parseInt(process.env.POSTGRES_PORT),\n      username:process.env.POSTGRES_USER,\n      password:process.env.POSTGRES_PASSWORD,\n      database:process.env.POSTGRES_DATABASE,\n      autoLoadEntities:true,\n      synchronize:true,\n      entities: ['dist/**/*.entity{.ts,.js}'],\n    }),\n    UserModule,\n    AuthModule,\n    Level1Module,\n    TermsModule,\n    CombinationsModule,\n    SubjectsModule,\n    TeacherSubjectModule,\n    WorkspacesModule,\n    WorkspaceQuizQuestionsModule,\n    WorkspaceQuizQuestionOptionsModule,\n    WorkspaceStudentResultsModule,\n    Level2Module\n  ],\n  controllers: [AppController],\n  providers: [\n    AppService,\n   ],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'this all user';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nAuthService \n\nAuthService \n\n\n\nAuthModule\n\nAuthModule\n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\nUserService\n\nUserService\n\nAuthModule -->\n\nUserService->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            JwtStrategy\n                        \n                        \n                            LocalStrategy\n                        \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AuthService } from '../services/auth/auth.service';\nimport { JwtModule } from '@nestjs/jwt';\nimport { PassportModule } from '@nestjs/passport';\nimport { LocalStrategy } from './local.strategy'\nimport { UserService } from 'src/services/user.service';\nimport { JwtStrategy } from './jwt.strategy'\n\n\n\n@Module({\n  imports:[\n  PassportModule,\n  JwtModule.registerAsync({\n    useFactory :()=>({\n      secret:'jwtsecret',\n      signOptions:{expiresIn:'1d'},\n      })\n  })\n],\n  providers: [AuthService,LocalStrategy,UserService,JwtStrategy],\n  exports:[AuthService]\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                comparePassword\n                            \n                            \n                                    Async\n                                findUserByEmail\n                            \n                            \n                                    Async\n                                hashPassword\n                            \n                            \n                                    Async\n                                mailExist\n                            \n                            \n                                    Async\n                                usernameExist\n                            \n                            \n                                    Async\n                                validatepasword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        comparePassword\n                        \n                    \n                \n            \n            \n                \n                    \n                    comparePassword(password: string, strorePasswordHash: string)\n                \n            \n\n\n            \n                \n                    Defined in src/services/auth/auth.service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    strorePasswordHash\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findUserByEmail\n                        \n                    \n                \n            \n            \n                \n                    \n                    findUserByEmail(email)\n                \n            \n\n\n            \n                \n                    Defined in src/services/auth/auth.service.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        hashPassword\n                        \n                    \n                \n            \n            \n                \n                    \n                    hashPassword(password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/services/auth/auth.service.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        mailExist\n                        \n                    \n                \n            \n            \n                \n                    \n                    mailExist(email: string)\n                \n            \n\n\n            \n                \n                    Defined in src/services/auth/auth.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        usernameExist\n                        \n                    \n                \n            \n            \n                \n                    \n                    usernameExist(username: string)\n                \n            \n\n\n            \n                \n                    Defined in src/services/auth/auth.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validatepasword\n                        \n                    \n                \n            \n            \n                \n                    \n                    validatepasword(password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/services/auth/auth.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { userEntity} from '../../user/modles/user.entity'\nimport { loginUserDto } from 'src/user/modles/dto/login.dto';\n\n\nconst bcrypt =require('bcrypt');\n\n@Injectable()\nexport class AuthService {\n    async hashPassword(password:string,){\n        return await  bcrypt.hash(password,12);\n    }\n    async comparePassword(password:string,strorePasswordHash:string){\n        return  bcrypt.compare(password,strorePasswordHash);\n    }\n\n    async mailExist(email:string){\n        return await userEntity.findOne({email})\n        }\n\n     async usernameExist(username:string){\n            return await userEntity.findOne({username})\n            }\n\n    async validatepasword(password:string){\n        \n        return await userEntity.findOne({password})\n\n    }\n\nasync findUserByEmail(email){\n    return await userEntity.find({\n        where:[\n            {\n                email\n            }\n        ]\n    })\n}\n    \n\n        \n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Combination.html":{"url":"entities/Combination.html","title":"entity - Combination","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Combination\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/combinations/entities/combination.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                level1Id\n                            \n                            \n                                level2Id\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/combinations/entities/combination.entity.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        level1Id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/combinations/entities/combination.entity.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        level2Id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/combinations/entities/combination.entity.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/combinations/entities/combination.entity.ts:9\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Entity,PrimaryGeneratedColumn,Column,BaseEntity} from \"typeorm\";\n\n@Entity('combination')\nexport class Combination  extends BaseEntity  {\n    @PrimaryGeneratedColumn()\n    id:number;\n\n    @Column({default:null})\n    name:string;\n     \n    @Column({default:null})\n    level1Id:string;\n\n    @Column({default:null})\n    level2Id:string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/CombinationsController.html":{"url":"controllers/CombinationsController.html","title":"controller - CombinationsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  CombinationsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/combinations/combinations.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                combinations\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(request: Request, createCombinationDto: CreateCombinationDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@Post()\n                \n            \n\n            \n                \n                    Defined in src/combinations/combinations.controller.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    createCombinationDto\n                                    \n                                                CreateCombinationDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(request: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@Get()\n                \n            \n\n            \n                \n                    Defined in src/combinations/combinations.controller.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(request: Request, id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/combinations/combinations.controller.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(request: Request, id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/combinations/combinations.controller.ts:95\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(request: Request, id: string, updateCombinationDto: UpdateCombinationDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@Patch(':id')\n                \n            \n\n            \n                \n                    Defined in src/combinations/combinations.controller.ts:76\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateCombinationDto\n                                    \n                                                UpdateCombinationDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete,Req,UnauthorizedException,UseGuards } from '@nestjs/common';\nimport { CombinationsService } from './combinations.service';\nimport { CreateCombinationDto } from './dto/create-combination.dto';\nimport { UpdateCombinationDto } from './dto/update-combination.dto';\nimport {Request} from 'express';\nimport { JwtService } from '@nestjs/jwt';\nimport { JwtAuthGuard } from '../auth/guards/jwt-auth.guard'\n\n\n\n@Controller('combinations')\nexport class CombinationsController {\n  constructor(private readonly combinationsService: CombinationsService,\n    private jwtService: JwtService\n    ) {}\n\n  @UseGuards(JwtAuthGuard)\n  @Post()\n  async create(@Req() request: Request,@Body() createCombinationDto: CreateCombinationDto) {\n    const bearer = request.headers['authorization'];\n      \n    const token =bearer.split(' ')[1];\n    const data = await this.jwtService.verify(token);\n    if(data.role ==\"admin\"){\n    return this.combinationsService.create(createCombinationDto);\n  }\n  else{\n    return {\n      message:\"you are not allowed to access this\"\n    }\n  }\n  }\n\n\n \n @UseGuards(JwtAuthGuard)\n @Get()\n async  findAll(@Req() request: Request) {\n  const bearer = request.headers['authorization'];\n      \n  const token =bearer.split(' ')[1];\n  const data = await this.jwtService.verify(token);\n  if(data.role ==\"admin\"){\n    return this.combinationsService.findAll();\n  }\n  else{\n    return {\n      message:\"you are not allowed to access this\"\n    }\n  }\n  }\n\n\n\n  @UseGuards(JwtAuthGuard)\n  @Get(':id')\n  async findOne(@Req() request: Request,@Param('id') id: string) {\n    const bearer = request.headers['authorization'];\n      \n    const token =bearer.split(' ')[1];\n    const data = await this.jwtService.verify(token);\n    if(data.role ==\"admin\"){\n\n    return this.combinationsService.findOne(+id);\n  }\n  else{\n    return {\n      message:\"you are not allowed to access this\"\n    }\n  }\n  }\n\n\n  @UseGuards(JwtAuthGuard)\n  @Patch(':id')\n  async update(@Req() request: Request,@Param('id') id: string, @Body() updateCombinationDto: UpdateCombinationDto) {\n    const bearer = request.headers['authorization'];\n      \n    const token =bearer.split(' ')[1];\n    const data = await this.jwtService.verify(token);\n    if(data.role ==\"admin\"){\n    return this.combinationsService.update(+id, updateCombinationDto);\n  }\n  else{\n    return {\n      message:\"you are not allowed to access this\"\n    }\n  }\n    \n  }\n\n\n  @UseGuards(JwtAuthGuard)\n  @Delete(':id')\n  async remove(@Req() request: Request,@Param('id') id: string) {\n    const bearer = request.headers['authorization'];\n      \n    const token =bearer.split(' ')[1];\n    const data = await this.jwtService.verify(token);\n    if(data.role ==\"admin\"){\n      return this.combinationsService.remove(+id);\n    }\n    else{\n      return {\n        message:\"you are not allowed to access this\"\n      }\n    }\n    }\n   \n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CombinationsModule.html":{"url":"modules/CombinationsModule.html","title":"module - CombinationsModule","body":"\n                   \n\n\n\n\n    Modules\n    CombinationsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_CombinationsModule\n\n\n\ncluster_CombinationsModule_providers\n\n\n\n\nCombinationsService\n\nCombinationsService\n\n\n\nCombinationsModule\n\nCombinationsModule\n\nCombinationsModule -->\n\nCombinationsService->CombinationsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/combinations/combinations.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CombinationsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            CombinationsController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { CombinationsService } from './combinations.service';\nimport { CombinationsController } from './combinations.controller';\nimport { JwtModule } from '@nestjs/jwt';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport{Combination} from './entities/combination.entity';\n\n\n@Module({\n  imports:[TypeOrmModule.forFeature([Combination]),\n  JwtModule.register({\n   secret:'jwtsecret',\n    signOptions: { expiresIn: '60s' },\n  }),\n//   JwtModule.registerAsync({\n//     useFactory :()=>({\n//     secret:'jwtsecret',\n//     signOptions:{expiresIn:'1d'},\n//     })\n// }),\n],\n  controllers: [CombinationsController],\n  providers: [CombinationsService]\n})\nexport class CombinationsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CombinationsService.html":{"url":"injectables/CombinationsService.html","title":"injectable - CombinationsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CombinationsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/combinations/combinations.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createCombinationDto: CreateCombinationDto)\n                \n            \n\n\n            \n                \n                    Defined in src/combinations/combinations.service.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createCombinationDto\n                                    \n                                                CreateCombinationDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n\n            \n                \n                    Defined in src/combinations/combinations.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/combinations/combinations.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/combinations/combinations.service.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: number, updateCombinationDto: UpdateCombinationDto)\n                \n            \n\n\n            \n                \n                    Defined in src/combinations/combinations.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateCombinationDto\n                                    \n                                                UpdateCombinationDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CreateCombinationDto } from './dto/create-combination.dto';\nimport { UpdateCombinationDto } from './dto/update-combination.dto';\nimport{Combination } from './entities/combination.entity'\n\n@Injectable()\nexport class CombinationsService {\n  async create(createCombinationDto: CreateCombinationDto) {\n\n    const createCombination =new Combination();\n    createCombination.name = createCombinationDto.name;\n    createCombination.level1Id = createCombinationDto.level1Id;\n    createCombination.level2Id = createCombinationDto.level2Id;\n\n    return await createCombination.save();\n  }\n\n\n \n\n  async findAll() {\n    return await Combination.find();\n  }\n\n\n  async findOne(id: number) {\n    return await Combination.findOne(id);\n  }\n  async update(id: number, updateCombinationDto: UpdateCombinationDto) {\n\n    return await Combination.update(id, updateCombinationDto);\n  }\n\n  async remove(id: number) {\n    return await Combination.delete(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateCombinationDto.html":{"url":"classes/CreateCombinationDto.html","title":"class - CreateCombinationDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateCombinationDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/combinations/dto/create-combination.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                level1Id\n                            \n                            \n                                level2Id\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        level1Id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsInt()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/combinations/dto/create-combination.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        level2Id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsInt()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/combinations/dto/create-combination.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/combinations/dto/create-combination.dto.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {IsNotEmpty,IsString,IsInt} from 'class-validator';\n\nexport class CreateCombinationDto {\n    @IsNotEmpty()\n    @IsString()\n    name:string;\n\n\n    @IsNotEmpty()\n    @IsInt()\n    level1Id:string;\n\n    @IsNotEmpty()\n    @IsInt()\n    level2Id:string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateLevel1Dto.html":{"url":"classes/CreateLevel1Dto.html","title":"class - CreateLevel1Dto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateLevel1Dto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/level1/dto/create-level1.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/level1/dto/create-level1.dto.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {IsNotEmpty, IsString} from 'class-validator';\nexport class CreateLevel1Dto {\n\n    @IsNotEmpty()\n    @IsString()\n    name:string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateLevel2Dto.html":{"url":"classes/CreateLevel2Dto.html","title":"class - CreateLevel2Dto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateLevel2Dto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/level2/dto/create-level2.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                level1Id\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        level1Id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/level2/dto/create-level2.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/level2/dto/create-level2.dto.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {IsNotEmpty,IsString} from 'class-validator';\nexport class CreateLevel2Dto {\n    @IsNotEmpty()\n    @IsString()\n    name:string;\n\n\n    @IsNotEmpty()\n    // @IsInt()\n    level1Id:string;\n}\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateSubjectDto.html":{"url":"classes/CreateSubjectDto.html","title":"class - CreateSubjectDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateSubjectDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/subjects/dto/create-subject.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                level1Id\n                            \n                            \n                                level2Id\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        level1Id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsInt()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subjects/dto/create-subject.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        level2Id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsInt()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subjects/dto/create-subject.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subjects/dto/create-subject.dto.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {IsNotEmpty,IsString,IsInt} from 'class-validator';\n\nexport class CreateSubjectDto {\n    @IsNotEmpty()\n    @IsString()\n    name:string;\n\n\n    @IsNotEmpty()\n    @IsInt()\n    level1Id:string;\n\n    @IsNotEmpty()\n    @IsInt()\n    level2Id:string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateTeacherSubjectDto.html":{"url":"classes/CreateTeacherSubjectDto.html","title":"class - CreateTeacherSubjectDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateTeacherSubjectDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/teacher-subject/dto/create-teacher-subject.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateTeacherSubjectDto {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateTermDto.html":{"url":"classes/CreateTermDto.html","title":"class - CreateTermDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateTermDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/terms/dto/create-term.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                level1Id\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        level1Id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/terms/dto/create-term.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/terms/dto/create-term.dto.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {IsNotEmpty,IsString,IsInt} from 'class-validator';\nexport class CreateTermDto {\n    @IsNotEmpty()\n    @IsString()\n    name:string;\n\n\n    @IsNotEmpty()\n    // @IsInt()\n    level1Id:string;\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateWorkspaceDto.html":{"url":"classes/CreateWorkspaceDto.html","title":"class - CreateWorkspaceDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateWorkspaceDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/workspaces/dto/create-workspace.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateWorkspaceDto {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateWorkspaceQuizQuestionDto.html":{"url":"classes/CreateWorkspaceQuizQuestionDto.html","title":"class - CreateWorkspaceQuizQuestionDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateWorkspaceQuizQuestionDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/workspace-quiz-questions/dto/create-workspace-quiz-question.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateWorkspaceQuizQuestionDto {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateWorkspaceQuizQuestionOptionDto.html":{"url":"classes/CreateWorkspaceQuizQuestionOptionDto.html","title":"class - CreateWorkspaceQuizQuestionOptionDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateWorkspaceQuizQuestionOptionDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/workspace-quiz-question-options/dto/create-workspace-quiz-question-option.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateWorkspaceQuizQuestionOptionDto {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateWorkspaceStudentResultDto.html":{"url":"classes/CreateWorkspaceStudentResultDto.html","title":"class - CreateWorkspaceStudentResultDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateWorkspaceStudentResultDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/workspace-student-results/dto/create-workspace-student-result.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateWorkspaceStudentResultDto {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtAuthGuard.html":{"url":"injectables/JwtAuthGuard.html","title":"injectable - JwtAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/guards/jwt-auth.guard.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class JwtAuthGuard extends AuthGuard('jwt') {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/jwt.strategy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/auth/jwt.strategy.ts:7\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(payload: any)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/jwt.strategy.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ExtractJwt, Strategy } from 'passport-jwt';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Injectable } from '@nestjs/common';\n\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n  constructor() {\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      ignoreExpiration: false,\n      secretOrKey:'jwtsecret',\n    });\n  }\n\n  async validate(payload: any) {\n    return { userId: payload.sub, username: payload.username };\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Level1.html":{"url":"entities/Level1.html","title":"entity - Level1","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Level1\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/level1/entities/level1.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/level1/entities/level1.entity.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/level1/entities/level1.entity.ts:10\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Entity,PrimaryGeneratedColumn,Column,BaseEntity,BeforeInsert} from \"typeorm\";\n\n\n@Entity('level1')\nexport class Level1 extends BaseEntity {\n    @PrimaryGeneratedColumn()\n    id:number;\n\n    @Column({default:null})\n    name:string;\n\n    \n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/Level1Controller.html":{"url":"controllers/Level1Controller.html","title":"controller - Level1Controller","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  Level1Controller\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/level1/level1.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                level1\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(request: Request, createLevel1Dto: CreateLevel1Dto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@Post()\n                \n            \n\n            \n                \n                    Defined in src/level1/level1.controller.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    createLevel1Dto\n                                    \n                                                CreateLevel1Dto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(request: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@Get()\n                \n            \n\n            \n                \n                    Defined in src/level1/level1.controller.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(request: Request, id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/level1/level1.controller.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(request: Request, id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/level1/level1.controller.ts:83\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(request: Request, id: string, updateLevel1Dto: UpdateLevel1Dto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n            \n                \n                    Defined in src/level1/level1.controller.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateLevel1Dto\n                                    \n                                                UpdateLevel1Dto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete, Req, UseGuards } from '@nestjs/common';\nimport { Level1Service } from './level1.service';\nimport { CreateLevel1Dto } from './dto/create-level1.dto';\nimport { UpdateLevel1Dto } from './dto/update-level1.dto';\nimport { Request } from 'express';\nimport { JwtService } from '@nestjs/jwt';\nimport { JwtAuthGuard } from '../auth/guards/jwt-auth.guard';\n\n\n@Controller('level1')\nexport class Level1Controller {\n  constructor(private readonly level1Service: Level1Service,\n    private jwtService: JwtService\n  ) { }\n\n\n  @UseGuards(JwtAuthGuard)\n  @Post()\n  async create(@Req() request: Request, @Body() createLevel1Dto: CreateLevel1Dto) {\n\n    const bearer = request.headers['authorization'];\n\n    const token = bearer.split(' ')[1];\n    const data = await this.jwtService.verify(token);\n    if (data.role == \"admin\") {\n      return this.level1Service.create(createLevel1Dto);\n    }\n    else {\n      return {\n        message: \"you are not allowed to access this\"\n      }\n    }\n  }\n\n\n\n  @UseGuards(JwtAuthGuard)\n  @Get()\n  async findAll(@Req() request: Request) {\n\n    return this.level1Service.findAll();\n\n\n  }\n\n  @UseGuards(JwtAuthGuard)\n  @Get(':id')\n  async findOne(@Req() request: Request, @Param('id') id: string) {\n    const bearer = request.headers['authorization'];\n\n    const token = bearer.split(' ')[1];\n    const data = await this.jwtService.verify(token);\n    if (data.role == 'admin') {\n      return this.level1Service.findOne(+id);\n    }\n    else {\n      return {\n        message: \"you are not allowed to access this\"\n      }\n    }\n  }\n\n  @Patch(':id')\n  async update(@Req() request: Request, @Param('id') id: string, @Body() updateLevel1Dto: UpdateLevel1Dto) {\n    const bearer = request.headers['authorization'];\n\n    const token = bearer.split(' ')[1];\n    const data = await this.jwtService.verify(token);\n    if (data.role == 'admin') {\n\n      return this.level1Service.update(+id, updateLevel1Dto);\n    }\n    else {\n      return {\n        message: \"you are not allowed to access this\"\n      }\n    }\n  }\n\n\n  @UseGuards(JwtAuthGuard)\n  @Delete(':id')\n  async remove(@Req() request: Request, @Param('id') id: string) {\n    const bearer = request.headers['authorization'];\n\n    const token = bearer.split(' ')[1];\n    const data = await this.jwtService.verify(token);\n    if (data.role == 'admin') {\n      return this.level1Service.remove(+id);\n    } else {\n      return {\n        message: \"you are not allowed to access this\"\n      }\n    }\n\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/Level1Module.html":{"url":"modules/Level1Module.html","title":"module - Level1Module","body":"\n                   \n\n\n\n\n    Modules\n    Level1Module\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_Level1Module\n\n\n\ncluster_Level1Module_providers\n\n\n\n\nLevel1Service\n\nLevel1Service\n\n\n\nLevel1Module\n\nLevel1Module\n\nLevel1Module -->\n\nLevel1Service->Level1Module\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/level1/level1.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            Level1Service\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            Level1Controller\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { Level1Service } from './level1.service';\nimport { Level1Controller } from './level1.controller';\nimport { JwtModule } from '@nestjs/jwt';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport {Level1} from './entities/level1.entity'\nimport {RolesGuard} from '../../src/auth/guards/roles.guard';\n\n@Module({\n  imports:[TypeOrmModule.forFeature([Level1]),\n  JwtModule.registerAsync({\n    useFactory :()=>({\n    secret:'jwtsecret',\n    signOptions:{expiresIn:'1d'},\n    })\n\n}),\n],\n  controllers: [Level1Controller],\n  providers: [Level1Service,\n   \n  ]\n})\nexport class Level1Module {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/Level1Service.html":{"url":"injectables/Level1Service.html","title":"injectable - Level1Service","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  Level1Service\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/level1/level1.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createLevel1Dto: CreateLevel1Dto)\n                \n            \n\n\n            \n                \n                    Defined in src/level1/level1.service.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createLevel1Dto\n                                    \n                                                CreateLevel1Dto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n\n            \n                \n                    Defined in src/level1/level1.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/level1/level1.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/level1/level1.service.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: number, updateLevel1Dto: UpdateLevel1Dto)\n                \n            \n\n\n            \n                \n                    Defined in src/level1/level1.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateLevel1Dto\n                                    \n                                                UpdateLevel1Dto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CreateLevel1Dto } from './dto/create-level1.dto';\nimport { UpdateLevel1Dto } from './dto/update-level1.dto';\nimport { Level1 } from './entities/level1.entity';\n\n@Injectable()\nexport class Level1Service {\n  async create(createLevel1Dto: CreateLevel1Dto) {\n\n    const createleve1 = new Level1();\n    createleve1.name = createLevel1Dto.name;\n    return await createleve1.save();\n  }\n\n async findAll() {\n    return await Level1.find();\n  }\n\n  async findOne(id: number) {\n    return await Level1.findOne(id);\n  }\n\n  \n\n  async update(id: number, updateLevel1Dto: UpdateLevel1Dto) {\n\n    return await  Level1.update(id, updateLevel1Dto);\n  }\n\n  async remove(id: number) {\n    return await Level1.delete(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Level2.html":{"url":"entities/Level2.html","title":"entity - Level2","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Level2\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/level2/entities/level2.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                level1Id\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/level2/entities/level2.entity.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        level1Id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/level2/entities/level2.entity.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/level2/entities/level2.entity.ts:10\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        \nimport { Entity,PrimaryGeneratedColumn,Column,BaseEntity} from \"typeorm\";\n\n@Entity('level2')\nexport class Level2 extends BaseEntity  {\n    @PrimaryGeneratedColumn()\n    id:number;\n\n    @Column({default:null})\n    name:string;\n    \n    @Column({default:null})\n    level1Id:string;\n}\n\n\n\n// import {Level1} from '../../level1/entities/level1.entity';\n\n\n// @Entity('term')\n// export class Term  extends BaseEntity {\n//     @PrimaryGeneratedColumn()\n//     id:number;\n\n//     @Column({default:null})\n//     name:string;\n    \n//     @Column({default:null})\n//     level1Id:string;\n \n// }\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/Level2Controller.html":{"url":"controllers/Level2Controller.html","title":"controller - Level2Controller","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  Level2Controller\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/level2/level2.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                level2\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(request: Request, createLevel2Dto: CreateLevel2Dto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@Post()\n                \n            \n\n            \n                \n                    Defined in src/level2/level2.controller.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    createLevel2Dto\n                                    \n                                                CreateLevel2Dto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@Get()\n                \n            \n\n            \n                \n                    Defined in src/level2/level2.controller.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(request: Request, id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/level2/level2.controller.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(request: Request, id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/level2/level2.controller.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(request: Request, id: string, updateLevel2Dto: UpdateLevel2Dto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@Patch(':id')\n                \n            \n\n            \n                \n                    Defined in src/level2/level2.controller.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateLevel2Dto\n                                    \n                                                UpdateLevel2Dto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete,Req, UseGuards } from '@nestjs/common';\nimport { Level2Service } from './level2.service';\nimport { CreateLevel2Dto } from './dto/create-level2.dto';\nimport { UpdateLevel2Dto } from './dto/update-level2.dto';\nimport { Request } from 'express';\nimport { JwtService } from '@nestjs/jwt';\nimport { JwtAuthGuard } from '../auth/guards/jwt-auth.guard';\n\n\n@Controller('level2')\nexport class Level2Controller {\n  constructor(private readonly level2Service: Level2Service,\n    private jwtService: JwtService\n    ) {}\n\n  \n\n  @UseGuards(JwtAuthGuard)\n  @Post()\n  async create(@Req() request: Request,@Body() createLevel2Dto: CreateLevel2Dto) {\n    const bearer = request.headers['authorization'];\n\n    const token = bearer.split(' ')[1];\n    const data = await this.jwtService.verify(token);\n    if (data.role == \"admin\") {\n    return this.level2Service.create(createLevel2Dto);\n  }\n  else {\n    return {\n      message: \"you are not allowed to access this\"\n    }\n  }\n  }\n\n  @UseGuards(JwtAuthGuard)\n  @Get()\n  findAll() {\n    return this.level2Service.findAll();\n  }\n\n  @UseGuards(JwtAuthGuard)\n  @Get(':id')\n  async findOne(@Req() request: Request,@Param('id') id: string) {\n    const bearer = request.headers['authorization'];\n\n    const token = bearer.split(' ')[1];\n    const data = await this.jwtService.verify(token);\n    if (data.role == \"admin\") {\n    return this.level2Service.findOne(+id);\n  }\n  else {\n    return {\n      message: \"you are not allowed to access this\"\n    }\n  }\n  }\n\n  \n\n  @UseGuards(JwtAuthGuard)\n  @Patch(':id')\n  \n  async update(@Req() request: Request,@Param('id') id: string, @Body() updateLevel2Dto: UpdateLevel2Dto) {\n    const bearer = request.headers['authorization'];\n\n    const token = bearer.split(' ')[1];\n    const data = await this.jwtService.verify(token);\n    if (data.role == \"admin\") {\n    return this.level2Service.update(+id, updateLevel2Dto);\n  }\n  else {\n    return {\n      message: \"you are not allowed to access this\"\n    }\n  }\n  }\n\n  @UseGuards(JwtAuthGuard)\n  @Delete(':id')\n  async remove(@Req() request: Request,@Param('id') id: string) {\n    const bearer = request.headers['authorization'];\n\n    const token = bearer.split(' ')[1];\n    const data = await this.jwtService.verify(token);\n    if (data.role == \"admin\") {\n    return this.level2Service.remove(+id);\n  }\n  else {\n    return {\n      message: \"you are not allowed to access this\"\n    }\n  }\n}\n}\n\n//done\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/Level2Module.html":{"url":"modules/Level2Module.html","title":"module - Level2Module","body":"\n                   \n\n\n\n\n    Modules\n    Level2Module\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_Level2Module\n\n\n\ncluster_Level2Module_providers\n\n\n\n\nLevel2Service\n\nLevel2Service\n\n\n\nLevel2Module\n\nLevel2Module\n\nLevel2Module -->\n\nLevel2Service->Level2Module\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/level2/level2.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            Level2Service\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            Level2Controller\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { Level2Service } from './level2.service';\nimport { Level2Controller } from './level2.controller';\nimport { JwtModule } from '@nestjs/jwt';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport {Level2} from './entities/level2.entity'\n\n@Module({\n  imports:[TypeOrmModule.forFeature([Level2]),\n  JwtModule.register({\n    secret:'jwtsecret',\n    signOptions:{expiresIn:'1d'},\n}),\n],\n  controllers: [Level2Controller],\n  providers: [Level2Service]\n})\nexport class Level2Module {}\n\n\n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/Level2Service.html":{"url":"injectables/Level2Service.html","title":"injectable - Level2Service","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  Level2Service\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/level2/level2.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createLevel2Dto: CreateLevel2Dto)\n                \n            \n\n\n            \n                \n                    Defined in src/level2/level2.service.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createLevel2Dto\n                                    \n                                                CreateLevel2Dto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n\n            \n                \n                    Defined in src/level2/level2.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/level2/level2.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/level2/level2.service.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: number, updateLevel2Dto: UpdateLevel2Dto)\n                \n            \n\n\n            \n                \n                    Defined in src/level2/level2.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateLevel2Dto\n                                    \n                                                UpdateLevel2Dto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CreateLevel2Dto } from './dto/create-level2.dto';\nimport { UpdateLevel2Dto } from './dto/update-level2.dto';\nimport { Level2 } from './entities/level2.entity';\n\n@Injectable()\nexport class Level2Service {\n  async create(createLevel2Dto: CreateLevel2Dto) {\n    const createLevel2=new Level2();\n    createLevel2.name = createLevel2Dto.name;\n    createLevel2.level1Id = createLevel2Dto.level1Id;\n    return await  createLevel2.save();\n  }\n\n\n  async findAll() {\n    return await Level2.find();\n  }\n\n\n  async findOne(id: number) {\n    return await Level2.findOne(id);\n  }\n\n  async update(id: number, updateLevel2Dto: UpdateLevel2Dto) {\n\n    return await Level2.update(id,updateLevel2Dto);\n  }\n  \n  async remove(id: number) {\n    return await Level2.delete(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalAuthGuard.html":{"url":"injectables/LocalAuthGuard.html","title":"injectable - LocalAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LocalAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/guards/local-auth.guard.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class LocalAuthGuard extends AuthGuard('local') {}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalStrategy.html":{"url":"injectables/LocalStrategy.html","title":"injectable - LocalStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LocalStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/local.strategy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/local.strategy.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(email: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/local.strategy.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Strategy } from 'passport-local';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { UserService} from  '../services/user.service'\nimport { AuthService} from '../services/auth/auth.service'\n\n\n@Injectable()\nexport class LocalStrategy extends PassportStrategy(Strategy) {\n  constructor(private userService:UserService) {\n    super();\n  }\n\n  async validate( email: string,password: string){\n\n    // const user = await this.userService.login(email,password);\n    // if (!user) {\n    //   throw new UnauthorizedException();\n    // }\n    // return user;\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/RolesGuard.html":{"url":"guards/RolesGuard.html","title":"guard - RolesGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    RolesGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/auth/guards/roles.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(reflector: Reflector)\n                    \n                \n                        \n                            \n                                Defined in src/auth/guards/roles.guard.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/guards/roles.guard.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable, CanActivate, ExecutionContext } from '@nestjs/common';\nimport { Reflector } from '@nestjs/core';\nimport { ROLES_KEY } from '../decorators/roles.decorator';\nimport { Role } from '../moddles/role.enum';\n\n\n@Injectable()\nexport class RolesGuard implements CanActivate {\n  constructor(private reflector: Reflector) {}\n  canActivate(context: ExecutionContext): boolean {\n\n    const requiredRoles = this.reflector.getAllAndOverride(ROLES_KEY, [\n      context.getHandler(),\n      context.getClass(),\n    ]);\n    if (!requiredRoles) {\n      return true;\n    }\n    const { user } = context.switchToHttp().getRequest();\n    return requiredRoles.some((role) => user.roles?.includes(role));\n  }\n}\n\n\n        \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Subject.html":{"url":"entities/Subject.html","title":"entity - Subject","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Subject\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/subjects/entities/subject.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                level1Id\n                            \n                            \n                                level2Id\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subjects/entities/subject.entity.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        level1Id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subjects/entities/subject.entity.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        level2Id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subjects/entities/subject.entity.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subjects/entities/subject.entity.ts:9\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Entity,PrimaryGeneratedColumn,Column,BaseEntity} from \"typeorm\";\n\n@Entity('subject')\nexport class Subject extends BaseEntity{\n    @PrimaryGeneratedColumn()\n    id:number;\n\n    @Column({default:null})\n    name:string;\n\n    @Column({default:null})\n    level1Id:string;\n\n    @Column({default:null})\n    level2Id:string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/SubjectsController.html":{"url":"controllers/SubjectsController.html","title":"controller - SubjectsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  SubjectsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/subjects/subjects.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                subjects\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(request: Request, createSubjectDto: CreateSubjectDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@Post()\n                \n            \n\n            \n                \n                    Defined in src/subjects/subjects.controller.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    createSubjectDto\n                                    \n                                                CreateSubjectDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(request: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@Get()\n                \n            \n\n            \n                \n                    Defined in src/subjects/subjects.controller.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(request: Request, id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/subjects/subjects.controller.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(request: Request, id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/subjects/subjects.controller.ts:85\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(request: Request, id: string, updateSubjectDto: UpdateSubjectDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@Patch(':id')\n                \n            \n\n            \n                \n                    Defined in src/subjects/subjects.controller.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateSubjectDto\n                                    \n                                                UpdateSubjectDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete,Req,UnauthorizedException,UseGuards} from '@nestjs/common';\nimport { SubjectsService } from './subjects.service';\nimport { CreateSubjectDto } from './dto/create-subject.dto';\nimport { UpdateSubjectDto } from './dto/update-subject.dto';\nimport {Request} from 'express';\nimport { JwtService } from '@nestjs/jwt';\nimport { JwtAuthGuard } from '../auth/guards/jwt-auth.guard';\n\n\n@Controller('subjects')\nexport class SubjectsController {\n  constructor(private readonly subjectsService: SubjectsService,\n    private jwtService: JwtService\n    ) {}\n\n    @UseGuards(JwtAuthGuard)\n  @Post()\n  async create(@Req() request: Request,@Body() createSubjectDto: CreateSubjectDto) {\n    const bearer = request.headers['authorization'];\n      \n    const token =bearer.split(' ')[1];\n    const data = await this.jwtService.verify(token);\n    if(data.role ==\"admin\"){\n  \n    return this.subjectsService.create(createSubjectDto);\n  }\n  else{\n    return {\n      message:\"you are not allowed to access this\"\n    }\n  }\n    \n  }\n\n  @UseGuards(JwtAuthGuard)\n  @Get()\n  async findAll(@Req() request: Request) {\n\n  \n  \n    return this.subjectsService.findAll();\n  \n  }\n\n  @UseGuards(JwtAuthGuard)\n  @Get(':id')\n  async findOne(@Req() request: Request,@Param('id') id: string) {\n    const bearer = request.headers['authorization'];\n      \n    const token =bearer.split(' ')[1];\n    const data = await this.jwtService.verify(token);\n    if(data.role ==\"admin\"){\n   \n    return this.subjectsService.findOne(+id);\n  }\n  else{\n    return {\n      message:\"you are not allowed to access this\"\n    }\n  }\n    \n  }\n\n  @UseGuards(JwtAuthGuard)\n  @Patch(':id')\n  async update(@Req() request: Request,@Param('id') id: string, @Body() updateSubjectDto: UpdateSubjectDto) {\n    const bearer = request.headers['authorization'];\n      \n    const token =bearer.split(' ')[1];\n    const data = await this.jwtService.verify(token);\n    if(data.role ==\"admin\"){\n   \n    return this.subjectsService.update(+id, updateSubjectDto);\n  }\n  else{\n    return {\n      message:\"you are not allowed to access this\"\n    }\n  }\n    \n  }\n\n  @UseGuards(JwtAuthGuard)\n  @Delete(':id')\n  async remove(@Req() request: Request,@Param('id') id: string) {\n    const bearer = request.headers['authorization'];\n      \n    const token =bearer.split(' ')[1];\n    const data = await this.jwtService.verify(token);\n    if(data.role ==\"admin\"){\n      return this.subjectsService.remove(+id);\n    }\n    else{\n      return {\n        message:\"you are not allowed to access this\"\n      }\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SubjectsModule.html":{"url":"modules/SubjectsModule.html","title":"module - SubjectsModule","body":"\n                   \n\n\n\n\n    Modules\n    SubjectsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_SubjectsModule\n\n\n\ncluster_SubjectsModule_providers\n\n\n\n\nSubjectsService\n\nSubjectsService\n\n\n\nSubjectsModule\n\nSubjectsModule\n\nSubjectsModule -->\n\nSubjectsService->SubjectsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/subjects/subjects.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            SubjectsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            SubjectsController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { SubjectsService } from './subjects.service';\nimport { SubjectsController } from './subjects.controller';\nimport { JwtModule } from '@nestjs/jwt';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport{Subject} from './entities/subject.entity'\n\n@Module({\n  imports:[TypeOrmModule.forFeature([Subject]),\n  JwtModule.register({\n    secret:'jwtsecret',\n    signOptions:{expiresIn:'1d'},\n}),\n],\n  controllers: [SubjectsController],\n  providers: [SubjectsService]\n})\nexport class SubjectsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SubjectsService.html":{"url":"injectables/SubjectsService.html","title":"injectable - SubjectsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SubjectsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/subjects/subjects.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createSubjectDto: CreateSubjectDto)\n                \n            \n\n\n            \n                \n                    Defined in src/subjects/subjects.service.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createSubjectDto\n                                    \n                                                CreateSubjectDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n\n            \n                \n                    Defined in src/subjects/subjects.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/subjects/subjects.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/subjects/subjects.service.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: number, updateSubjectDto: UpdateSubjectDto)\n                \n            \n\n\n            \n                \n                    Defined in src/subjects/subjects.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateSubjectDto\n                                    \n                                                UpdateSubjectDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CreateSubjectDto } from './dto/create-subject.dto';\nimport { UpdateSubjectDto } from './dto/update-subject.dto';\nimport{Subject} from './entities/subject.entity'\n\n@Injectable()\nexport class SubjectsService {\n  \n  async create(createSubjectDto: CreateSubjectDto) {\n\n    const createSubject= new Subject();\n    createSubject.name = createSubjectDto.name;\n    createSubject.level1Id = createSubjectDto.level1Id;\n    createSubject.level2Id =  createSubjectDto.level2Id;\n    return await createSubject.save();\n\n  }\n\n  async findAll() {\n    return await Subject.find();\n  }\n\n  async findOne(id: number) {\n    return await Subject.findOne(id);\n  }\n\n  \n  async update(id: number, updateSubjectDto: UpdateSubjectDto) {\n\n    return await Subject.update(id, updateSubjectDto);\n  }\n\n  async remove(id: number) {\n    return await Subject.delete(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/TeacherSubject.html":{"url":"entities/TeacherSubject.html","title":"entity - TeacherSubject","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  TeacherSubject\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/teacher-subject/entities/teacher-subject.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                level1Id\n                            \n                            \n                                level2_id\n                            \n                            \n                                subject_id\n                            \n                            \n                                teacher_id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/teacher-subject/entities/teacher-subject.entity.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        level1Id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/teacher-subject/entities/teacher-subject.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        level2_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/teacher-subject/entities/teacher-subject.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subject_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/teacher-subject/entities/teacher-subject.entity.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        teacher_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/teacher-subject/entities/teacher-subject.entity.ts:12\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Entity,PrimaryGeneratedColumn,Column,BaseEntity,OneToMany} from \"typeorm\";\nimport {Level1} from '../../level1/entities/level1.entity';\nimport { Level2 } from \"src/level2/entities/level2.entity\";\nimport {Subject} from '../../subjects/entities/subject.entity'\n\n@Entity('teacher_subject')\nexport class TeacherSubject extends BaseEntity {\n    @PrimaryGeneratedColumn()\n    id:number;\n\n    @Column({default:null})\n    teacher_id:number;\n\n    // @OneToMany(() => Subject, subject => subject.id)\n    @Column({default:null})\n    subject_id:number;\n     \n\n    // @OneToMany(() => Level1, level1 => level1.id)\n    @Column({default:null})\n    level1Id:number;\n\n    // @OneToMany(() => Level2, level2 => level2.id)\n    @Column({default:null})\n    level2_id:number;\n\n}\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/TeacherSubjectController.html":{"url":"controllers/TeacherSubjectController.html","title":"controller - TeacherSubjectController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  TeacherSubjectController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/teacher-subject/teacher-subject.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                teacher-subject\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createTeacherSubjectDto: CreateTeacherSubjectDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/teacher-subject/teacher-subject.controller.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createTeacherSubjectDto\n                                    \n                                                CreateTeacherSubjectDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/teacher-subject/teacher-subject.controller.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/teacher-subject/teacher-subject.controller.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/teacher-subject/teacher-subject.controller.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, updateTeacherSubjectDto: UpdateTeacherSubjectDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n            \n                \n                    Defined in src/teacher-subject/teacher-subject.controller.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateTeacherSubjectDto\n                                    \n                                                UpdateTeacherSubjectDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete } from '@nestjs/common';\nimport { TeacherSubjectService } from './teacher-subject.service';\nimport { CreateTeacherSubjectDto } from './dto/create-teacher-subject.dto';\nimport { UpdateTeacherSubjectDto } from './dto/update-teacher-subject.dto';\n\n@Controller('teacher-subject')\nexport class TeacherSubjectController {\n  constructor(private readonly teacherSubjectService: TeacherSubjectService) {}\n\n  @Post()\n  create(@Body() createTeacherSubjectDto: CreateTeacherSubjectDto) {\n    return this.teacherSubjectService.create(createTeacherSubjectDto);\n  }\n\n  @Get()\n  findAll() {\n    return this.teacherSubjectService.findAll();\n  }\n\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.teacherSubjectService.findOne(+id);\n  }\n\n  @Patch(':id')\n  update(@Param('id') id: string, @Body() updateTeacherSubjectDto: UpdateTeacherSubjectDto) {\n    return this.teacherSubjectService.update(+id, updateTeacherSubjectDto);\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return this.teacherSubjectService.remove(+id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TeacherSubjectModule.html":{"url":"modules/TeacherSubjectModule.html","title":"module - TeacherSubjectModule","body":"\n                   \n\n\n\n\n    Modules\n    TeacherSubjectModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_TeacherSubjectModule\n\n\n\ncluster_TeacherSubjectModule_providers\n\n\n\n\nTeacherSubjectService\n\nTeacherSubjectService\n\n\n\nTeacherSubjectModule\n\nTeacherSubjectModule\n\nTeacherSubjectModule -->\n\nTeacherSubjectService->TeacherSubjectModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/teacher-subject/teacher-subject.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            TeacherSubjectService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            TeacherSubjectController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TeacherSubjectService } from './teacher-subject.service';\nimport { TeacherSubjectController } from './teacher-subject.controller';\n\n@Module({\n  controllers: [TeacherSubjectController],\n  providers: [TeacherSubjectService]\n})\nexport class TeacherSubjectModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TeacherSubjectService.html":{"url":"injectables/TeacherSubjectService.html","title":"injectable - TeacherSubjectService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TeacherSubjectService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/teacher-subject/teacher-subject.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createTeacherSubjectDto: CreateTeacherSubjectDto)\n                \n            \n\n\n            \n                \n                    Defined in src/teacher-subject/teacher-subject.service.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createTeacherSubjectDto\n                                    \n                                                CreateTeacherSubjectDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n            \n                \n                    Defined in src/teacher-subject/teacher-subject.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/teacher-subject/teacher-subject.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/teacher-subject/teacher-subject.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: number, updateTeacherSubjectDto: UpdateTeacherSubjectDto)\n                \n            \n\n\n            \n                \n                    Defined in src/teacher-subject/teacher-subject.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateTeacherSubjectDto\n                                    \n                                                UpdateTeacherSubjectDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CreateTeacherSubjectDto } from './dto/create-teacher-subject.dto';\nimport { UpdateTeacherSubjectDto } from './dto/update-teacher-subject.dto';\n\n@Injectable()\nexport class TeacherSubjectService {\n  create(createTeacherSubjectDto: CreateTeacherSubjectDto) {\n    return 'This action adds a new teacherSubject';\n  }\n\n  findAll() {\n    return `This action returns all teacherSubject`;\n  }\n\n  findOne(id: number) {\n    return `This action returns a #${id} teacherSubject`;\n  }\n\n  update(id: number, updateTeacherSubjectDto: UpdateTeacherSubjectDto) {\n    return `This action updates a #${id} teacherSubject`;\n  }\n\n  remove(id: number) {\n    return `This action removes a #${id} teacherSubject`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Term.html":{"url":"entities/Term.html","title":"entity - Term","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Term\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/terms/entities/term.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                level1Id\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/terms/entities/term.entity.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        level1Id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/terms/entities/term.entity.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/terms/entities/term.entity.ts:12\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        \nimport { Entity,PrimaryGeneratedColumn,Column,BaseEntity,OneToMany} from \"typeorm\";\nimport {Level1} from '../../level1/entities/level1.entity';\n\n\n@Entity('term')\nexport class Term  extends BaseEntity {\n    @PrimaryGeneratedColumn()\n    id:number;\n\n    @Column({default:null})\n    name:string;\n    \n    @Column({default:null})\n    level1Id:string;\n \n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/TermsController.html":{"url":"controllers/TermsController.html","title":"controller - TermsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  TermsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/terms/terms.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                terms\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(request: Request, createTermDto: CreateTermDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@Post()\n                \n            \n\n            \n                \n                    Defined in src/terms/terms.controller.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    createTermDto\n                                    \n                                                CreateTermDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(request: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@Get()\n                \n            \n\n            \n                \n                    Defined in src/terms/terms.controller.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(request: Request, id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/terms/terms.controller.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(request: Request, id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/terms/terms.controller.ts:79\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(request: Request, id: string, updateTermDto: UpdateTermDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@Patch(':id')\n                \n            \n\n            \n                \n                    Defined in src/terms/terms.controller.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateTermDto\n                                    \n                                                UpdateTermDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete, Req, UseGuards } from '@nestjs/common';\nimport { TermsService } from './terms.service';\nimport { CreateTermDto } from './dto/create-term.dto';\nimport { UpdateTermDto } from './dto/update-term.dto';\nimport { Request } from 'express';\nimport { JwtService } from '@nestjs/jwt';\nimport { JwtAuthGuard } from '../auth/guards/jwt-auth.guard'\n\n@Controller('terms')\nexport class TermsController {\n  constructor(private readonly termsService: TermsService,\n    private jwtService: JwtService\n  ) { }\n\n\n  @UseGuards(JwtAuthGuard)\n  @Post()\n  async create(@Req() request: Request, @Body() createTermDto: CreateTermDto) {\n    const bearer = request.headers['authorization'];\n\n    const token = bearer.split(' ')[1];\n    const data = await this.jwtService.verify(token);\n    if (data.role == \"admin\") {\n      return this.termsService.create(createTermDto);\n    }\n    else {\n      return {\n        message: \"you are not allowed to access this\"\n      }\n    }\n  }\n\n\n  @UseGuards(JwtAuthGuard)\n  @Get()\n  async findAll(@Req() request: Request) {\n\n    return this.termsService.findAll();\n\n  }\n\n  @UseGuards(JwtAuthGuard)\n  @Get(':id')\n  async findOne(@Req() request: Request, @Param('id') id: string) {\n    const bearer = request.headers['authorization'];\n\n    const token = bearer.split(' ')[1];\n    const data = await this.jwtService.verify(token);\n    if (data.role == \"admin\") {\n      return this.termsService.findOne(+id);\n    }\n    else {\n      return {\n        message: \"you are not allowed to access this\"\n      }\n    }\n  }\n\n  @UseGuards(JwtAuthGuard)\n  @Patch(':id')\n  async update(@Req() request: Request, @Param('id') id: string, @Body() updateTermDto: UpdateTermDto) {\n    const bearer = request.headers['authorization'];\n\n    const token = bearer.split(' ')[1];\n    const data = await this.jwtService.verify(token);\n    if (data.role == \"admin\") {\n      return this.termsService.update(+id, updateTermDto);\n    }\n    else {\n      return {\n        message: \"you are not allowed to access this\"\n      }\n    }\n\n  }\n\n  @UseGuards(JwtAuthGuard)\n  @Delete(':id')\n  async remove(@Req() request: Request, @Param('id') id: string) {\n    const bearer = request.headers['authorization'];\n\n    const token = bearer.split(' ')[1];\n    const data = await this.jwtService.verify(token);\n    if (data.role == \"admin\") {\n\n      return this.termsService.remove(+id);\n    }\n    else {\n      return {\n        message: \"you are not allowed to access this\"\n      }\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TermsModule.html":{"url":"modules/TermsModule.html","title":"module - TermsModule","body":"\n                   \n\n\n\n\n    Modules\n    TermsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_TermsModule\n\n\n\ncluster_TermsModule_providers\n\n\n\n\nTermsService\n\nTermsService\n\n\n\nTermsModule\n\nTermsModule\n\nTermsModule -->\n\nTermsService->TermsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/terms/terms.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            TermsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            TermsController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TermsService } from './terms.service';\nimport { TermsController } from './terms.controller';\nimport { JwtModule } from '@nestjs/jwt';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport{Term } from './entities/term.entity'\n\n@Module({\n  imports:[TypeOrmModule.forFeature([Term]),\n  JwtModule.register({\n    secret:'jwtsecret',\n    signOptions:{expiresIn:'1d'},\n}),\n],\n  controllers: [TermsController],\n  providers: [TermsService]\n})\nexport class TermsModule {}\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TermsService.html":{"url":"injectables/TermsService.html","title":"injectable - TermsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TermsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/terms/terms.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createTermDto: CreateTermDto)\n                \n            \n\n\n            \n                \n                    Defined in src/terms/terms.service.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createTermDto\n                                    \n                                                CreateTermDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n\n            \n                \n                    Defined in src/terms/terms.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/terms/terms.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/terms/terms.service.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: number, updateTermDto: UpdateTermDto)\n                \n            \n\n\n            \n                \n                    Defined in src/terms/terms.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateTermDto\n                                    \n                                                UpdateTermDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CreateTermDto } from './dto/create-term.dto';\nimport { UpdateTermDto } from './dto/update-term.dto';\nimport { Term } from '../terms/entities/term.entity'\n\n@Injectable()\nexport class TermsService {\n\n  async create(createTermDto: CreateTermDto) {\n\n    const createTerm = new Term();\n    createTerm.name = createTermDto.name;\n    createTerm.level1Id = createTermDto.level1Id;\n    return await createTerm.save();\n\n  }\n\n  async findAll() {\n    return await Term.find();\n  }\n\n  async findOne(id: number) {\n    return await Term.findOne(id);\n  }\n\n  async update(id: number, updateTermDto: UpdateTermDto) {\n\n    return await Term.update(id, updateTermDto);\n  }\n\n  async remove(id: number) {\n    return await Term.delete(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateCombinationDto.html":{"url":"classes/UpdateCombinationDto.html","title":"class - UpdateCombinationDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateCombinationDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/combinations/dto/update-combination.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateCombinationDto } from './create-combination.dto';\n\nexport class UpdateCombinationDto extends PartialType(CreateCombinationDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateLevel1Dto.html":{"url":"classes/UpdateLevel1Dto.html","title":"class - UpdateLevel1Dto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateLevel1Dto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/level1/dto/update-level1.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateLevel1Dto } from './create-level1.dto';\n\nexport class UpdateLevel1Dto extends PartialType(CreateLevel1Dto) {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateLevel2Dto.html":{"url":"classes/UpdateLevel2Dto.html","title":"class - UpdateLevel2Dto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateLevel2Dto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/level2/dto/update-level2.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                level1Id\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        level1Id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsInt()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/level2/dto/update-level2.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/level2/dto/update-level2.dto.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateLevel2Dto } from './create-level2.dto';\nimport {IsNotEmpty,IsString,IsInt,IsDate} from 'class-validator';\n\nexport class UpdateLevel2Dto extends PartialType(CreateLevel2Dto) {\n    @IsNotEmpty()\n    @IsString()\n    name:string;\n\n\n    @IsNotEmpty()\n    @IsInt()\n    level1Id:string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateSubjectDto.html":{"url":"classes/UpdateSubjectDto.html","title":"class - UpdateSubjectDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateSubjectDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/subjects/dto/update-subject.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateSubjectDto } from './create-subject.dto';\n\nexport class UpdateSubjectDto extends PartialType(CreateSubjectDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateTeacherSubjectDto.html":{"url":"classes/UpdateTeacherSubjectDto.html","title":"class - UpdateTeacherSubjectDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateTeacherSubjectDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/teacher-subject/dto/update-teacher-subject.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateTeacherSubjectDto } from './create-teacher-subject.dto';\n\nexport class UpdateTeacherSubjectDto extends PartialType(CreateTeacherSubjectDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateTermDto.html":{"url":"classes/UpdateTermDto.html","title":"class - UpdateTermDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateTermDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/terms/dto/update-term.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                level1Id\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        level1Id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsInt()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/terms/dto/update-term.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/terms/dto/update-term.dto.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateTermDto } from './create-term.dto';\nimport {IsNotEmpty,IsString,IsInt,IsDate} from 'class-validator';\n\nexport class UpdateTermDto extends PartialType(CreateTermDto) {\n    @IsNotEmpty()\n    @IsString()\n    name:string;\n\n\n    @IsNotEmpty()\n    @IsInt()\n    level1Id:string;\n\n    // @IsString()\n    // updated: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateWorkspaceDto.html":{"url":"classes/UpdateWorkspaceDto.html","title":"class - UpdateWorkspaceDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateWorkspaceDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/workspaces/dto/update-workspace.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateWorkspaceDto } from './create-workspace.dto';\n\nexport class UpdateWorkspaceDto extends PartialType(CreateWorkspaceDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateWorkspaceQuizQuestionDto.html":{"url":"classes/UpdateWorkspaceQuizQuestionDto.html","title":"class - UpdateWorkspaceQuizQuestionDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateWorkspaceQuizQuestionDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/workspace-quiz-questions/dto/update-workspace-quiz-question.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateWorkspaceQuizQuestionDto } from './create-workspace-quiz-question.dto';\n\nexport class UpdateWorkspaceQuizQuestionDto extends PartialType(CreateWorkspaceQuizQuestionDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateWorkspaceQuizQuestionOptionDto.html":{"url":"classes/UpdateWorkspaceQuizQuestionOptionDto.html","title":"class - UpdateWorkspaceQuizQuestionOptionDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateWorkspaceQuizQuestionOptionDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/workspace-quiz-question-options/dto/update-workspace-quiz-question-option.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateWorkspaceQuizQuestionOptionDto } from './create-workspace-quiz-question-option.dto';\n\nexport class UpdateWorkspaceQuizQuestionOptionDto extends PartialType(CreateWorkspaceQuizQuestionOptionDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateWorkspaceStudentResultDto.html":{"url":"classes/UpdateWorkspaceStudentResultDto.html","title":"class - UpdateWorkspaceStudentResultDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateWorkspaceStudentResultDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/workspace-student-results/dto/update-workspace-student-result.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateWorkspaceStudentResultDto } from './create-workspace-student-result.dto';\n\nexport class UpdateWorkspaceStudentResultDto extends PartialType(CreateWorkspaceStudentResultDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UserController.html":{"url":"controllers/UserController.html","title":"controller - UserController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UserController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/controllers/user.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                user\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                login\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createUserDto: createUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('Signup')\n                \n            \n\n            \n                \n                    Defined in src/controllers/user.controller.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createUserDto\n                                    \n                                                createUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(request: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@Get()\n                \n            \n\n            \n                \n                    Defined in src/controllers/user.controller.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n            \n                \nlogin(loginUserDto: loginUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('login')@HttpCode(200)\n                \n            \n\n            \n                \n                    Defined in src/controllers/user.controller.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    loginUserDto\n                                    \n                                                loginUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Post, Body, Get, HttpCode, Req, UseGuards, Request } from '@nestjs/common';\nimport { UserService } from '../services/user.service';\nimport { createUserDto } from '../user/modles/dto/create.dto';\nimport { loginUserDto } from 'src/user/modles/dto/login.dto';\nimport { JwtService } from '@nestjs/jwt';\nimport { JwtAuthGuard } from '../auth/guards/jwt-auth.guard'\n\n\n\n\n@Controller('user')\nexport class UserController {\n    constructor(private UserService: UserService,\n        private jwtService: JwtService\n    ) { }\n    @Post('Signup')\n    create(@Body() createUserDto: createUserDto) {\n        return this.UserService.createUser(createUserDto);\n    }\n\n    @Post('login')\n    @HttpCode(200)\n    login(@Body() loginUserDto: loginUserDto) {\n\n        return this.UserService.loginuser(loginUserDto)\n\n\n    }\n\n\n\n\n\n    @UseGuards(JwtAuthGuard)\n    @Get()\n    async findAll(@Req() request: Request) {\n        const bearer = request.headers['authorization'];\n\n        const token = bearer.split(' ')[1];\n        const data = await this.jwtService.verify(token);\n        if (data.role == 'admin') {\n        return this.UserService.findAllUsers();\n    } else {\n        return {\n          message: \"you are not allowed to access this\"\n        }\n      }\n    }\n\n\n\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserModule.html":{"url":"modules/UserModule.html","title":"module - UserModule","body":"\n                   \n\n\n\n\n    Modules\n    UserModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_UserModule\n\n\n\ncluster_UserModule_providers\n\n\n\ncluster_UserModule_imports\n\n\n\ncluster_UserModule_exports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nAuthModule->UserModule\n\n\n\n\n\nUserService \n\nUserService \n\nUserService  -->\n\nUserModule->UserService \n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/user/user.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UserController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UserService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport {userEntity} from './modles/user.entity'\nimport { UserService } from '../services/user.service';\nimport { UserController } from '../controllers/user.controller';\nimport { AuthModule } from 'src/auth/auth.module';\nimport { JwtModule } from '@nestjs/jwt';\n\n\n\n\n@Module({\nimports:[TypeOrmModule.forFeature([userEntity]),\nJwtModule.registerAsync({\n    useFactory :()=>({\n    secret:'jwtsecret',\n    signOptions:{expiresIn:'1d'},\n    })\n\n}),\nAuthModule,\n],\nproviders: [UserService],\ncontrollers: [UserController],\nexports:[UserService]\n})\nexport class UserModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/user.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createUser\n                            \n                            \n                                    Async\n                                findAllUsers\n                            \n                            \n                                    Async\n                                loginuser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(AuthService: AuthService, jwtService: JwtService)\n                    \n                \n                        \n                            \n                                Defined in src/services/user.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        AuthService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    createUser(createUserDto: createUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/services/user.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createUserDto\n                                    \n                                                createUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAllUsers\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllUsers()\n                \n            \n\n\n            \n                \n                    Defined in src/services/user.service.ts:95\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        loginuser\n                        \n                    \n                \n            \n            \n                \n                    \n                    loginuser(loginUserDto: loginUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/services/user.service.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    loginUserDto\n                                    \n                                                loginUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpException, HttpStatus, Injectable, Body, Options } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { userEntity } from '../user/modles/user.entity'\nimport { from, Observable, switchMap, map } from 'rxjs';\nimport { userInterface } from '../user/modles/user.interface';\nimport { createUserDto } from '../user/modles/dto/create.dto'\nimport { AuthService } from '../services/auth/auth.service';\nimport { JwtService } from '@nestjs/jwt';\n\nimport { loginUserDto } from 'src/user/modles/dto/login.dto';\nconst bcrypt = require('bcrypt');\n\n\n\n@Injectable()\nexport class UserService {\n    constructor(\n        private AuthService: AuthService,\n        private jwtService: JwtService,\n    ) { }\n    async createUser(createUserDto: createUserDto) {\n\n        const userEmail = await this.AuthService.mailExist(createUserDto.email);\n        const usernameExist = await this.AuthService.usernameExist(createUserDto.username);\n        if (userEmail) {\n            return {\n                message: \"email already exist\"\n            };\n\n        }\n        if (usernameExist) {\n            return {\n                message: \"username already taken\"\n            };\n\n        } else {\n            const hashed = await bcrypt.hash(createUserDto.password, 12);\n            const createUser = new userEntity();\n            createUser.names = createUserDto.names;\n            createUser.email = createUserDto.email;\n            createUser.username = createUserDto.username;\n            createUser.password = hashed;\n            createUser.save();\n            const jwt = this.jwtService.sign({ id: createUser.id, email: createUser.email, role: createUser.role });\n            return {\n\n                message: \"signup success\",\n                // token: jwt\n            }\n\n        }\n    }\n\n    async loginuser(loginUserDto: loginUserDto) {\n\n        const user = await this.AuthService.findUserByEmail(loginUserDto.email);\n        if (user[0]) {\n            const valid = await this.AuthService.comparePassword(loginUserDto.password, user[0].password);\n            if (valid) {\n                const jwt = this.jwtService.sign({ id: user[0].id, email: user[0].email, role: user[0].role });\n                return {\n\n                    message: \"login success\",\n                    token: jwt\n                }\n\n            } else {\n                return {\n                    message: \"invalid credentials\"\n                }\n            }\n\n        }\n        else {\n            return {\n                message: \"invalid credentials\"\n            }\n        }\n\n\n\n\n\n\n\n\n\n\n\n\n    }\n\n\n    async findAllUsers() {\n\n        return await userEntity.find();\n\n    }\n\n\n\n\n\n\n\n\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Workspace.html":{"url":"classes/Workspace.html","title":"class - Workspace","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Workspace\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/workspaces/entities/workspace.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/workspaces/entities/workspace.entity.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/workspaces/entities/workspace.entity.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity,PrimaryGeneratedColumn,Column,BaseEntity,OneToMany,JoinTable} from \"typeorm\";\nexport class Workspace {\n    @PrimaryGeneratedColumn()\n    id:number;\n\n    @Column({default:null})\n    name:string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/WorkspaceQuizQuestion.html":{"url":"classes/WorkspaceQuizQuestion.html","title":"class - WorkspaceQuizQuestion","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  WorkspaceQuizQuestion\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/workspace-quiz-questions/entities/workspace-quiz-question.entity.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class WorkspaceQuizQuestion {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/WorkspaceQuizQuestionOption.html":{"url":"classes/WorkspaceQuizQuestionOption.html","title":"class - WorkspaceQuizQuestionOption","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  WorkspaceQuizQuestionOption\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/workspace-quiz-question-options/entities/workspace-quiz-question-option.entity.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class WorkspaceQuizQuestionOption {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/WorkspaceQuizQuestionOptionsController.html":{"url":"controllers/WorkspaceQuizQuestionOptionsController.html","title":"controller - WorkspaceQuizQuestionOptionsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  WorkspaceQuizQuestionOptionsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/workspace-quiz-question-options/workspace-quiz-question-options.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                workspace-quiz-question-options\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createWorkspaceQuizQuestionOptionDto: CreateWorkspaceQuizQuestionOptionDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/workspace-quiz-question-options/workspace-quiz-question-options.controller.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createWorkspaceQuizQuestionOptionDto\n                                    \n                                                CreateWorkspaceQuizQuestionOptionDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/workspace-quiz-question-options/workspace-quiz-question-options.controller.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/workspace-quiz-question-options/workspace-quiz-question-options.controller.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/workspace-quiz-question-options/workspace-quiz-question-options.controller.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, updateWorkspaceQuizQuestionOptionDto: UpdateWorkspaceQuizQuestionOptionDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n            \n                \n                    Defined in src/workspace-quiz-question-options/workspace-quiz-question-options.controller.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateWorkspaceQuizQuestionOptionDto\n                                    \n                                                UpdateWorkspaceQuizQuestionOptionDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete } from '@nestjs/common';\nimport { WorkspaceQuizQuestionOptionsService } from './workspace-quiz-question-options.service';\nimport { CreateWorkspaceQuizQuestionOptionDto } from './dto/create-workspace-quiz-question-option.dto';\nimport { UpdateWorkspaceQuizQuestionOptionDto } from './dto/update-workspace-quiz-question-option.dto';\n\n@Controller('workspace-quiz-question-options')\nexport class WorkspaceQuizQuestionOptionsController {\n  constructor(private readonly workspaceQuizQuestionOptionsService: WorkspaceQuizQuestionOptionsService) {}\n\n  @Post()\n  create(@Body() createWorkspaceQuizQuestionOptionDto: CreateWorkspaceQuizQuestionOptionDto) {\n    return this.workspaceQuizQuestionOptionsService.create(createWorkspaceQuizQuestionOptionDto);\n  }\n\n  @Get()\n  findAll() {\n    return this.workspaceQuizQuestionOptionsService.findAll();\n  }\n\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.workspaceQuizQuestionOptionsService.findOne(+id);\n  }\n\n  @Patch(':id')\n  update(@Param('id') id: string, @Body() updateWorkspaceQuizQuestionOptionDto: UpdateWorkspaceQuizQuestionOptionDto) {\n    return this.workspaceQuizQuestionOptionsService.update(+id, updateWorkspaceQuizQuestionOptionDto);\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return this.workspaceQuizQuestionOptionsService.remove(+id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/WorkspaceQuizQuestionOptionsModule.html":{"url":"modules/WorkspaceQuizQuestionOptionsModule.html","title":"module - WorkspaceQuizQuestionOptionsModule","body":"\n                   \n\n\n\n\n    Modules\n    WorkspaceQuizQuestionOptionsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_WorkspaceQuizQuestionOptionsModule\n\n\n\ncluster_WorkspaceQuizQuestionOptionsModule_providers\n\n\n\n\nWorkspaceQuizQuestionOptionsService\n\nWorkspaceQuizQuestionOptionsService\n\n\n\nWorkspaceQuizQuestionOptionsModule\n\nWorkspaceQuizQuestionOptionsModule\n\nWorkspaceQuizQuestionOptionsModule -->\n\nWorkspaceQuizQuestionOptionsService->WorkspaceQuizQuestionOptionsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/workspace-quiz-question-options/workspace-quiz-question-options.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            WorkspaceQuizQuestionOptionsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            WorkspaceQuizQuestionOptionsController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { WorkspaceQuizQuestionOptionsService } from './workspace-quiz-question-options.service';\nimport { WorkspaceQuizQuestionOptionsController } from './workspace-quiz-question-options.controller';\n\n@Module({\n  controllers: [WorkspaceQuizQuestionOptionsController],\n  providers: [WorkspaceQuizQuestionOptionsService]\n})\nexport class WorkspaceQuizQuestionOptionsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/WorkspaceQuizQuestionOptionsService.html":{"url":"injectables/WorkspaceQuizQuestionOptionsService.html","title":"injectable - WorkspaceQuizQuestionOptionsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  WorkspaceQuizQuestionOptionsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/workspace-quiz-question-options/workspace-quiz-question-options.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createWorkspaceQuizQuestionOptionDto: CreateWorkspaceQuizQuestionOptionDto)\n                \n            \n\n\n            \n                \n                    Defined in src/workspace-quiz-question-options/workspace-quiz-question-options.service.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createWorkspaceQuizQuestionOptionDto\n                                    \n                                                CreateWorkspaceQuizQuestionOptionDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n            \n                \n                    Defined in src/workspace-quiz-question-options/workspace-quiz-question-options.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/workspace-quiz-question-options/workspace-quiz-question-options.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/workspace-quiz-question-options/workspace-quiz-question-options.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: number, updateWorkspaceQuizQuestionOptionDto: UpdateWorkspaceQuizQuestionOptionDto)\n                \n            \n\n\n            \n                \n                    Defined in src/workspace-quiz-question-options/workspace-quiz-question-options.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateWorkspaceQuizQuestionOptionDto\n                                    \n                                                UpdateWorkspaceQuizQuestionOptionDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CreateWorkspaceQuizQuestionOptionDto } from './dto/create-workspace-quiz-question-option.dto';\nimport { UpdateWorkspaceQuizQuestionOptionDto } from './dto/update-workspace-quiz-question-option.dto';\n\n@Injectable()\nexport class WorkspaceQuizQuestionOptionsService {\n  create(createWorkspaceQuizQuestionOptionDto: CreateWorkspaceQuizQuestionOptionDto) {\n    return 'This action adds a new workspaceQuizQuestionOption';\n  }\n\n  findAll() {\n    return `This action returns all workspaceQuizQuestionOptions`;\n  }\n\n  findOne(id: number) {\n    return `This action returns a #${id} workspaceQuizQuestionOption`;\n  }\n\n  update(id: number, updateWorkspaceQuizQuestionOptionDto: UpdateWorkspaceQuizQuestionOptionDto) {\n    return `This action updates a #${id} workspaceQuizQuestionOption`;\n  }\n\n  remove(id: number) {\n    return `This action removes a #${id} workspaceQuizQuestionOption`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/WorkspaceQuizQuestionsController.html":{"url":"controllers/WorkspaceQuizQuestionsController.html","title":"controller - WorkspaceQuizQuestionsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  WorkspaceQuizQuestionsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/workspace-quiz-questions/workspace-quiz-questions.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                workspace-quiz-questions\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createWorkspaceQuizQuestionDto: CreateWorkspaceQuizQuestionDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/workspace-quiz-questions/workspace-quiz-questions.controller.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createWorkspaceQuizQuestionDto\n                                    \n                                                CreateWorkspaceQuizQuestionDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/workspace-quiz-questions/workspace-quiz-questions.controller.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/workspace-quiz-questions/workspace-quiz-questions.controller.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/workspace-quiz-questions/workspace-quiz-questions.controller.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, updateWorkspaceQuizQuestionDto: UpdateWorkspaceQuizQuestionDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n            \n                \n                    Defined in src/workspace-quiz-questions/workspace-quiz-questions.controller.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateWorkspaceQuizQuestionDto\n                                    \n                                                UpdateWorkspaceQuizQuestionDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete } from '@nestjs/common';\nimport { WorkspaceQuizQuestionsService } from './workspace-quiz-questions.service';\nimport { CreateWorkspaceQuizQuestionDto } from './dto/create-workspace-quiz-question.dto';\nimport { UpdateWorkspaceQuizQuestionDto } from './dto/update-workspace-quiz-question.dto';\n\n@Controller('workspace-quiz-questions')\nexport class WorkspaceQuizQuestionsController {\n  constructor(private readonly workspaceQuizQuestionsService: WorkspaceQuizQuestionsService) {}\n\n  @Post()\n  create(@Body() createWorkspaceQuizQuestionDto: CreateWorkspaceQuizQuestionDto) {\n    return this.workspaceQuizQuestionsService.create(createWorkspaceQuizQuestionDto);\n  }\n\n  @Get()\n  findAll() {\n    return this.workspaceQuizQuestionsService.findAll();\n  }\n\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.workspaceQuizQuestionsService.findOne(+id);\n  }\n\n  @Patch(':id')\n  update(@Param('id') id: string, @Body() updateWorkspaceQuizQuestionDto: UpdateWorkspaceQuizQuestionDto) {\n    return this.workspaceQuizQuestionsService.update(+id, updateWorkspaceQuizQuestionDto);\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return this.workspaceQuizQuestionsService.remove(+id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/WorkspaceQuizQuestionsModule.html":{"url":"modules/WorkspaceQuizQuestionsModule.html","title":"module - WorkspaceQuizQuestionsModule","body":"\n                   \n\n\n\n\n    Modules\n    WorkspaceQuizQuestionsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_WorkspaceQuizQuestionsModule\n\n\n\ncluster_WorkspaceQuizQuestionsModule_providers\n\n\n\n\nWorkspaceQuizQuestionsService\n\nWorkspaceQuizQuestionsService\n\n\n\nWorkspaceQuizQuestionsModule\n\nWorkspaceQuizQuestionsModule\n\nWorkspaceQuizQuestionsModule -->\n\nWorkspaceQuizQuestionsService->WorkspaceQuizQuestionsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/workspace-quiz-questions/workspace-quiz-questions.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            WorkspaceQuizQuestionsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            WorkspaceQuizQuestionsController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { WorkspaceQuizQuestionsService } from './workspace-quiz-questions.service';\nimport { WorkspaceQuizQuestionsController } from './workspace-quiz-questions.controller';\n\n@Module({\n  controllers: [WorkspaceQuizQuestionsController],\n  providers: [WorkspaceQuizQuestionsService]\n})\nexport class WorkspaceQuizQuestionsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/WorkspaceQuizQuestionsService.html":{"url":"injectables/WorkspaceQuizQuestionsService.html","title":"injectable - WorkspaceQuizQuestionsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  WorkspaceQuizQuestionsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/workspace-quiz-questions/workspace-quiz-questions.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createWorkspaceQuizQuestionDto: CreateWorkspaceQuizQuestionDto)\n                \n            \n\n\n            \n                \n                    Defined in src/workspace-quiz-questions/workspace-quiz-questions.service.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createWorkspaceQuizQuestionDto\n                                    \n                                                CreateWorkspaceQuizQuestionDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n            \n                \n                    Defined in src/workspace-quiz-questions/workspace-quiz-questions.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/workspace-quiz-questions/workspace-quiz-questions.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/workspace-quiz-questions/workspace-quiz-questions.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: number, updateWorkspaceQuizQuestionDto: UpdateWorkspaceQuizQuestionDto)\n                \n            \n\n\n            \n                \n                    Defined in src/workspace-quiz-questions/workspace-quiz-questions.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateWorkspaceQuizQuestionDto\n                                    \n                                                UpdateWorkspaceQuizQuestionDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CreateWorkspaceQuizQuestionDto } from './dto/create-workspace-quiz-question.dto';\nimport { UpdateWorkspaceQuizQuestionDto } from './dto/update-workspace-quiz-question.dto';\n\n@Injectable()\nexport class WorkspaceQuizQuestionsService {\n  create(createWorkspaceQuizQuestionDto: CreateWorkspaceQuizQuestionDto) {\n    return 'This action adds a new workspaceQuizQuestion';\n  }\n\n  findAll() {\n    return `This action returns all workspaceQuizQuestions`;\n  }\n\n  findOne(id: number) {\n    return `This action returns a #${id} workspaceQuizQuestion`;\n  }\n\n  update(id: number, updateWorkspaceQuizQuestionDto: UpdateWorkspaceQuizQuestionDto) {\n    return `This action updates a #${id} workspaceQuizQuestion`;\n  }\n\n  remove(id: number) {\n    return `This action removes a #${id} workspaceQuizQuestion`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/WorkspaceStudentResult.html":{"url":"classes/WorkspaceStudentResult.html","title":"class - WorkspaceStudentResult","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  WorkspaceStudentResult\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/workspace-student-results/entities/workspace-student-result.entity.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class WorkspaceStudentResult {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/WorkspaceStudentResultsController.html":{"url":"controllers/WorkspaceStudentResultsController.html","title":"controller - WorkspaceStudentResultsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  WorkspaceStudentResultsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/workspace-student-results/workspace-student-results.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                workspace-student-results\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createWorkspaceStudentResultDto: CreateWorkspaceStudentResultDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/workspace-student-results/workspace-student-results.controller.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createWorkspaceStudentResultDto\n                                    \n                                                CreateWorkspaceStudentResultDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/workspace-student-results/workspace-student-results.controller.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/workspace-student-results/workspace-student-results.controller.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/workspace-student-results/workspace-student-results.controller.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, updateWorkspaceStudentResultDto: UpdateWorkspaceStudentResultDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n            \n                \n                    Defined in src/workspace-student-results/workspace-student-results.controller.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateWorkspaceStudentResultDto\n                                    \n                                                UpdateWorkspaceStudentResultDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete } from '@nestjs/common';\nimport { WorkspaceStudentResultsService } from './workspace-student-results.service';\nimport { CreateWorkspaceStudentResultDto } from './dto/create-workspace-student-result.dto';\nimport { UpdateWorkspaceStudentResultDto } from './dto/update-workspace-student-result.dto';\n\n@Controller('workspace-student-results')\nexport class WorkspaceStudentResultsController {\n  constructor(private readonly workspaceStudentResultsService: WorkspaceStudentResultsService) {}\n\n  @Post()\n  create(@Body() createWorkspaceStudentResultDto: CreateWorkspaceStudentResultDto) {\n    return this.workspaceStudentResultsService.create(createWorkspaceStudentResultDto);\n  }\n\n  @Get()\n  findAll() {\n    return this.workspaceStudentResultsService.findAll();\n  }\n\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.workspaceStudentResultsService.findOne(+id);\n  }\n\n  @Patch(':id')\n  update(@Param('id') id: string, @Body() updateWorkspaceStudentResultDto: UpdateWorkspaceStudentResultDto) {\n    return this.workspaceStudentResultsService.update(+id, updateWorkspaceStudentResultDto);\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return this.workspaceStudentResultsService.remove(+id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/WorkspaceStudentResultsModule.html":{"url":"modules/WorkspaceStudentResultsModule.html","title":"module - WorkspaceStudentResultsModule","body":"\n                   \n\n\n\n\n    Modules\n    WorkspaceStudentResultsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_WorkspaceStudentResultsModule\n\n\n\ncluster_WorkspaceStudentResultsModule_providers\n\n\n\n\nWorkspaceStudentResultsService\n\nWorkspaceStudentResultsService\n\n\n\nWorkspaceStudentResultsModule\n\nWorkspaceStudentResultsModule\n\nWorkspaceStudentResultsModule -->\n\nWorkspaceStudentResultsService->WorkspaceStudentResultsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/workspace-student-results/workspace-student-results.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            WorkspaceStudentResultsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            WorkspaceStudentResultsController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { WorkspaceStudentResultsService } from './workspace-student-results.service';\nimport { WorkspaceStudentResultsController } from './workspace-student-results.controller';\n\n@Module({\n  controllers: [WorkspaceStudentResultsController],\n  providers: [WorkspaceStudentResultsService]\n})\nexport class WorkspaceStudentResultsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/WorkspaceStudentResultsService.html":{"url":"injectables/WorkspaceStudentResultsService.html","title":"injectable - WorkspaceStudentResultsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  WorkspaceStudentResultsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/workspace-student-results/workspace-student-results.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createWorkspaceStudentResultDto: CreateWorkspaceStudentResultDto)\n                \n            \n\n\n            \n                \n                    Defined in src/workspace-student-results/workspace-student-results.service.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createWorkspaceStudentResultDto\n                                    \n                                                CreateWorkspaceStudentResultDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n            \n                \n                    Defined in src/workspace-student-results/workspace-student-results.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/workspace-student-results/workspace-student-results.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/workspace-student-results/workspace-student-results.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: number, updateWorkspaceStudentResultDto: UpdateWorkspaceStudentResultDto)\n                \n            \n\n\n            \n                \n                    Defined in src/workspace-student-results/workspace-student-results.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateWorkspaceStudentResultDto\n                                    \n                                                UpdateWorkspaceStudentResultDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CreateWorkspaceStudentResultDto } from './dto/create-workspace-student-result.dto';\nimport { UpdateWorkspaceStudentResultDto } from './dto/update-workspace-student-result.dto';\n\n@Injectable()\nexport class WorkspaceStudentResultsService {\n  create(createWorkspaceStudentResultDto: CreateWorkspaceStudentResultDto) {\n    return 'This action adds a new workspaceStudentResult';\n  }\n\n  findAll() {\n    return `This action returns all workspaceStudentResults`;\n  }\n\n  findOne(id: number) {\n    return `This action returns a #${id} workspaceStudentResult`;\n  }\n\n  update(id: number, updateWorkspaceStudentResultDto: UpdateWorkspaceStudentResultDto) {\n    return `This action updates a #${id} workspaceStudentResult`;\n  }\n\n  remove(id: number) {\n    return `This action removes a #${id} workspaceStudentResult`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/WorkspacesController.html":{"url":"controllers/WorkspacesController.html","title":"controller - WorkspacesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  WorkspacesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/workspaces/workspaces.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                workspaces\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createWorkspaceDto: CreateWorkspaceDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/workspaces/workspaces.controller.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createWorkspaceDto\n                                    \n                                                CreateWorkspaceDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/workspaces/workspaces.controller.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/workspaces/workspaces.controller.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/workspaces/workspaces.controller.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, updateWorkspaceDto: UpdateWorkspaceDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n            \n                \n                    Defined in src/workspaces/workspaces.controller.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateWorkspaceDto\n                                    \n                                                UpdateWorkspaceDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete } from '@nestjs/common';\nimport { WorkspacesService } from './workspaces.service';\nimport { CreateWorkspaceDto } from './dto/create-workspace.dto';\nimport { UpdateWorkspaceDto } from './dto/update-workspace.dto';\n\n@Controller('workspaces')\nexport class WorkspacesController {\n  constructor(private readonly workspacesService: WorkspacesService) {}\n\n  @Post()\n  create(@Body() createWorkspaceDto: CreateWorkspaceDto) {\n    return this.workspacesService.create(createWorkspaceDto);\n  }\n\n  @Get()\n  findAll() {\n    return this.workspacesService.findAll();\n  }\n\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.workspacesService.findOne(+id);\n  }\n\n  @Patch(':id')\n  update(@Param('id') id: string, @Body() updateWorkspaceDto: UpdateWorkspaceDto) {\n    return this.workspacesService.update(+id, updateWorkspaceDto);\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return this.workspacesService.remove(+id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/WorkspacesModule.html":{"url":"modules/WorkspacesModule.html","title":"module - WorkspacesModule","body":"\n                   \n\n\n\n\n    Modules\n    WorkspacesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_WorkspacesModule\n\n\n\ncluster_WorkspacesModule_providers\n\n\n\n\nWorkspacesService\n\nWorkspacesService\n\n\n\nWorkspacesModule\n\nWorkspacesModule\n\nWorkspacesModule -->\n\nWorkspacesService->WorkspacesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/workspaces/workspaces.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            WorkspacesService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            WorkspacesController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { WorkspacesService } from './workspaces.service';\nimport { WorkspacesController } from './workspaces.controller';\n\n@Module({\n  controllers: [WorkspacesController],\n  providers: [WorkspacesService]\n})\nexport class WorkspacesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/WorkspacesService.html":{"url":"injectables/WorkspacesService.html","title":"injectable - WorkspacesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  WorkspacesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/workspaces/workspaces.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createWorkspaceDto: CreateWorkspaceDto)\n                \n            \n\n\n            \n                \n                    Defined in src/workspaces/workspaces.service.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createWorkspaceDto\n                                    \n                                                CreateWorkspaceDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n            \n                \n                    Defined in src/workspaces/workspaces.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/workspaces/workspaces.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/workspaces/workspaces.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: number, updateWorkspaceDto: UpdateWorkspaceDto)\n                \n            \n\n\n            \n                \n                    Defined in src/workspaces/workspaces.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateWorkspaceDto\n                                    \n                                                UpdateWorkspaceDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CreateWorkspaceDto } from './dto/create-workspace.dto';\nimport { UpdateWorkspaceDto } from './dto/update-workspace.dto';\n\n@Injectable()\nexport class WorkspacesService {\n  create(createWorkspaceDto: CreateWorkspaceDto) {\n    return 'This action adds a new workspace';\n  }\n\n  findAll() {\n    return `This action returns all workspaces`;\n  }\n\n  findOne(id: number) {\n    return `This action returns a #${id} workspace`;\n  }\n\n  update(id: number, updateWorkspaceDto: UpdateWorkspaceDto) {\n    return `This action updates a #${id} workspace`;\n  }\n\n  remove(id: number) {\n    return `This action removes a #${id} workspace`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/decorators/roles.decorator.ts\n            \n            variable\n            Roles\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/decorators/roles.decorator.ts\n            \n            variable\n            ROLES_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/guards/jwt-auth.guard.ts\n            \n            injectable\n            JwtAuthGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/guards/local-auth.guard.ts\n            \n            injectable\n            LocalAuthGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/guards/roles.guard.ts\n            \n            guard\n            RolesGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/local.strategy.ts\n            \n            injectable\n            LocalStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/combinations/combinations.controller.ts\n            \n            controller\n            CombinationsController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/combinations/combinations.service.ts\n            \n            injectable\n            CombinationsService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/combinations/dto/create-combination.dto.ts\n            \n            class\n            CreateCombinationDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/combinations/dto/update-combination.dto.ts\n            \n            class\n            UpdateCombinationDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/combinations/entities/combination.entity.ts\n            \n            entity\n            Combination\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/controllers/user.controller.ts\n            \n            controller\n            UserController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/level1/dto/create-level1.dto.ts\n            \n            class\n            CreateLevel1Dto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/level1/dto/update-level1.dto.ts\n            \n            class\n            UpdateLevel1Dto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/level1/entities/level1.entity.ts\n            \n            entity\n            Level1\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/level1/level1.controller.ts\n            \n            controller\n            Level1Controller\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/level1/level1.service.ts\n            \n            injectable\n            Level1Service\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/level2/dto/create-level2.dto.ts\n            \n            class\n            CreateLevel2Dto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/level2/dto/update-level2.dto.ts\n            \n            class\n            UpdateLevel2Dto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/level2/entities/level2.entity.ts\n            \n            entity\n            Level2\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/level2/level2.controller.ts\n            \n            controller\n            Level2Controller\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/level2/level2.service.ts\n            \n            injectable\n            Level2Service\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/services/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/services/auth/auth.service.ts\n            \n            variable\n            bcrypt\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/services/user.service.ts\n            \n            injectable\n            UserService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/services/user.service.ts\n            \n            variable\n            bcrypt\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/subjects/dto/create-subject.dto.ts\n            \n            class\n            CreateSubjectDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/subjects/dto/update-subject.dto.ts\n            \n            class\n            UpdateSubjectDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/subjects/entities/subject.entity.ts\n            \n            entity\n            Subject\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/subjects/subjects.controller.ts\n            \n            controller\n            SubjectsController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/subjects/subjects.service.ts\n            \n            injectable\n            SubjectsService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/teacher-subject/dto/create-teacher-subject.dto.ts\n            \n            class\n            CreateTeacherSubjectDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/teacher-subject/dto/update-teacher-subject.dto.ts\n            \n            class\n            UpdateTeacherSubjectDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/teacher-subject/entities/teacher-subject.entity.ts\n            \n            entity\n            TeacherSubject\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/teacher-subject/teacher-subject.controller.ts\n            \n            controller\n            TeacherSubjectController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/teacher-subject/teacher-subject.service.ts\n            \n            injectable\n            TeacherSubjectService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/terms/dto/create-term.dto.ts\n            \n            class\n            CreateTermDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/terms/dto/update-term.dto.ts\n            \n            class\n            UpdateTermDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/terms/entities/term.entity.ts\n            \n            entity\n            Term\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/terms/terms.controller.ts\n            \n            controller\n            TermsController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/terms/terms.service.ts\n            \n            injectable\n            TermsService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/user/modles/dto/create.dto.ts\n            \n            class\n            createUserDto\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/user/modles/dto/login.dto.ts\n            \n            class\n            loginUserDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/user/modles/user.entity.ts\n            \n            entity\n            userEntity\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/user/modles/user.interface.ts\n            \n            interface\n            userInterface\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/workspace-quiz-question-options/dto/create-workspace-quiz-question-option.dto.ts\n            \n            class\n            CreateWorkspaceQuizQuestionOptionDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/workspace-quiz-question-options/dto/update-workspace-quiz-question-option.dto.ts\n            \n            class\n            UpdateWorkspaceQuizQuestionOptionDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/workspace-quiz-question-options/entities/workspace-quiz-question-option.entity.ts\n            \n            class\n            WorkspaceQuizQuestionOption\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/workspace-quiz-question-options/workspace-quiz-question-options.controller.ts\n            \n            controller\n            WorkspaceQuizQuestionOptionsController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/workspace-quiz-question-options/workspace-quiz-question-options.service.ts\n            \n            injectable\n            WorkspaceQuizQuestionOptionsService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/workspace-quiz-questions/dto/create-workspace-quiz-question.dto.ts\n            \n            class\n            CreateWorkspaceQuizQuestionDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/workspace-quiz-questions/dto/update-workspace-quiz-question.dto.ts\n            \n            class\n            UpdateWorkspaceQuizQuestionDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/workspace-quiz-questions/entities/workspace-quiz-question.entity.ts\n            \n            class\n            WorkspaceQuizQuestion\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/workspace-quiz-questions/workspace-quiz-questions.controller.ts\n            \n            controller\n            WorkspaceQuizQuestionsController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/workspace-quiz-questions/workspace-quiz-questions.service.ts\n            \n            injectable\n            WorkspaceQuizQuestionsService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/workspace-student-results/dto/create-workspace-student-result.dto.ts\n            \n            class\n            CreateWorkspaceStudentResultDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/workspace-student-results/dto/update-workspace-student-result.dto.ts\n            \n            class\n            UpdateWorkspaceStudentResultDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/workspace-student-results/entities/workspace-student-result.entity.ts\n            \n            class\n            WorkspaceStudentResult\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/workspace-student-results/workspace-student-results.controller.ts\n            \n            controller\n            WorkspaceStudentResultsController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/workspace-student-results/workspace-student-results.service.ts\n            \n            injectable\n            WorkspaceStudentResultsService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/workspaces/dto/create-workspace.dto.ts\n            \n            class\n            CreateWorkspaceDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/workspaces/dto/update-workspace.dto.ts\n            \n            class\n            UpdateWorkspaceDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/workspaces/entities/workspace.entity.ts\n            \n            class\n            Workspace\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/workspaces/workspaces.controller.ts\n            \n            controller\n            WorkspacesController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/workspaces/workspaces.service.ts\n            \n            injectable\n            WorkspacesService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                utils/app.utils.ts\n            \n            variable\n            MESSAGE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                utils/app.utils.ts\n            \n            variable\n            PASSWORD_MESSAGE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                utils/app.utils.ts\n            \n            variable\n            PASSWORD_RULE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                utils/app.utils.ts\n            \n            variable\n            RegularExpression\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                utils/app.utils.ts\n            \n            variable\n            SETTINGS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                utils/app.utils.ts\n            \n            variable\n            VALIDATION_PIPE\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/createUserDto.html":{"url":"classes/createUserDto.html","title":"class - createUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  createUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/modles/dto/create.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        loginUserDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                id\n                            \n                            \n                                names\n                            \n                            \n                                password\n                            \n                            \n                                role\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         loginUserDto\n\n                            \n                        \n                    \n                        \n                                Defined in         loginUserDto:16\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/modles/dto/create.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        names\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/modles/dto/create.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         loginUserDto\n\n                            \n                        \n                    \n                        \n                                Defined in         loginUserDto:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/modles/dto/create.dto.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/modles/dto/create.dto.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PrimaryGeneratedColumn} from \"typeorm\";\nimport {IsEmail,IsNotEmpty, IsString} from 'class-validator';\nimport { loginUserDto } from \"./login.dto\";\nexport class createUserDto extends loginUserDto {\n\n    @PrimaryGeneratedColumn()\n    id:number;\n   \n    @IsString()\n    names:string;\n   \n    @IsString()\n    username:string;\n\n    @IsEmail()\n    email:string;\n\n    @IsNotEmpty()\n    password:string; \n\n    @IsNotEmpty()\n    role:string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @casl/ability : ^5.4.3\n        \n            @nestjs/common : ^8.0.0\n        \n            @nestjs/config : ^1.1.6\n        \n            @nestjs/core : ^8.2.6\n        \n            @nestjs/jwt : ^8.0.0\n        \n            @nestjs/mapped-types : *\n        \n            @nestjs/passport : ^8.1.0\n        \n            @nestjs/platform-express : ^8.0.0\n        \n            @nestjs/swagger : ^5.2.0\n        \n            @nestjs/typeorm : ^8.0.2\n        \n            bcrypt : ^5.0.1\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.13.2\n        \n            cookie-parser : ^1.4.6\n        \n            express : ^4.17.2\n        \n            fastify-swagger : ^4.13.1\n        \n            moment : ^2.29.1\n        \n            passport : ^0.5.2\n        \n            passport-jwt : ^4.0.0\n        \n            passport-local : ^1.0.0\n        \n            pg : ^8.7.1\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^7.2.0\n        \n            sass-loader : ^10.2.1\n        \n            swagger-ui-express : ^4.3.0\n        \n            typeorm : ^0.2.41\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Role   (src/.../role.enum.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/auth/moddles/role.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        Role\n                    \n                \n                        \n                            \n                                 Student\n                            \n                        \n                        \n                            \n                                Value : student\n                            \n                        \n                        \n                            \n                                 Teacher\n                            \n                        \n                        \n                            \n                                Value : teacher\n                            \n                        \n                        \n                            \n                                 Admin\n                            \n                        \n                        \n                            \n                                Value : admin\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/loginUserDto.html":{"url":"classes/loginUserDto.html","title":"class - loginUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  loginUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/modles/dto/login.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/modles/dto/login.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/modles/dto/login.dto.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {IsEmail,IsNotEmpty} from 'class-validator';\n\n\nexport class loginUserDto {\n\n    @IsEmail()\n    email:string;\n\n    @IsNotEmpty()\n    password:string; \n\n\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CombinationsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        Level1Module\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        Level2Module\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SubjectsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TeacherSubjectModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TermsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        WorkspaceQuizQuestionOptionsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        WorkspaceQuizQuestionsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        WorkspacesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        WorkspaceStudentResultsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_CombinationsModule\n\n\n\ncluster_CombinationsModule_providers\n\n\n\ncluster_Level1Module\n\n\n\ncluster_Level1Module_providers\n\n\n\ncluster_Level2Module\n\n\n\ncluster_Level2Module_providers\n\n\n\ncluster_SubjectsModule\n\n\n\ncluster_SubjectsModule_providers\n\n\n\ncluster_TeacherSubjectModule\n\n\n\ncluster_TeacherSubjectModule_providers\n\n\n\ncluster_TermsModule\n\n\n\ncluster_TermsModule_providers\n\n\n\ncluster_UserModule\n\n\n\ncluster_UserModule_exports\n\n\n\ncluster_WorkspaceQuizQuestionOptionsModule\n\n\n\ncluster_WorkspaceQuizQuestionOptionsModule_providers\n\n\n\ncluster_WorkspaceQuizQuestionsModule\n\n\n\ncluster_WorkspaceQuizQuestionsModule_providers\n\n\n\ncluster_WorkspacesModule\n\n\n\ncluster_WorkspacesModule_providers\n\n\n\ncluster_WorkspaceStudentResultsModule\n\n\n\ncluster_WorkspaceStudentResultsModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nAuthModule->UserModule\n\n\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nCombinationsModule\n\nCombinationsModule\n\nAppModule -->\n\nCombinationsModule->AppModule\n\n\n\n\n\nLevel1Module\n\nLevel1Module\n\nAppModule -->\n\nLevel1Module->AppModule\n\n\n\n\n\nLevel2Module\n\nLevel2Module\n\nAppModule -->\n\nLevel2Module->AppModule\n\n\n\n\n\nSubjectsModule\n\nSubjectsModule\n\nAppModule -->\n\nSubjectsModule->AppModule\n\n\n\n\n\nTeacherSubjectModule\n\nTeacherSubjectModule\n\nAppModule -->\n\nTeacherSubjectModule->AppModule\n\n\n\n\n\nTermsModule\n\nTermsModule\n\nAppModule -->\n\nTermsModule->AppModule\n\n\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nUserService \n\nUserService \n\nUserService  -->\n\nUserModule->UserService \n\n\n\n\n\nWorkspaceQuizQuestionOptionsModule\n\nWorkspaceQuizQuestionOptionsModule\n\nAppModule -->\n\nWorkspaceQuizQuestionOptionsModule->AppModule\n\n\n\n\n\nWorkspaceQuizQuestionsModule\n\nWorkspaceQuizQuestionsModule\n\nAppModule -->\n\nWorkspaceQuizQuestionsModule->AppModule\n\n\n\n\n\nWorkspaceStudentResultsModule\n\nWorkspaceStudentResultsModule\n\nAppModule -->\n\nWorkspaceStudentResultsModule->AppModule\n\n\n\n\n\nWorkspacesModule\n\nWorkspacesModule\n\nAppModule -->\n\nWorkspacesModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\nUserService\n\nUserService\n\nAuthModule -->\n\nUserService->AuthModule\n\n\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\nCombinationsService\n\nCombinationsService\n\nCombinationsModule -->\n\nCombinationsService->CombinationsModule\n\n\n\n\n\nLevel1Service\n\nLevel1Service\n\nLevel1Module -->\n\nLevel1Service->Level1Module\n\n\n\n\n\nLevel2Service\n\nLevel2Service\n\nLevel2Module -->\n\nLevel2Service->Level2Module\n\n\n\n\n\nSubjectsService\n\nSubjectsService\n\nSubjectsModule -->\n\nSubjectsService->SubjectsModule\n\n\n\n\n\nTeacherSubjectService\n\nTeacherSubjectService\n\nTeacherSubjectModule -->\n\nTeacherSubjectService->TeacherSubjectModule\n\n\n\n\n\nTermsService\n\nTermsService\n\nTermsModule -->\n\nTermsService->TermsModule\n\n\n\n\n\nWorkspaceQuizQuestionOptionsService\n\nWorkspaceQuizQuestionOptionsService\n\nWorkspaceQuizQuestionOptionsModule -->\n\nWorkspaceQuizQuestionOptionsService->WorkspaceQuizQuestionOptionsModule\n\n\n\n\n\nWorkspaceQuizQuestionsService\n\nWorkspaceQuizQuestionsService\n\nWorkspaceQuizQuestionsModule -->\n\nWorkspaceQuizQuestionsService->WorkspaceQuizQuestionsModule\n\n\n\n\n\nWorkspacesService\n\nWorkspacesService\n\nWorkspacesModule -->\n\nWorkspacesService->WorkspacesModule\n\n\n\n\n\nWorkspaceStudentResultsService\n\nWorkspaceStudentResultsService\n\nWorkspaceStudentResultsModule -->\n\nWorkspaceStudentResultsService->WorkspaceStudentResultsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        13 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    12 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    7 Entities\n                \n            \n        \n        \n            \n                \n                    \n                    17 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    26 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    1 Interface\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/userEntity.html":{"url":"entities/userEntity.html","title":"entity - userEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  userEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/modles/user.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                id\n                            \n                            \n                                names\n                            \n                            \n                                password\n                            \n                            \n                                role\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'email is required'})@IsEmail()@Column({unique: true, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/modles/user.entity.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/modles/user.entity.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        names\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'name is required'})@Column({default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/modles/user.entity.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'password is required'})@Length(5, 16)@Column({default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/modles/user.entity.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({default: 'student'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/modles/user.entity.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'username is required'})@Column({default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/modles/user.entity.ts:21\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Entity, PrimaryGeneratedColumn, Column, BaseEntity, BeforeInsert } from \"typeorm\";\n// import { Role } from '../../auth/moddles/role.enum';\nimport { IsNotEmpty, IsEmail, Length } from 'class-validator';\n\n\n@Entity('user')\nexport class userEntity extends BaseEntity {\n    @PrimaryGeneratedColumn()\n    id: number;\n\n    @IsNotEmpty({\n        message: 'name is required'\n    })\n    @Column({ default: null })\n    names: string;\n\n    @IsNotEmpty({\n        message: 'username is required'\n    })\n    @Column({ default: null })\n    username: string;\n\n\n    @IsNotEmpty({\n        message: 'email is required'\n    })\n    @IsEmail()\n    @Column({ unique: true, default: null })\n    email: string;\n\n    @IsNotEmpty({\n        message: 'password is required'\n    })\n    @Length(5, 16)\n    @Column({ default: null })\n    password: string;\n\n\n    @Column({ default: 'student' })\n    role: string;\n\n    @BeforeInsert()\n    emailToLowerCase() {\n        this.email = this.email.toLowerCase();\n\n    }\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/userInterface.html":{"url":"interfaces/userInterface.html","title":"interface - userInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  userInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/modles/user.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            names\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            password\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            role\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        names\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        names:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        role\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        role:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface userInterface {\n    id:number;\n    names?:string;\n    username?:string;\n    email?:string;\n    password?:string;  \n    role?:string;\n}\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bcrypt   (src/.../user.service.ts)\n                        \n                        \n                            bcrypt   (src/.../auth.service.ts)\n                        \n                        \n                            MESSAGE   (utils/.../app.utils.ts)\n                        \n                        \n                            PASSWORD_MESSAGE   (utils/.../app.utils.ts)\n                        \n                        \n                            PASSWORD_RULE   (utils/.../app.utils.ts)\n                        \n                        \n                            RegularExpression   (utils/.../app.utils.ts)\n                        \n                        \n                            Roles   (src/.../roles.decorator.ts)\n                        \n                        \n                            ROLES_KEY   (src/.../roles.decorator.ts)\n                        \n                        \n                            SETTINGS   (utils/.../app.utils.ts)\n                        \n                        \n                            VALIDATION_PIPE   (utils/.../app.utils.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/services/user.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bcrypt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : require('bcrypt')\n                    \n                \n\n\n        \n    \n\n    src/services/auth/auth.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bcrypt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : require('bcrypt')\n                    \n                \n\n\n        \n    \n\n    utils/app.utils.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        MESSAGE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : { \n\n    PASSWORD_MESSAGE,\n\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        PASSWORD_MESSAGE\n                        \n                    \n                \n            \n                \n                    \n                        Default value : `Password should contain upper case ,lower case,number,...`\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        PASSWORD_RULE\n                        \n                    \n                \n            \n                \n                    \n                        Default value : /((?=.*\\d)|(?=.*\\W+))(?![.\\n])(?=.*[A-Z])(?=.*[a-z]).*$/\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        RegularExpression\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : { \n\n    PASSWORD_RULE,\n\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SETTINGS\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n\n    VALIDATION_PIPE,\n\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        VALIDATION_PIPE\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new ValidationPipe({\n    errorHttpStatusCode:HttpStatus.UNPROCESSABLE_ENTITY\n})\n                    \n                \n\n\n        \n    \n\n    src/auth/decorators/roles.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Roles\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (...roles: Role[]) => SetMetadata(ROLES_KEY, roles)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ROLES_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'roles'\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
